cset: moving following pidspec: 4067
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.313384064 seconds)
loading group "string"... done (took 0.635744837 seconds)
loading group "linalg"... done (took 7.688925046 seconds)
loading group "parallel"... done (took 0.16061227 seconds)
loading group "find"... done (took 1.172865501 seconds)
loading group "tuple"... done (took 1.855766625 seconds)
loading group "dates"... done (took 1.255680716 seconds)
loading group "micro"... done (took 0.217874886 seconds)
loading group "io"... done (took 0.925970963 seconds)
loading group "scalar"... done (took 37.996862926 seconds)
loading group "sparse"... done (took 12.223335905 seconds)
loading group "broadcast"... done (took 0.983694746 seconds)
loading group "union"... done (took 13.434536948 seconds)
loading group "simd"... done (took 4.898672246 seconds)
loading group "random"... done (took 9.457618197 seconds)
loading group "problem"... done (took 1.90706145 seconds)
loading group "array"... done (took 22.099680251 seconds)
loading group "misc"... done (took 1.792283365 seconds)
loading group "sort"... done (took 3.644553799 seconds)
loading group "collection"... done (took 18.875919524 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560842814 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134999247 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143159138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131564126 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156410874 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.127050805 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135061386 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093293818 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.899420915 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159247393 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123367566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42479625 seconds)
done (took 5.567303642 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177845317 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088082842 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091080314 seconds)
  done (took 1.317142089 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073286542 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133333951 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074694041 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075083586 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074695462 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074438126 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075183222 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074248125 seconds)
  done (took 1.720838527 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07922804 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076475591 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074301457 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.076375588 seconds)
  done (took 1.446348287 seconds)
done (took 5.885447824 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792543207 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217434974 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191639909 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.409623445 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137554455 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183553888 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647528246 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327397732 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192145375 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084560248 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11571971 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.357145147 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128974768 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648627424 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080815986 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097571516 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.148053181 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428102308 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072791112 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089609795 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096977125 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134482197 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090226926 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08160948 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157096312 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073741774 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14453653 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088568109 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071696457 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225383958 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180228265 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663784446 seconds)
  done (took 10.530504974 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10500864 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106918738 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076782305 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133568865 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104405335 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078106345 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082845259 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075274941 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.100846708 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.138274044 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.098505685 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.114212287 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073826181 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077155997 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090805084 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.218198414 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08857331 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089556933 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07800703 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086584151 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116576931 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086250794 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087987522 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087776105 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137389981 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.190025243 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105686236 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105844877 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074854198 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089382168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122621115 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136559052 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073832516 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073529655 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133717232 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102184654 seconds)
  done (took 4.918689873 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.989674657 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15036934 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099511972 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141822871 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072851333 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092304755 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.118224119 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073180487 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08801556 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217403797 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.451001638 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.597232184 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.118821431 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118330089 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108450655 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075348756 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076339251 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075582912 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511088008 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108740968 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116672055 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088870194 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078337885 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101095957 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076608196 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076393912 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072228034 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07670602 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122789824 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.073293815 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081857683 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.308803917 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130870316 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076466534 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071757648 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.948485153 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.318014605 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075043449 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10897064 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176008027 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095340946 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149253719 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076532133 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073334406 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168693368 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072858091 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077466948 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073651639 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093109281 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111717452 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129593219 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073458248 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074037033 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179209841 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071177958 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08697474 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.165808252 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158961973 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073890984 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072927406 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299722464 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09817156 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077716828 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072855437 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183848373 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124738979 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075842994 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075258368 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076373695 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076265574 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368462069 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073981975 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.876550477 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0764345 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086101402 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077347706 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076616703 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080776147 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080760995 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099202518 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073728992 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08154274 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07363975 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073840961 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073944877 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090948201 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.494078342 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074803885 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075229906 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072733916 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098931082 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103402636 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075626521 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073350491 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107515282 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075004635 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074209026 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074363261 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091663992 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078158147 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12062976 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074944599 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098052015 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105481307 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077699709 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106054918 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086250105 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075600623 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.445289518 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072985822 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07527258 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072644618 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07550077 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073269512 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089332035 seconds)
  done (took 22.594642584 seconds)
done (took 40.173973488 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249491983 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077441317 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07706059 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07755317 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077865257 seconds)
  done (took 1.781614853 seconds)
done (took 2.993279401 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127647373 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107117309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072205014 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10544583 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075695925 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107539201 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107163492 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084442474 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107031485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071800166 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103898026 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071575474 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07163157 seconds)
  done (took 2.433905282 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088818014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091544047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078009165 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090735054 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070901967 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090861081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089402657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097081553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089525737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080703144 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071358887 seconds)
  done (took 2.141968596 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088439954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091542046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077423528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089835425 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074077405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089603276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089157509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093285283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089153844 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081511054 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071223471 seconds)
  done (took 2.136447469 seconds)
done (took 7.909753297 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082033779 seconds)
  done (took 1.269898689 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.542173858 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.636015583 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085378524 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111634023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197237642 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118672101 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.252292141 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.09130641 seconds)
  done (took 8.382971889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096521147 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089719956 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079647213 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079393307 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076561065 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077426216 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079695847 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078269453 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076537028 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078154051 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077088171 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077117726 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079505709 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07597685 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076746395 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078670741 seconds)
  done (took 2.541680644 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097535767 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098330378 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081370235 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082330186 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080723687 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078995133 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081479272 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080810384 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078217293 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079856914 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082288943 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08048296 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078902697 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070729261 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080872992 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083073821 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078496123 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080983855 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081957625 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082555957 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082309812 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070748981 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078688258 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081139175 seconds)
  done (took 3.241729217 seconds)
done (took 16.63558036 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112817847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075823153 seconds)
  done (took 1.383677394 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084708015 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087144131 seconds)
  done (took 1.375830996 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085762861 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069448924 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09252219 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08234799 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072638261 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072601462 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092509823 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072691502 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072375595 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072408705 seconds)
  done (took 1.990587749 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072431446 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080557188 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074658669 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08682334 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079754517 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070387323 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078699253 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074428777 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082945544 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069513429 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077124846 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089887898 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077634241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091328269 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078395634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074798252 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076626838 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0736694 seconds)
  done (took 2.617694601 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070354406 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071681213 seconds)
  done (took 1.353025971 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072092925 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069247206 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07314838 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073297966 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070304141 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069086361 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070230647 seconds)
  done (took 1.70291808 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396431003 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123431109 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31377203 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079679136 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089093101 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263958422 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073677223 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078494778 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078935745 seconds)
  done (took 2.746557573 seconds)
done (took 14.381586713 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085679775 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095252571 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102947834 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392013014 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.100138449 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074513397 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121236257 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186047669 seconds)
done (took 2.378208672 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217625062 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.781268659 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.49483699 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215214758 seconds)
  done (took 2.702698204 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345272569 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.211354776 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067374386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075985749 seconds)
  done (took 1.921465831 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072182846 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076965165 seconds)
  done (took 1.36822719 seconds)
done (took 7.429524498 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072475385 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073131267 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.071823764 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091339339 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073320647 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071157363 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071401136 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073341386 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073457137 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070886829 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073515015 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.073689584 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073626372 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078076213 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070849676 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07085933 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07324714 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072851934 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070894962 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070569157 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070852042 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073417487 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070411502 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070673992 seconds)
  done (took 3.001813733 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088631868 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073065589 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077856111 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077823903 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.076141552 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077661173 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077602939 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072938659 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077556621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07525812 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075311645 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075602753 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075264584 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07553591 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07527283 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075320763 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077516956 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073164055 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075297222 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075509382 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077315558 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073201506 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075208015 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077207944 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075179076 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075189435 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07556406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073496149 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077680484 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075270931 seconds)
  done (took 3.509257835 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075175665 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067786637 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070641394 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078328064 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069879121 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.070627644 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070766745 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070148782 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070645999 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069804807 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070950566 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070064769 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070396427 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070671375 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070646972 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074783431 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086607587 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070517831 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06982525 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070421709 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076620032 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069772762 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07003172 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070050352 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070033432 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070140343 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070505764 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069999521 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070493524 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069762156 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07432951 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074297872 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069858347 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077676952 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074232512 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069667012 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.074674622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069699855 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070642287 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069850157 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070016504 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.069882989 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069958002 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078106481 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070004989 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071295945 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070274001 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071255612 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070406644 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072375506 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070072076 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.069910276 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072405158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071380726 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075526502 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06979333 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07096923 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069657043 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070843684 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0705753 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069745013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07075474 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073624019 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070692325 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087154834 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078109233 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07006402 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071978023 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071159774 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073707973 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071857924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085891611 seconds)
  done (took 6.420240541 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092543999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092334581 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071812577 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073339171 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068281593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070980103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07658085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070778061 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072793692 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09021394 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070724503 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072974094 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07289618 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074979817 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070801327 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073481632 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079212755 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068715956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070451492 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074988092 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071635136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076959659 seconds)
  done (took 2.901098952 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154069016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07735526 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112983568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082176543 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077150557 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081740864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076867225 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077058401 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077322732 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074824624 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075116474 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077215272 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077144943 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074783604 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074674626 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074821031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077229746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075201505 seconds)
  done (took 2.734416835 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082886616 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072213864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095315478 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072980417 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073370136 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075663335 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078517233 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081647674 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075755515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073648776 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080730819 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075952516 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075866878 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073262258 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075535129 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073785632 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075810027 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073438353 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081141234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077716765 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077726737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081333292 seconds)
  done (took 2.939174995 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085466056 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073464218 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087163138 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074665807 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068223542 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071063535 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077357173 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07372087 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07729195 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075006643 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072810962 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070873821 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075636134 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073008335 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075380523 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073285208 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074693616 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073517249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07526802 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068300118 seconds)
  done (took 2.732807579 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089931423 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073030156 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074399804 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081037581 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074605807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074756963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081195959 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074440195 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07437777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095255439 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074470453 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074464817 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081145179 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081141288 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073983535 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081153215 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081313915 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080870711 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074257459 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075205668 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095114723 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074279156 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080477975 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07486351 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074275835 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074424275 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074808606 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078390127 seconds)
  done (took 3.435047543 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072595439 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072778964 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071760917 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071372029 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071268227 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071590692 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071463705 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.070877941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073779745 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071086829 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073269761 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073591689 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073366766 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0738019 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073659411 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073734448 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07356876 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071069814 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071142032 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071179021 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073733764 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073188301 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073255634 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071260033 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07065153 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073433982 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071327866 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071013067 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072778007 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07133993 seconds)
  done (took 3.410365533 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079790435 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080230727 seconds)
  done (took 1.40113354 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067739423 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087762627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070058212 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07856488 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076584512 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074177792 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07968744 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076100569 seconds)
  done (took 1.847998495 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087488533 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082415357 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073559552 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083683976 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081971665 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089263365 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131065438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073427321 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080155476 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071519132 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086070052 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07326623 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080289421 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073745182 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079861999 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080948088 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070434303 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.078787358 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074557599 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071203029 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073713371 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082432788 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076772264 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06808446 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075121 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096242652 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084279986 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072282528 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076961576 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081460322 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080296975 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067369932 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072688478 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072862783 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070807408 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081606189 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087557616 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076974333 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08251118 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073323173 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081404041 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068300769 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07839276 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080547291 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084654346 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.072849401 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073411123 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067988872 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071796438 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075599454 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068332254 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074075917 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067980176 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080956068 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077188808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084232469 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071780365 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07501641 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07662081 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076485319 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080958896 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075873813 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077013354 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072429333 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085041349 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079199677 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081637815 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068155185 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067543417 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071234685 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083273415 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097488257 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079581985 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073602983 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073768436 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071345399 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076920527 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074092559 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078669097 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080582314 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072625172 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07832416 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081444914 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07428224 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076894979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079941794 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.07145866 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075739668 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071934336 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089957689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.075023766 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071591209 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072261712 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084821385 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.078039888 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073245806 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07201175 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081341126 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.067477127 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.073605304 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073339062 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074140543 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082754315 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077026558 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077282707 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082321027 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079356678 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073541682 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075868849 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069687323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.203267755 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074094491 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082283855 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.067823779 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077469652 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0751132 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073897876 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08297804 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.071782965 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074128338 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082176454 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080150256 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071347264 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070545388 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077342265 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.072809675 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075534684 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082073839 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071879057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06838504 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068459423 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.079463835 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073230413 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078084097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077613305 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077817167 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067621594 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071672321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077242537 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.081869957 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074380343 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075457148 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08015405 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074832719 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072777146 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080700086 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077891492 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073327702 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079137924 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074694513 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067674916 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07550504 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076465123 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071912464 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077579673 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075184361 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075471546 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073006817 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071539166 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.078747416 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073520568 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073021209 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074276352 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072201924 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.085081432 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075966516 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068419142 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071543096 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08043578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071881618 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072502614 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073272175 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076284436 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073774419 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071353771 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072707769 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075879074 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08115022 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076188439 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074042776 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079406738 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086592994 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072449613 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076008697 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072708775 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073719887 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073420738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082991432 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080178443 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077364306 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076375261 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070206872 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079220354 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081815843 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073296263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071163044 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073273002 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077193874 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.080239564 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077157429 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073648084 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071338888 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075269068 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075938998 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076925564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072779705 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073644695 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078915292 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071854 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078870547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074033406 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.084913646 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077651127 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0685602 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075458697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071226583 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.080438192 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.068364218 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07192199 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072991717 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073157847 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071686286 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075520239 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066962399 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.214065829 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082665226 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075831508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074371695 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.073911532 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082066733 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075774917 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078515888 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078478131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080404837 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084994397 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073700829 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080676038 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08436894 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073134343 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067418055 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.080100523 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071939648 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071925049 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072366001 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071844508 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077567591 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080664401 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080417605 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066990992 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07638631 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071518896 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073588003 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068556759 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078721283 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076593148 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075639375 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081326008 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074025763 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073150181 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07757928 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072571326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073421784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073641885 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076229628 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073925626 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075677107 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073756778 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077140222 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073546326 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071087435 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075796952 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072869275 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.073941399 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078632749 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072636427 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073982548 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076098575 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074352966 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07454327 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074294967 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073180862 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077207911 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074973519 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074236169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07632515 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068180542 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081421688 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07258351 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081447276 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07468406 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070024811 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078876053 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076959565 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077761348 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073298929 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073822242 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075384097 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072241357 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076657471 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081816469 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072026258 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085288871 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080621694 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075140746 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077046208 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074506821 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075892808 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07310545 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075017666 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073415624 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07460942 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072760038 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077822571 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076514603 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074808288 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07562105 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073444414 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074495908 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074096221 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067900314 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073235287 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073307662 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07266506 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082816258 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073254685 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073720834 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072080765 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073703977 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072155081 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070532229 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079460286 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080635098 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072790807 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079800403 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072757134 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07596184 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083800546 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067157112 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071008511 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.206240539 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.073725069 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082853738 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074185352 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084388316 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07419518 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074007691 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070961297 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073905818 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072028138 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.067871114 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071477452 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077240251 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073468963 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072529952 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073708943 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076712456 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073983363 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08341027 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072955687 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075045665 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.073329352 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070755252 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073950802 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073856625 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076786517 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0734381 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071902715 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070997461 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072612612 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074629345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075272995 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07337184 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075560802 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080931453 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073069958 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076939135 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075875229 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068685809 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076225992 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073021699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072626217 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073553537 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08083023 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076806529 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073795419 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083815146 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072631504 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07490952 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073748938 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070545531 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072512517 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072787683 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072547548 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073265277 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074397611 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081643733 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071011135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076894559 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074319508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074677762 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080223779 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073735331 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077020023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077938157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074147871 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075883512 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082132075 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076633697 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076879907 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075421456 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075775596 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079737376 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073204547 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080830067 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074281759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073860301 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075775752 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071786802 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073272919 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072833189 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072363253 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080049287 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073942308 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073081013 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073336263 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070968109 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075032548 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075717244 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081731076 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076812437 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077414243 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06876614 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.070691664 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074387677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072834845 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075782307 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077170639 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080199039 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076302652 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074954215 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072934137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08397789 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080233324 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.078130654 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072586518 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077621457 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073396975 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075746833 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075155096 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07407325 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074136574 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077442781 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075722068 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073267713 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079692855 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076926972 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.208608348 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076946681 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07649425 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075497241 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068502009 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.073385986 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076027726 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079304061 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.076722644 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073589642 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085050292 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072173807 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075074647 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075254537 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072493394 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078772795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068543104 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075896477 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074001715 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074451849 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069047289 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073757234 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072470088 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077635827 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073083569 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068693612 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085340581 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083986645 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076693498 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073404719 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072060022 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068689724 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068606306 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073964701 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073977736 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076085181 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084846621 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.072920271 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07331251 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068703037 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073666153 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076643149 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077194784 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070563314 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068491609 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073562903 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077152465 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079599077 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071419051 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072815852 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076575835 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075933132 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071467765 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075508646 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070203108 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077415254 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086251669 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073385164 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075099403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079687406 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081290818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073743041 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068889662 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073125162 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.076980057 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074540146 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073596877 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.073750737 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089762121 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07785162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073672382 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072460084 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.079557497 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073472748 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082904234 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074177776 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073676126 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.079195406 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.076334533 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081000407 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077354984 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081049209 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.076994035 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.078294974 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072708019 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074444424 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.07178753 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.074067964 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074227176 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07386554 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078181693 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07962163 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073495894 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084908905 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083836602 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076057154 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070822546 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073643689 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073782078 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069074056 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074152276 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071707683 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071980728 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071773305 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072868601 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075882527 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07900727 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074930389 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073267479 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072849616 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067627327 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.077089592 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075770427 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075161028 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070539998 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072963701 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.208915623 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.079540126 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077307473 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073396127 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076295093 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.077494439 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075511445 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068606502 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081305268 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072979223 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075521327 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073913915 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073897586 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074213109 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078319058 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078041521 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075254926 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076335768 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078447813 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076169647 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.070505439 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070591429 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079716915 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.07038274 seconds)
  done (took 47.015024872 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104100039 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06974109 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068529926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069456077 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0799313 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070348743 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068952993 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069961925 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070012396 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071918151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068799064 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068894363 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076992746 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084329682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079146521 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073110562 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068728186 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069643997 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068552601 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069867483 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076492034 seconds)
  done (took 2.857311252 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077980562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082959414 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082320235 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089966746 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078246182 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076699252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081744358 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076863763 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084860804 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080352831 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084607648 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07687761 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079838591 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079825519 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079723549 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077159475 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085412166 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077902095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077001962 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082371933 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077223828 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082591481 seconds)
  done (took 3.074796018 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071883354 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.07177248 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075875846 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068576 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072415028 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068283234 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075617985 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070856914 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075063168 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08166062 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07295831 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072856334 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07511331 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068280136 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074050861 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070470882 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114554365 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075775756 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072675135 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073090029 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06784411 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074736242 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06828192 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069029241 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072736669 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075513959 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073576689 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071145887 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072120409 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072359441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072822752 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070784869 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075027272 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074153665 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072573469 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072898395 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07626991 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072275939 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068543975 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070933483 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073994398 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068849323 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073410555 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.075168763 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071365221 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071165144 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075364112 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073111335 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068468009 seconds)
  done (took 4.902513424 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082647936 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116990439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075568726 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095826734 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08629129 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078563571 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077618801 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096010918 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070080402 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070672079 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087574944 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085194039 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072348673 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077113188 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079414307 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072270048 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072798182 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071325952 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075363295 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07179134 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075544718 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079228285 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086391336 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084297466 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076260046 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071378922 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071330189 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076474796 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083904762 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076048614 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076767019 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077409213 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087172312 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077382421 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07142774 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074532297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088363139 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072610757 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074768372 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.07054674 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073970459 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076126449 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079213029 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086803145 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071927622 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.076119222 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07210507 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069743013 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084068082 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074467629 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079641067 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085533553 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076565896 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072761208 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076287263 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086562407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071967948 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070366196 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075441977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08362511 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070261221 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075602215 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085170677 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074355362 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079457118 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084968548 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077452171 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076028976 seconds)
  done (took 6.761760208 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080926811 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102300882 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089846494 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090288053 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083187137 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082446824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083056366 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083864486 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091531114 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08668789 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083152679 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123393476 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07852009 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085649025 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082719167 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082696927 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08331569 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082037119 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082772512 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082444697 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083076075 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089161049 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083068038 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089586314 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086226139 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078701706 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082906884 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082797454 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089206003 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082753617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085550057 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082868829 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082412162 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089433331 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086073862 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08285258 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071909245 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083057593 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082544172 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083166957 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078297609 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089695412 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082681832 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078453716 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082728341 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082638372 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088984742 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08570883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084924153 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087216004 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082831969 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089359914 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082603851 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083164752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089514277 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092727644 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089580879 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089900715 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08297779 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089378261 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105911087 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091713015 seconds)
  done (took 6.662051646 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085380478 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078025444 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.091751269 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068214604 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070788311 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07891087 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071165008 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071025943 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079489757 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079900721 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081707045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078867226 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081820688 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081905601 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078733929 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081732026 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078914904 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078955132 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080161682 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078058223 seconds)
  done (took 2.927852088 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080809588 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089378921 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074061079 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078416983 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076367705 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078608794 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075538099 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076179917 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074162071 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076502565 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082608902 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082496727 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0741558 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078106748 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082433419 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078193367 seconds)
  done (took 2.591831778 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087695866 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.079980681 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084186927 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07297339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073434931 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069075815 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072535003 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067747946 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068638138 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085635285 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073068328 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084304335 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072728537 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071750696 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06905026 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077987597 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068387563 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069674258 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072473587 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08385198 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077140268 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070768527 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07661921 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072363677 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075250206 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077603065 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071410793 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073721849 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069610384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073224243 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075744526 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076370506 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069905703 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070395625 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071606798 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069895862 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072587985 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0733828 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078646123 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.07234922 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071439548 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075295943 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072697421 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074057808 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069313128 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072881564 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069510962 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075260641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070268335 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076002594 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072800533 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07503842 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072920697 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079847784 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075091374 seconds)
  done (took 5.410390409 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086549899 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07600225 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068964481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071156316 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075976264 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.075110245 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077115488 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073820928 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074525901 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07062472 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07464269 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075873376 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074658189 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077100155 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074772747 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076319687 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068418692 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074233965 seconds)
  done (took 2.69472471 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077620671 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072329084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080202197 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073120551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073897441 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075932449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068427255 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071165851 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071174939 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0729519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073168983 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075510152 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071381576 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076229522 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073431408 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07310873 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075193646 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071105302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073571967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068586253 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075643866 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071086552 seconds)
  done (took 2.954918924 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099043225 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089823185 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146550353 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.087246546 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093968675 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078930674 seconds)
  done (took 1.936572365 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097320552 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10633945 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073488926 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076451087 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082801773 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076864833 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076808395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0771344 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084734759 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08209675 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080145969 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08466485 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084555935 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083988336 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082496512 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0827191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077017481 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07744731 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07449275 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0893682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07751888 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084389863 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07763246 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076936161 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077371755 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084023901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084490121 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082167773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077184773 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084898857 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082347701 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077142669 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085528746 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082360384 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076672841 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084371471 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077207635 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089474794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082512095 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084376036 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076638997 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082244435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084476998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081223167 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085045528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077461713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081302838 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077512602 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0773738 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091193908 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082746127 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083734701 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082655554 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085036723 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08451295 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090868035 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082684547 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084070789 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082407228 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082674089 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083840281 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08257888 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0837999 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082250188 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082213374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084157988 seconds)
  done (took 6.771961988 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108741305 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074091616 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07828844 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082943816 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0846598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077683399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077499877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077680515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078194928 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074348986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115213844 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077712164 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084136164 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083785709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077585323 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077137017 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077170423 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083921905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074351005 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091597807 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07750453 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083865118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084063775 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084019153 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08251447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082720129 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077383632 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077380211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076984649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077301669 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081522419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077605131 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08385316 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074324186 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084124102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078126469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077344476 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081516947 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077214968 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082134366 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084087672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089776049 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077295987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077294099 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082249478 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078277431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077969985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074517047 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077507622 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074380599 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082488639 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082636314 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082408329 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084788935 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077713089 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077437718 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077972463 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077396434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078920257 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082532851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084354831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077473696 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091169932 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077126395 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07744412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084062739 seconds)
  done (took 6.709655316 seconds)
done (took 138.825243815 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197551091 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175903508 seconds)
  done (took 1.701801519 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074162101 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100969639 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083226135 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137080899 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072103288 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105539618 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104207492 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082611111 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073441234 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074171952 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073526281 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075666661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138586429 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07172192 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072545629 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075899019 seconds)
  done (took 2.761951089 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102334979 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163902488 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109192646 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072421171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106206181 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079352686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.075134359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082165229 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07782661 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072467322 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079842853 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077208018 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07281224 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07722785 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078324139 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079654284 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072851937 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079641262 seconds)
  done (took 2.907290663 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101458418 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095495848 seconds)
  done (took 1.549032779 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164763615 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138311405 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20756621 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343231438 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162989666 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150339774 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151132737 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.1496304 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120268758 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140104486 seconds)
  done (took 3.071867863 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105282999 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156239998 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282964172 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124686322 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080393961 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098896702 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12611506 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086331818 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08731983 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086961673 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086522024 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.08368242 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107587954 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080446934 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082048993 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082902181 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109924157 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081164348 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082225589 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082258888 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108703324 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07352587 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.08122048 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08124131 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.0835627 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083803822 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073637059 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073303502 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082749715 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082111438 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083809292 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097452871 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084234394 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109701146 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078752894 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110671885 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084154194 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080587288 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082051343 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080737398 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085157688 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08490759 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081536893 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083854168 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074366866 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084300795 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074019843 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074064932 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084803569 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075112875 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.086022378 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083621803 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109977115 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075201429 seconds)
  done (took 6.361682717 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113485534 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113487156 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07833362 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120159035 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111848547 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07699903 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113036416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105942461 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.114757396 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078551881 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075561543 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077474547 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086391417 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.090006707 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.125199423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.115470526 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078756224 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077276758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115088825 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.115216707 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075119829 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108468973 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104698975 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.114356094 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075303765 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07715183 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075872169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077530952 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082781544 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084409356 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075881347 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086190796 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.093628356 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081168623 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072956951 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07524225 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076402072 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085101696 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085418749 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085337878 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081388552 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074316993 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07540335 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076921814 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076441217 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07480994 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084068501 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085771401 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084573536 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07552021 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07754642 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076267233 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076677598 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085377895 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083889859 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086644865 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086134545 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076260696 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075557109 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078823597 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085642718 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085967563 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085546807 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079814694 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086037607 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075876737 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088043464 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091416901 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076056088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077119777 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075400581 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075930654 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076818082 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082994888 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.083583291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077126842 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075671918 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075507 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085739577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083868519 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075371315 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083006539 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074775985 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075676875 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077266421 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077132859 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083630242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085591856 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07775145 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076909663 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075735765 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076069324 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074543814 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082792306 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084674476 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084597811 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083305923 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077512768 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.084500114 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082685135 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.212992152 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.085805962 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076939353 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076883569 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075052134 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081642421 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081078867 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086338783 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076692681 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076546287 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084319704 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086648731 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077275343 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084307058 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086184013 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085124175 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075636069 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08814046 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077673156 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087726818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075070639 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086704886 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076486443 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08489828 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07613246 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074987713 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076341177 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.084933746 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078579046 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075962918 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077681861 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076324388 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084401748 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088419028 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077111595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084042865 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084745291 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07708977 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084358822 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075903949 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085128093 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075604005 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077387933 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074701505 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087101769 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07655391 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075936674 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075891062 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086378342 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075870575 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085746006 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083553681 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075418588 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090360984 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083399988 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083104485 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086124936 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077571287 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075391266 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075841105 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075802672 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082918174 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084977614 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077339931 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075533631 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083219874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086322136 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074868618 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083707301 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083621397 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084500333 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075888879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075908409 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087411635 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.087023069 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.083724217 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.083520189 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08472154 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075991594 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083210174 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084532359 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075642336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089734138 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076702985 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088019933 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083909453 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080531102 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08388086 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086246948 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085919448 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086621182 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08818762 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075624442 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075687031 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08399924 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075666851 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075403705 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082853314 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076481561 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076458071 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.088494602 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073592913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222140118 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076596976 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086676909 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075837876 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077912213 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089523914 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076702806 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0807434 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085674611 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076420154 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083484291 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087050521 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084780353 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076628549 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077450984 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086987082 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083058648 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076584675 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077316505 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077619911 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084718359 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083843134 seconds)
  done (took 20.183613016 seconds)
done (took 39.90261972 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.198823136 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154154757 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.168846168 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121157108 seconds)
  done (took 2.073773027 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115120083 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102623257 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09783196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.07299532 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103021472 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073068737 seconds)
  done (took 1.943434588 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279155135 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199691008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181766858 seconds)
  done (took 2.041246941 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206563376 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192159293 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443997923 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.273436815 seconds)
  done (took 2.588797443 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144860243 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093227669 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074734726 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090840611 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133786863 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162414813 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103666015 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128516933 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085879921 seconds)
  done (took 2.445933855 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152052454 seconds)
done (took 12.625051504 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.255269214 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.195611491 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107299431 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.099377038 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.182498287 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075522891 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.215137208 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16841778 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.126479768 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109367939 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.16378878 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.082970864 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096535035 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.241766086 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087424729 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095581393 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080078847 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.303725909 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136626425 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142047264 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.08135542 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.185838524 seconds)
    (23/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.173064102 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.212167073 seconds)
    (25/309) benchmarking ("sort", Int8, false)...
    done (took 0.154805541 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091404642 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096103305 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181648502 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.081433769 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.173639172 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111536077 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060100945 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086938708 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081922181 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.090523752 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087477399 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121711299 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.193011651 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158187876 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.119378627 seconds)
    (41/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190334111 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081339334 seconds)
    (43/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073827253 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199943993 seconds)
    (45/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.086291435 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.08216355 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072258566 seconds)
    (48/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.151588742 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086815833 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070687664 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136481052 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.082610684 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.154309703 seconds)
    (54/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.222584232 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.197993977 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.074248191 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.152198402 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.059450457 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.084711246 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090451618 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116311137 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.073519211 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098880332 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095806688 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072903345 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081867621 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186671447 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098560874 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128861118 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072235678 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.206174997 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.059362349 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167284108 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.060633897 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.081981365 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.152707746 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09377638 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146138086 seconds)
    (79/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.059906497 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082775432 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085424928 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.251782016 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162654378 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07856909 seconds)
    (85/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.115791909 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084901444 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.166076351 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07287415 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074349868 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091801395 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.164093933 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.074070702 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198995498 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.114104872 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189499583 seconds)
    (96/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.060156293 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080452858 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.113351753 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07993092 seconds)
    (100/309) benchmarking ("sort", Float64, false)...
    done (took 0.138666059 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060030779 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.235627701 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17967338 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.177713123 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10010683 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200434957 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080451064 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.059384855 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188997037 seconds)
    (110/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.082939927 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074719046 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.16994914 seconds)
    (113/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176613329 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080446964 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059200211 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061916805 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093231606 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083301126 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080889514 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.084711366 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219211031 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073372825 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.169994524 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073170387 seconds)
    (125/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.072483329 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099534599 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082720021 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074233241 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077839848 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0802963 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156405739 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.077534051 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061224354 seconds)
    (134/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083184332 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079600612 seconds)
    (136/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169116572 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.059464262 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.060878404 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084695471 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097713708 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083421993 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.060605636 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059044058 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080980328 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073466146 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.111837668 seconds)
    (147/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.120439319 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088327375 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081361938 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072180386 seconds)
    (151/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070982505 seconds)
    (152/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05938041 seconds)
    (153/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077594238 seconds)
    (154/309) benchmarking ("sort", Float32, false)...
    done (took 0.140091517 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127422639 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.071440459 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.08132889 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.060939538 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.060754097 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098354067 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.075321913 seconds)
    (162/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.071320815 seconds)
    (163/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.101865479 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098520809 seconds)
    (165/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.097650749 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082597789 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077660985 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080066785 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095363016 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083667078 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153376883 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.1032272 seconds)
    (173/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.060852619 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.095137946 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084571723 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073149683 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081033722 seconds)
    (178/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077267365 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183988835 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09311815 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.079578241 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059203413 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07367793 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083340618 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146983795 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.358870161 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159938418 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 0.205134364 seconds)
    (189/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.122340914 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073911354 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.08410759 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.203199335 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.074803958 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080190799 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061647695 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097158993 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.189317154 seconds)
    (198/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167003029 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.075113077 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074147254 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.111135092 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087392317 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08174634 seconds)
    (204/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.071931344 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062410375 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073436525 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080697443 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079788805 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074756513 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059855707 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08088851 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.081168207 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121012539 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.060604601 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080615217 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124190839 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.060602776 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.112220093 seconds)
    (219/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.088263057 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059829373 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061193678 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.081387561 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082902189 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.076056532 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07714957 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.098143328 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149021414 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.07186793 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096684896 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073908561 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07961512 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073200487 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.081403536 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103090629 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07315718 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07471644 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.131257162 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059322283 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069481042 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181212026 seconds)
    (241/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.082315391 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.059413614 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073753168 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080419871 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156009067 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081515927 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.059427981 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074509728 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080357927 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06115901 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.060765546 seconds)
    (252/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075984958 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07307017 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071959549 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.076405503 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.059202862 seconds)
    (257/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.071468838 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.059244667 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076294262 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100269999 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096065402 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072949055 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073337705 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.060782473 seconds)
    (265/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07957529 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.086551588 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097345561 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074938285 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.073110402 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072484455 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.059214391 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075394094 seconds)
    (273/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.060327728 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081008614 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187284177 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073309746 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079128516 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081612042 seconds)
    (279/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.165811891 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.059063 seconds)
    (281/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070502814 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072382795 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081256759 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07450574 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061554081 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132418227 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.060669572 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059314692 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072889532 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080311644 seconds)
    (291/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.059494337 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136920403 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07191644 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.059104434 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097673588 seconds)
    (296/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086107184 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078883287 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06221009 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081437767 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.059723976 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058903881 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.059002868 seconds)
    (303/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098111976 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123907287 seconds)
    (305/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060645951 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072542668 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.240743687 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063269771 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127973962 seconds)
  done (took 33.641983362 seconds)
done (took 35.035342448 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088567555 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098415342 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081893785 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101894576 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.089654276 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086042613 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081075521 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08639229 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.088919635 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089956215 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.087106963 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.063647812 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083060382 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083316213 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.082951833 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099879122 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087779687 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081904586 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.082082308 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072820406 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08191211 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073697003 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.075367 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.063638356 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086746962 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.080146914 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.082528937 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082610044 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073379855 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073948686 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077554233 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.082229357 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.07353263 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.088902331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.082103842 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08148493 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082927954 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085444203 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075320924 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073539199 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083405424 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073191344 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081211847 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081948651 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080092891 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079616125 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081676903 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085837288 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099390028 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07607271 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083517883 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084497404 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084952426 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081310303 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078146064 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081504219 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079251013 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098819137 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082617873 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076352074 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082861873 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082111126 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079445686 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081112741 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081464859 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083744518 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08563639 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079706152 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083175074 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080353159 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073199993 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081414251 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078005421 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076285861 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084272619 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086068596 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072364712 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080247396 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081348238 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.08216074 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072888349 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076074851 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07484572 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080143901 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076290598 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063365024 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077916373 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080158222 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072542043 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081926996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080416043 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081196166 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07509031 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.085813118 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073114688 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079436745 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073771996 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073676861 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075245208 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078415881 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07331643 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076088451 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.084193985 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075003493 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080334486 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.087313071 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073261293 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080700492 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.07247473 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072730723 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087055206 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083708968 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.072836642 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076172622 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072645725 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080936737 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072599913 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072908621 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.0733519 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072989504 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079749477 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072609175 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07545025 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080455289 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.230000464 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074045976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0789123 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.078384326 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073820966 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080132179 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073728098 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07319615 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076184987 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.070820029 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076834081 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073211055 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08090911 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076509118 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082230327 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074980409 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.082753192 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079866015 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080877924 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080204816 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072447628 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.069286217 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07686681 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076129372 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075809277 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073079719 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075124564 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073598902 seconds)
done (took 13.696288333 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072473778 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138316621 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10102863 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101886058 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092300081 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074094345 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083345303 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103278529 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075546902 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105744339 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095641647 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093428029 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117201968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072613926 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07354082 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077781371 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075397852 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087761805 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103431909 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094728672 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11813174 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072964838 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098702417 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095807114 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093833644 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108731644 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074435863 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077856633 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077291805 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09798041 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096855781 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.079443352 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074390526 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103181093 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099374165 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090148687 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074342505 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089254297 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074343653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073683405 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.074987132 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10361241 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086793837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087069754 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.077805338 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.083932181 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.074887244 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089837262 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095282991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085520689 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092056463 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105488482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076359001 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.090977378 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072199373 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091675764 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.083500227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075995099 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074420621 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082981455 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074359812 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077117511 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08705671 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086738345 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078129842 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091073963 seconds)
  done (took 7.244122253 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089001195 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102442481 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090741284 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091673186 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073715763 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074350065 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073844889 seconds)
  done (took 2.074395748 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072711766 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094968536 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096306141 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096291589 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087846411 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096949125 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083875253 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07401119 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09965524 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072897225 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094958331 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105339972 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077532541 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085990963 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096816437 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074227379 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097059172 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074140916 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077568696 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096933817 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078626993 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101659556 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.085364235 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074434559 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088235412 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074482951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118740529 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.083728924 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07452976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077278168 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074691502 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113752905 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087510274 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.086273264 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074526779 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087512285 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088480123 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076745189 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085426792 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08375007 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087768766 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.077352599 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075633458 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.075298054 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078781967 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083883963 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075228309 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.077424804 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077879503 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093125676 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072989064 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086989054 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077311581 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080050965 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07930527 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079205892 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084946743 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075439729 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09372431 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074567128 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090148314 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089368225 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087664074 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089804327 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077376386 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087052496 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087819254 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07740566 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076437791 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.080091276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08990515 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.076811076 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076125561 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084552801 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076419247 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097298652 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09674243 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076054227 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.087874532 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075135838 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074688724 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074507155 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096599422 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080150887 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074815128 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07863872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076888408 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076911774 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073371496 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078463007 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.075328548 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0797199 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07791195 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077828971 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077135694 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089534901 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073668896 seconds)
  done (took 9.55805172 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074579093 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076044461 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077749083 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0760883 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075161542 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.075827184 seconds)
  done (took 1.956107561 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095362851 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07656603 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087885775 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079069888 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111301178 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0933704 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.093845153 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085543021 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090997047 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086496959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093612812 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.094456156 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098723493 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079697654 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.093366606 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079823369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094241485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082348107 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086012488 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080376742 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093247229 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07965662 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080051933 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087880383 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083292272 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079281291 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086279232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086234356 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08603545 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085011237 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07972931 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083301409 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077821973 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085585889 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.093611695 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078113075 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081507161 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084179926 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079548328 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083030638 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.094693393 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080495448 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081583574 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085687266 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085125069 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078207374 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084962849 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086616676 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.093676708 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084606241 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.085525663 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078322728 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083132132 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08456594 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078235868 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084718361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084341804 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094469438 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079726148 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078316949 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076323877 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083246823 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084967963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.084297933 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084987832 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084421783 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077836181 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080140166 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080565883 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079059805 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085394171 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076458789 seconds)
  done (took 7.593745524 seconds)
done (took 29.889051831 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542810661 seconds)
  done (took 1.999551705 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606866069 seconds)
  done (took 2.093299778 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.602208174 seconds)
  done (took 8.080162154 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.386966153 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.492330738 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.723508112 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139530563 seconds)
  done (took 3.266098585 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.727526267 seconds)
  done (took 2.220462471 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240230457 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23259549 seconds)
  done (took 1.972654142 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.355093188 seconds)
  done (took 1.837033819 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132132321 seconds)
  done (took 2.614579712 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.238084395 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166540877 seconds)
  done (took 1.891061066 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452664024 seconds)
  done (took 1.938000367 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.881410297 seconds)
  done (took 6.368339171 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225918588 seconds)
  done (took 1.753710911 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24109974 seconds)
  done (took 1.729537147 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.77362684 seconds)
  done (took 3.259659021 seconds)
done (took 42.521364795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088905706 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090918485 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090476421 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08599419 seconds)
  done (took 1.825031146 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083092151 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079008952 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081788703 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078231427 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.082010227 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079352284 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080753738 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083659252 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080603954 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081141794 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080760636 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081915654 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082845046 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082450517 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079171191 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083303122 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083548715 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.08086166 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083904747 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080734264 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078552419 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082736286 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082285213 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079619334 seconds)
  done (took 3.440836506 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083777444 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0800084 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081975808 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07851916 seconds)
  done (took 1.823650697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084003606 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096020102 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094821595 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087132706 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099031846 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094573575 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077397759 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076877483 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078567042 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086183831 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076176219 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10313271 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096214088 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086297922 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088372887 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073338544 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075623883 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09536976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087625967 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087465977 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078133436 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086380065 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076465892 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096951405 seconds)
  done (took 3.577221312 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086652225 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107881891 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088983774 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.099032134 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100310149 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073431653 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08796613 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100469888 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134743035 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07357245 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079261859 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073235577 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082289498 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.076263766 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088724409 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.116341042 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120239242 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076772448 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105884526 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073805424 seconds)
  done (took 3.350019682 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078768123 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.078256012 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.077997558 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073725075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.086095608 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081120378 seconds)
  done (took 1.983805164 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073178424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075812534 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075151754 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074522754 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.0799116 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074974303 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073910995 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075884808 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074697488 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075029794 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074514282 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073436251 seconds)
  done (took 2.403149894 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.187818162 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076950523 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076751109 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074364288 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078349486 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07439868 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089107371 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075501679 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100504916 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074090343 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074515823 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076786581 seconds)
  done (took 2.562058053 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200885567 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081314303 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235007616 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156462449 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115001877 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119189879 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11874492 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118255587 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141530619 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104376312 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166595622 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167531993 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114357445 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142114321 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097026829 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.109631517 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156670257 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168056921 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111834671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168290488 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148316862 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132843445 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149821985 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108159266 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111539056 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124819874 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0791358 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087249278 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17084048 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135899038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151411154 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11701777 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097980226 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177854434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171227998 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144389942 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152800287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091815091 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.109105988 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137985318 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204173489 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094576532 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309265826 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118771798 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088476132 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138120946 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125394192 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126689497 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112501702 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097951028 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150148214 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182973836 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137639674 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093471669 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128314518 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118292658 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118757769 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120464621 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178389816 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163154347 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1338792 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07927668 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11437011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154564374 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138225846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113017851 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128941661 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09824219 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137040333 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156307116 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126654962 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145538808 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120856216 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095709467 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126171753 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142170172 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132171311 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164242953 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129756755 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080850538 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127274068 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106565169 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087996276 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152723916 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083921352 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176772984 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107917683 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113583966 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129798557 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113928105 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114177198 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157998988 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293722837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111577019 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075786139 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113489156 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125941185 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1491414 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095937902 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114947235 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122007211 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085723393 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13936364 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083465433 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129610834 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.086114457 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12956883 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13508131 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085921832 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128403189 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11067072 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109763909 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13618607 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160070949 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094948201 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088358208 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166463431 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126424448 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10899354 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145856392 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159640274 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108932191 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105795069 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150411455 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171006306 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097003247 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165131175 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111182342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090934834 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094270696 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128446414 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11684824 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129551741 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088889748 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123250546 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168161012 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083035561 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102911301 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140472749 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087188125 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088395351 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111147276 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110272911 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103521244 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10508165 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107458225 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13865031 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281418149 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113586308 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13072835 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106400034 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171160493 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09537617 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109900611 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110342711 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078335025 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137046491 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158777386 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086051733 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160639692 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123940379 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120684783 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125560367 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090863201 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140179523 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08645694 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078046462 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145202707 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117631342 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115308842 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151980008 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121292691 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128624511 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123582905 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135239475 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133912205 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133611181 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112951199 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095789417 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118153127 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132461179 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.08154059 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097248854 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087958243 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111540132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100838013 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090913336 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145057178 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127608558 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114526856 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118666961 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103456422 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148378187 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083950502 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131626156 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124936681 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102130524 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153876855 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153342943 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136848911 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10546803 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291010166 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.079230964 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082777252 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095401004 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12965566 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091340747 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091380139 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120631137 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1486906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13454905 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140985321 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128909782 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12421742 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156653439 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077773044 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125848287 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147577718 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126866102 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111974969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098774566 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106273762 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145619905 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111576136 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176964233 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119981502 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130178234 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161073862 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.109457391 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087331552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109656469 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135998043 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109287202 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147952949 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105725835 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094982953 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114602348 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083329623 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103653754 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131141307 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123597035 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141834627 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119634781 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13817018 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085679785 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118918714 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127749347 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125656005 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072778301 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122819508 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167310329 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101205431 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121631647 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3065355 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087529451 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.143960127 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174644118 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149014347 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092577846 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112234804 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126104424 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130477594 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126025028 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141437011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110655661 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140656068 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1172856 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093098825 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094226295 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103734528 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110488173 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.102403251 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109261609 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118577602 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103622348 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135871757 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110168253 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11626114 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122928056 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106597787 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100177612 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104065024 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176323978 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123956805 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171390952 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.107699329 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144998481 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163070768 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083070698 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086905851 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086039443 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139729949 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092275795 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135726906 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117493311 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122894178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128952379 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141644297 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103223359 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076804397 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114574289 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137843256 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127961559 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103893799 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107855683 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16264707 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104608414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08455596 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11592821 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121126539 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108540334 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166532597 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07011532 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111294367 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083235615 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085465975 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12734664 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147156941 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085839569 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104991935 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123234789 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115225797 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127055239 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101710461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108758574 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121401251 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137618457 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122580304 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089759246 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108769192 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124279866 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145033514 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102304634 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099073256 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158028785 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141761457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148603245 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087699202 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111301031 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112494265 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109198881 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12955146 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086310464 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150126619 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086515956 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127265971 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100998384 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088029286 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122378477 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109278152 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087700022 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135101159 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114548691 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085981071 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07925178 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112081645 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115737609 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103830061 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079059741 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40043969 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.085839967 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142648061 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167078901 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09123486 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115169856 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106482903 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090230067 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113444178 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11172821 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096354371 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107605575 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17153601 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092310776 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149438247 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135497049 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118174872 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137234941 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107538418 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646240122 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083460815 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151672529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122186285 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172373561 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107389678 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124854065 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117586056 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127661277 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146596289 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109213103 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18750891 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136119411 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122360135 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087023552 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109553314 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11111167 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094813345 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113415919 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120302699 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121243573 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100271904 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122019162 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127454536 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090757612 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102557537 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155768789 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121184502 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147944339 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140038891 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091142568 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121042148 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140524297 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08699574 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122451325 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151709826 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110803564 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104537106 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086645088 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103987647 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158822578 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080300297 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156078549 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126108233 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114663344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133975041 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111059885 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131826158 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107404629 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12227287 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09523109 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109489365 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11626729 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086781003 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082239134 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108232803 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111965723 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103344508 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099985765 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104836876 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149039227 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.079087751 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102639792 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118740716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141517926 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166355044 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09432032 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088601901 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12157266 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118375045 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114609209 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12342657 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084664888 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086492908 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085417835 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.091125722 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1115666 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116312065 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116591178 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112368639 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158134667 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088885615 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227468199 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101039281 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108744741 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.077255676 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083784928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100904803 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101128767 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.376395178 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115970445 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165425596 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.106738422 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.101530202 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101849388 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.086388791 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093612905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134383143 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121537315 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127125312 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110095607 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0737097 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115455712 seconds)
  done (took 61.018671374 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110936407 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090010395 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10491778 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151636782 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129121999 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.207356642 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158499631 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195185747 seconds)
  done (took 2.798805086 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075444396 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101403545 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.113347046 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091960102 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.076908895 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077671599 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232573704 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.090418308 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075151079 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101537163 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086000164 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077565513 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421575216 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.075068482 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076045035 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069561454 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07363786 seconds)
  done (took 3.551250967 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.401031833 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626607955 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347693018 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.085404947 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.985791922 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096301527 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.28748487 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139174319 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083396331 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532566528 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.419977462 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134290232 seconds)
  done (took 18.783123238 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08727744 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083185378 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.096683323 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.096315512 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085881894 seconds)
  done (took 2.093262282 seconds)
done (took 110.729029379 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088270251 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436036445 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063443064 seconds)
  done (took 2.17451069 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092557507 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092014699 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092681074 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090775621 seconds)
  done (took 2.022140023 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079377016 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082215382 seconds)
  done (took 1.810720177 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232324107 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176640857 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105117247 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088006621 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085044907 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088057246 seconds)
  done (took 1.913159887 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077227824 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080054285 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078304315 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081408367 seconds)
  done (took 1.963898151 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08129377 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060042276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06279221 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065600886 seconds)
  done (took 1.916421837 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091799818 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088664591 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084117267 seconds)
  done (took 1.916587761 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104951682 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092783502 seconds)
  done (took 1.846105956 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085330632 seconds)
  done (took 1.7333378 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093635531 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103491165 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13645077 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118986991 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142642673 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.122219905 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093275389 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093478513 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.087062193 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094832917 seconds)
  done (took 2.733084712 seconds)
done (took 22.277434133 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082771016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374367962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369053282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097996295 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677089105 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365052927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999183074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101847963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150221423 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07651965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093621356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657914729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989214946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339468358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97735822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337874122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65745803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077185028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076348574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076736042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983229749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076261628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076325677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077268218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656023953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.381281403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077052198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35556305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077270644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077544803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362012321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076095267 seconds)
  done (took 16.48467848 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075634536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124401224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081804345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093482034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.079083919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07780036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07896209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077435452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129003576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076516321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094246396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076636842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080459199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077540997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097254717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.080294449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078014347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078165989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077259998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07620643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092300424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074187661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074316728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07503947 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074337388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086192484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075420809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074619159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074974888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076250901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077190534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074782109 seconds)
  done (took 4.303477322 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121907073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129875215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080444184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112451032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120999666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.079137296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154978357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103319681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137718781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077502719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095058208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.078098809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111151915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078312863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098213168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078114061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078995465 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078160755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07762222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077851993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097866784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077370733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076818744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078200382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077785803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091539627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077967538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078230891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077386382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079901394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080632467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078015148 seconds)
  done (took 4.609183943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077699824 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083165369 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090484815 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0926097 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07727192 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080704852 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.082065856 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078102872 seconds)
  done (took 2.33109264 seconds)
done (took 29.386056351 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08422218 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076534241 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079995532 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.097464696 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082391946 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.0861498 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075339399 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084630679 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081876497 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.082286211 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083202604 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075612057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080104332 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074896785 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082266174 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.076322066 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087301521 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080531376 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.087301666 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.0869966 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078695168 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081349925 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084008508 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087002432 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.086748282 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086115592 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085316722 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081091144 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076430103 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078842631 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085236867 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.091219751 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075750751 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.085948311 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075819859 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075359318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079693883 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075969491 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086621956 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084566213 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078053892 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085260918 seconds)
  done (took 5.091637918 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092673245 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100278416 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094110319 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07129198 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.076305955 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07382292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.096420959 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.069105836 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.069516633 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.097478471 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06541376 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.068330263 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071849904 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062854874 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.068713716 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.066892298 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0706327 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.064264224 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068865824 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068438125 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096954948 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.062880043 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085526114 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07115203 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06550692 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070941039 seconds)
  done (took 3.646127075 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079860268 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088282392 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096963719 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.150807269 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11794591 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085964089 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.086889673 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100718117 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101288156 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074640446 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079205351 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101088397 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09611726 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.08222802 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075606947 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.092198394 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.09302066 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076570748 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.080462982 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102499273 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093617468 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093462051 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099781268 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089750318 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074780126 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078415654 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079429306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088585689 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076986343 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082804665 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077401819 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078494514 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077276855 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.086937137 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078515269 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077094721 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.101607458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085964726 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086717342 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076347322 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084465646 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076918756 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09849415 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132226854 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075322039 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081368407 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079343586 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085819779 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07430922 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10217355 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086845752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075416713 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078404841 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074442795 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074830241 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078130295 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07707783 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077525488 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082543074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079855651 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098267599 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079867613 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091529696 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.074634488 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.083966624 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.074521267 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076016854 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.074632291 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100499144 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078571338 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116105196 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075755865 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076141326 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085084919 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083892652 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081912372 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07600089 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091784352 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086090014 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.078843781 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083510932 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078507355 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078652896 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104735701 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078373137 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077270627 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07600234 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.08122775 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078512318 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076474392 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088808786 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.074782956 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07828615 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092247313 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07576913 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076521429 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081867366 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.079871441 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075334243 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087617473 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079851133 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07637937 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085998936 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075839811 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.077947097 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087795236 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082324729 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074727967 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080523493 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081367068 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076294677 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077756435 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078405647 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077252632 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08410877 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.08188953 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080028252 seconds)
  done (took 11.566127446 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167934659 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163535295 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.08049359 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15501112 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086066472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.0875797 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15669496 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103093389 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076995286 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077327373 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077325354 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117468504 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112667489 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.127253012 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086812052 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076492406 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.099831032 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121875404 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158504665 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154177888 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.100399032 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.084963366 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078424464 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076584326 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076167638 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083649775 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092664673 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082808489 seconds)
  done (took 4.777977284 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085860635 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10943711 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.084422276 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100333486 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098822767 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076897363 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078245686 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076731491 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.092739303 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086891086 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07672448 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081090419 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083288148 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080172823 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077617204 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.084096807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081792357 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.076795709 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.078885506 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.084578217 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087661803 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100436748 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080280425 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076009389 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081363484 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.076095113 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070232178 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089869939 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077502961 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101168173 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.07412611 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081421297 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091359546 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077838948 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076823656 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076534173 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.077337273 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076746385 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078797205 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075275482 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075143333 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.066832359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075871545 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086973327 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.090394779 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064192035 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079790463 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079958695 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080345478 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071514503 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077244096 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076987749 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076595376 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082005417 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078984045 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.080071639 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075511057 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082502109 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082939109 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073877341 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071657706 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073612672 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079066834 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072470905 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.092475136 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081684389 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075596112 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.077002909 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078288615 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.090114009 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076193648 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081343152 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073491822 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.079103869 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080532125 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078941683 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.078051514 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075568656 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.077277003 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.077710982 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064506933 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076673547 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062034219 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078362784 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.073698829 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073243586 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075263565 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081554896 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087790499 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078531228 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.083532805 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.078024305 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075563302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079067191 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06917577 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079735088 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087107303 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090994758 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076907583 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074942603 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.089669453 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.08223293 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075488673 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064920163 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079091908 seconds)
  done (took 10.088094833 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097749307 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079070883 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091963729 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099916555 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097382542 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083788052 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087930798 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078669412 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.094119147 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0835714 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086489551 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077335588 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087744032 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.087076197 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079091992 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087367004 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081092979 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092574297 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091815812 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.077089814 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085478942 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08944207 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.097802872 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08976176 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087703746 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089800061 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099395916 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086976836 seconds)
  done (took 4.189111745 seconds)
done (took 41.02607944 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.7630261 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.929466736 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.752488809 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.085357823 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.827036928 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.958344513 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.83027664 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.751744803 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.950224603 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.783862806 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.999541666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.8364696 seconds)
done (took 65.276937145 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.814751958 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.887484429 seconds)
    (2/2) benchmarking "String"...
    done (took 1.974540393 seconds)
  done (took 5.53600147 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.980371585 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.418598956 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.986734705 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.74639734 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.752462641 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.008327015 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.563846135 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.269234644 seconds)
  done (took 30.423182867 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.943560637 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.979108814 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.460316864 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.494452302 seconds)
  done (took 15.606458542 seconds)
done (took 63.127310321 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.747359232 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.78252301 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.792537043 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.732395834 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.807124387 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.765084014 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.974315276 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.774554847 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.747884553 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.735179817 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.751099524 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.180938467 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.748041703 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.896282754 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.747622698 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.758841959 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.802911146 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.178846551 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.903824589 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.770906781 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.772696128 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.785109216 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.753002933 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.893411034 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.784189954 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.748751967 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.171147384 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.753157213 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.377996417 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.7498584 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.780376431 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.124670798 seconds)
  done (took 202.974194356 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.747719507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.827448689 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.922262837 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.764713339 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.477616705 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.937132593 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.871840688 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.490570787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.75304053 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.778441839 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.975328017 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753544235 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.009337143 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.769717852 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780717838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.754438326 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.964138216 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.03205805 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786055191 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.921484636 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.751303455 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.823803062 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.768172426 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.970759089 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.782657171 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.770435133 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.760421551 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.76232144 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.955682615 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.942783326 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.759437565 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.782711134 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955058402 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.624122375 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.764243541 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.77908632 seconds)
  done (took 169.951144647 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.941446757 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.750838457 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.749527048 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750371981 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.756066676 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.749118206 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.749837969 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878903858 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878149185 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.392013624 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.471392146 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.804649107 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.750307928 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545385366 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.750456526 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820056894 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.765628918 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.752756722 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.766609637 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.77667533 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754476614 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75056141 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878153297 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.750954217 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.763318906 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75859559 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.751960322 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756700103 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.135183626 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.752666836 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.751273498 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.899572253 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753082599 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756407267 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.75115046 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.993556372 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.752578395 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750534453 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606778132 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.313787337 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83977462 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75333601 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756931736 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.751908333 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.969683407 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.75310447 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.751708905 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.752212867 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.754406461 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898093049 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.751894935 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.878620386 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.752183125 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.238044851 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.752179246 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752091311 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.527393882 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.584234658 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.75391505 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754187388 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.756145628 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.753210225 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752611445 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.767239059 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.756751588 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.833138387 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754331243 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.756394208 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759169257 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.754843463 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.943069581 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754017408 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.839825669 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.816390858 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.985665973 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879203074 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756384225 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819754535 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847636421 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.754457823 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.753982308 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.753838571 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.753803013 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834364739 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.754347961 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.929593955 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761490039 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.754947542 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.808212699 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.822460845 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.755844056 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.600848228 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.7540495 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.754128192 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.029582342 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819630503 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.753305744 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754511971 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.8979299 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877860121 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477864677 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.757566319 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.613886409 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.922887719 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757398899 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.888236569 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755777314 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836945473 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760324575 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.755859181 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.788135329 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.755357668 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.812999866 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.755705093 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.127367924 seconds)
  done (took 399.395541035 seconds)
done (took 775.998874312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.360524137 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.331927591 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.427137577 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.337283012 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.321684633 seconds)
  done (took 13.46155204 seconds)
done (took 15.146416128 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.846034195 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.846928047 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.779050931 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.844658378 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776302323 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.843060418 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.826860113 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.780052221 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.810983396 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780179041 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.815341373 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780002525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767568727 seconds)
  done (took 25.18175838 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.988745552 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.994826035 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.8302316 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.983724144 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805911164 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.983711216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.92705862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.906207894 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907183524 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773843803 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769229102 seconds)
  done (took 22.556914867 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.993189458 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.005050403 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837566379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.9899953 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.811007002 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992604947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.929831255 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909615066 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.913406338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775138353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.7714701 seconds)
  done (took 22.614764602 seconds)
done (took 72.038043399 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.764579256 seconds)
  done (took 3.45162311 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.793674356 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.966732022 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773406778 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.769780262 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.765664648 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.766574301 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.769404974 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.765178893 seconds)
  done (took 16.057874262 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.762153981 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.765687007 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.765315789 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.765128598 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.762808354 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762777371 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.765686652 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.76578647 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763045938 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766264111 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.768376767 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.763587798 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.766076035 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.763649282 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764877344 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.765741349 seconds)
  done (took 29.924005054 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.766200243 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764260703 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.762872493 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.763723425 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.763639646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.764098833 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.764270222 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76253295 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.763730066 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.763385548 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767947933 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.76352449 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.763554628 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.76471113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.763673282 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.764505003 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.763293212 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.763276939 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.768685309 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.763567101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.763961199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.763944849 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.763318089 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.764702119 seconds)
  done (took 44.030863279 seconds)
done (took 95.150455733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.51673434 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.502511647 seconds)
  done (took 9.706974775 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.771668726 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.765511306 seconds)
  done (took 5.228432374 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.765533275 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.765329644 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.764768405 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.766771202 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.765895501 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.765105832 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.764714057 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767053784 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766601565 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.766324839 seconds)
  done (took 19.345370804 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.765403016 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.76570507 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.761774721 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.767025298 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.766038383 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.762677071 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.765741308 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.765249405 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.766547658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.763891661 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.76422035 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.762678313 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.763920965 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.762586846 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.764504934 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.762576278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.767021044 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.762110537 seconds)
  done (took 33.452269045 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.765118242 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.765828481 seconds)
  done (took 5.217664935 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.761781092 seconds)
    (2/7) benchmarking "second"...
    done (took 1.763102168 seconds)
    (3/7) benchmarking "month"...
    done (took 1.762558643 seconds)
    (4/7) benchmarking "year"...
    done (took 1.76240761 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.76324637 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.762219404 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.762515542 seconds)
  done (took 14.024287161 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.766097023 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.908890093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.969070013 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.392316202 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.766912963 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.769267096 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.668780529 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761942076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.762888253 seconds)
  done (took 19.453468994 seconds)
done (took 108.116571576 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.624047422 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.755173437 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.976408645 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.874427764 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.768544636 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.08746236 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.772884011 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.029881309 seconds)
done (took 42.569661762 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.788093675 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.390352144 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.472205685 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.777877658 seconds)
  done (took 15.316085543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.73113125 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.073873549 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.755904072 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.614490459 seconds)
  done (took 21.853072342 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.11255885 seconds)
    (2/2) benchmarking "read"...
    done (took 2.095535404 seconds)
  done (took 5.886477262 seconds)
done (took 51.520213489 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753546707 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.751939964 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.750474223 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.749824948 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.754262886 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.750599075 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.752668179 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.751964816 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.75247617 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.749265837 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.754230454 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.753074783 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7539816 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.75210011 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749757723 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750513457 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754030086 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.753009404 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.749613833 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749780116 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750219374 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755921736 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.750333628 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.754975486 seconds)
  done (took 43.72393858 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.753735764 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.750401328 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.755268028 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.753036708 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.750780414 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.752331369 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.754016389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.750619731 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.754341717 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.752854071 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749555855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.750075432 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.752590605 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.749881606 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753432134 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.753344942 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.753073501 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750418613 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753359536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.750551048 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.752211073 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749292655 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.750018008 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752006019 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.749608972 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74967941 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.751324454 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.748166566 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749597707 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.746958935 seconds)
  done (took 54.218293223 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.754931736 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.7585446 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.752368378 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.749642446 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.748208616 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.749198741 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.749463858 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.750006471 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.749554897 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.749242408 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.750090463 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.752157316 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.750434111 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.748894912 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.749964273 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.7498994 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.749922063 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.749759058 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.749034439 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.750871415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.749267749 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.74837518 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.749763292 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.748957015 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.749198444 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.748729204 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.749272936 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.748985442 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.749968042 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.749360419 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.748840247 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.749508436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.748442673 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.748579298 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.749870497 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.749063067 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.758212777 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.75742799 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.753604986 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.748698146 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.748950878 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.748770105 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.748664966 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.75008563 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.748758804 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.750075292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.749979815 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.749254631 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.749859761 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.749202674 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.749463879 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.750276043 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.750147439 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.751080352 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.749520948 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.75051074 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.750973898 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.749407255 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.750269145 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.750695469 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.750124073 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.749979312 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.751465793 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.749608051 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.750741134 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.749784453 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.74973185 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.750039557 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.750707822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.748546398 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.750849913 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.749807298 seconds)
  done (took 127.6869922 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.747720435 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747492922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.745115966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.745282874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745079435 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.747557443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744359324 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747596849 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742445793 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746691192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746987785 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744053407 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744713218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.744663091 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745094534 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.742126542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.744691785 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742267944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.746506551 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.743697059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743602151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.741579694 seconds)
  done (took 40.060276314 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744094352 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.744503551 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.740650253 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.743012637 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740831077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744034539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.743375015 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.744265586 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741730553 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742328535 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73935981 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743287448 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740379643 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739940716 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739832641 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740077566 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743187046 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740588404 seconds)
  done (took 33.021296276 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.741021582 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.740434989 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.743477 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.740016372 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.740230362 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.742589941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740822687 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.743163452 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.742919106 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.740826685 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.743548181 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74300824 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.742759279 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741229228 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742797047 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740220097 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.745068423 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739408191 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74310795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74056574 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740295233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742346182 seconds)
  done (took 39.985721218 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742244446 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.743853394 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.739720731 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.739553563 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.740049485 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.742937595 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.743081677 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.739496633 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.742296319 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.742669918 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740202654 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.743264652 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.741182638 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.741138254 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.741213399 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7400995 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.744089965 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.740474337 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742645478 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.740345733 seconds)
  done (took 36.496277724 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742724873 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745639577 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743369684 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742770079 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743304503 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.744230158 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742999984 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.744247242 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.743160941 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744367598 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.742860186 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743080778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742440531 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74397158 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741956864 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743636084 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.742725575 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74230197 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745487235 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742563571 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742284718 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742609347 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742020664 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742032808 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.743658508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742998234 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742633875 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.742092858 seconds)
  done (took 50.473147931 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742226479 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.743047394 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.738685435 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74132989 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.739997423 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.739561577 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.740230037 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739642751 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741152082 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.73966744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.742728806 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.742010683 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743266982 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.741537384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740842159 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.741799268 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741986129 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.739139368 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739520745 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739921955 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.742293703 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742312281 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.746126618 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739021709 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739602156 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.742669512 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739431627 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738679194 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741864081 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738965361 seconds)
  done (took 53.89419087 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.760398467 seconds)
    (2/2) benchmarking "in"...
    done (took 1.759552977 seconds)
  done (took 5.184617007 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.738398395 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742005586 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.741612449 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.738772108 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.740388168 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.742368679 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.743037092 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740463539 seconds)
  done (took 15.590320563 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.740616757 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.743029815 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.741455153 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.741890106 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.742468072 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.741730402 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747443542 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.74311663 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.742646564 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.742972413 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.748401911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.74885289 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.746457118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742987534 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.742446199 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744634202 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.742304468 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.741780018 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.741754192 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.741624678 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.743166483 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744629867 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742888198 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.739133 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.741968348 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.751135105 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.743954399 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.742539795 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739870992 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.746259929 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.746533201 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.739673469 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.742579126 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.742597987 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.742164343 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.742649852 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749267304 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74237692 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.747961486 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741662392 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741971306 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.738425097 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.74196735 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.742979014 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743170566 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.742817932 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.74143843 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.743504493 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.740836711 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.743121252 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.746338771 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741018339 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.738782061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744646807 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.742792603 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748122033 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.742795113 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.742644171 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.748651078 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.75020713 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.753093626 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.748380435 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.742632315 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.742698323 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752483323 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.761451634 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747900112 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.741750117 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.740213905 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.74307041 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.749233661 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753878457 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.750368559 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.744473165 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74195492 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.741891757 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74107804 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742458227 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749111817 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.748046959 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.742102837 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745150932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74997822 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759121618 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.742271529 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.742857993 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.742541947 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.741679176 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.742195214 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750679766 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.74469548 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.742416339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.741510817 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.741336808 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.743008308 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.743114202 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.741496349 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741516499 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743265149 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.746943849 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742515456 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746207912 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.74960364 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743081582 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.743618278 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.747770721 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.741997345 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742696801 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.749570956 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.742788059 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.743762392 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.742857048 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.747464261 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.741746677 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744491782 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.751176433 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.746783303 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.744993303 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.744741858 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.746227407 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751270468 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.764853646 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.745221726 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.743683999 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.74756457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.755370545 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744475673 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.746258466 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.744919299 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.742325997 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742554238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.744231917 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.74338368 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.747669599 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745794852 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745347888 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.743705028 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.74440464 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.744429916 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.746053461 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.745254855 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.744618895 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.746134342 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.74569216 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.744876994 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.745159599 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.750198822 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.745129231 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.745189653 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.74493765 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745110592 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744418413 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.745988882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.746102267 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.745256304 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746381405 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.744319426 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.744470814 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745559786 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.746366746 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745387857 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.744747802 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747446156 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.746074923 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.74903737 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.74456483 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.7436875 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.747709639 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.747134456 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.745218324 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.747796287 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.745136549 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.747754179 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.752291827 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.746291619 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746936207 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.749127223 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74650845 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746795458 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747855378 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.747758481 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.751231368 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.747782039 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.751154496 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.748172126 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748023134 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.747892223 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.746746823 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.744898629 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746653409 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.748248038 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.752731518 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.757231076 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753761151 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.748070143 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.749812136 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.746395383 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.751464073 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.750896422 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.747630734 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.748775454 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747527011 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749340518 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747081722 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.74760972 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.747099614 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.746376638 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.747798717 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.74755162 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.747874311 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748198739 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.746925846 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.748220114 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.744563124 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748620058 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747219192 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.747688823 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.745489749 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.746202093 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.750148134 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.747381071 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.74855495 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.754974829 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.745362941 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749253944 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749380478 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.747951207 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.748246793 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.748085298 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749428743 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.74759999 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.753498843 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.748767365 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.748863964 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755018287 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.747591466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.751326654 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.751650169 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.749050632 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.747125361 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.750636905 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.754369806 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.750657355 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.749300173 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.749467558 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74896718 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74984752 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.754456734 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.746972876 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.748056895 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.750434789 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.75031098 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.747413222 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.752607884 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.749574158 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.7491907 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75089995 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749874019 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.750030356 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749692184 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.750397457 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.74979486 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.751090426 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750780463 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.755718646 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.754431286 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.749865646 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.751988747 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.750190316 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.752930031 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.75067748 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.752748753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.749222424 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762890324 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.757475983 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.756351217 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.751943944 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.750314016 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755540845 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.750771826 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.752970631 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749222427 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.751304911 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.751330092 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.749554315 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.749324793 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.751033619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.751715894 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.752237009 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.752264033 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.753842629 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.753209244 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.751161976 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.75117713 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.751984 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.751530547 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.750522447 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.75192909 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.753315514 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.753554531 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.751186959 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.750893773 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.757626038 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752369552 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.753208825 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.75251461 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.751245935 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.751338209 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.752432783 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.752743712 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.753665047 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.758275991 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.753121809 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.759568301 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.752692214 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758753419 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.75361676 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.754143489 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.759501535 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.750928443 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.751305852 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.752733302 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.75540188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.759151807 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.753148619 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.752599377 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.756253256 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752200775 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.753961756 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.753408833 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.753215141 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.754263016 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.752888342 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.760592735 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.753726038 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.754719291 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75504869 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.750270731 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.75432207 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.755274187 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.752126119 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7560656 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.75376778 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.753286378 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.752969529 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.754556325 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.754265451 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.753870109 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.754701458 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.751085422 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.755678645 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.760309352 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.752960545 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.757687831 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.754464867 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.761778005 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755181689 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.759913419 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.755521958 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.754128876 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.754367016 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.755837744 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.757397351 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.753480598 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.754873141 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.754275081 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.754873605 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.75775904 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.75546683 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.757158235 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.755085424 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.755653702 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.75446416 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.765146741 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774927481 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.755671706 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758698592 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.752278818 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.75537777 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.760340105 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.754808929 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.753489046 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.756791697 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.762716334 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762207173 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.755260064 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.755661382 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.755037487 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.75655955 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.756330092 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.757368996 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.756130837 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.756563032 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.755677395 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.755780144 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758584604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.756795829 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.755958304 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756134931 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.755898773 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.763680991 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.756569209 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.757166722 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756329008 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.757487009 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.757422782 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.75637874 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.757172448 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.759586187 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.756477095 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.757251485 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762356359 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.76145317 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.759944845 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.756090184 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.756896041 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.756850105 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.756752097 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757303539 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.756722583 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.757761982 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.758690688 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.757170004 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.757099694 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.75625181 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.758363895 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.756671134 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758285039 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758528149 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.762515866 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756462015 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.755508458 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.757651421 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758050185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.756458081 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.758040225 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.765653416 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758861413 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.765840379 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.763775187 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.76258282 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.756999467 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760920084 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.763338295 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.757134584 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.758667983 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.758886979 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.758648858 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.757825924 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.75959325 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.758792688 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.764028734 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.757904015 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.758566147 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766907042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.760750082 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75951424 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.759630677 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.762124732 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.759418944 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.757147142 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.760005726 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.758209608 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.765320368 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.759856797 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.760351304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760748584 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.758320706 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.7588774 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.762386065 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760059729 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.759729903 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.75637487 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.759562957 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759082685 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.761763711 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.76183138 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.758656786 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.758899513 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.761808143 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.765331189 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.757422503 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763394207 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.7595823 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.761135333 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760698479 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760051406 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.758231431 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.7574374 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.759024372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760633027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.760383042 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.761600188 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.759795346 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.760982022 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.760953036 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761121268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761923997 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.768127546 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.766781552 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.758421222 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.759518353 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.760368047 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.762726777 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761601174 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.762800775 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76107116 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.762434808 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.761293045 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761262421 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.761851262 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.763189247 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774908174 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.762443353 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76037225 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.760485606 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.765053582 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.761843263 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.75930002 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.763250009 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.764261456 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.764164727 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.768109829 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.763415409 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768373754 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762273945 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.762757745 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.769714576 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.764905344 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.768045616 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.764642268 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762250275 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.763181108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.765561659 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.776711968 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762759331 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769762909 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786598385 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.763740502 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.762750629 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.763261731 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761197538 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.763194882 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.764137922 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.765579049 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.763970856 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.762687484 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.763212297 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.762318223 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.767362043 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.764080495 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.764324162 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.763254023 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.762721196 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.764655073 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.761585879 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.763482938 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.762982194 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.763948924 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.764199904 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.76382903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.767344086 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775273966 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.77164051 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.76423314 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.764589102 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.761795219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.766242163 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.766931873 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772717475 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.770369171 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.764287997 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.764754216 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.76591441 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.763401816 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.762476735 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.764468735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.764028638 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767461989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.764464352 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.775088418 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772563725 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.768576725 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.764114387 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765501125 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.767665631 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.765141838 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.766091764 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765346712 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.76632277 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.765031737 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768865761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.765050208 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.765149758 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.766896168 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.774735812 seconds)
  done (took 1046.787886267 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.763372385 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763069484 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.762675182 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.763039691 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764092187 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764585539 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76455605 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.763469803 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.763067626 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763721426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.76385957 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763664737 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764184126 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.764267998 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763469545 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766347184 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76498303 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763445041 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.765185615 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763318549 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.763677878 seconds)
  done (took 38.731236858 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.766222114 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.764306814 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764833263 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767444509 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764257549 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767012229 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.764706274 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767112726 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767852981 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764775218 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.769528519 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770707507 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.765463614 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.764995043 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765114127 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767406719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.767770472 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765039802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.767811222 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765387885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767063618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.765431383 seconds)
  done (took 40.549026343 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.767520619 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.768021664 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.767924587 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.764705097 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.769380535 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.767300837 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.767474439 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.767656522 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.767906258 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.768082438 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.7668408 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.768782724 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.773040414 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.771763912 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.769560083 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.768522522 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.912490491 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.767642087 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.768879264 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.768147612 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.765462601 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.7745665 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.767181087 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.766330706 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.766756476 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.769152192 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.769382441 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.768114481 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.769109955 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.770176508 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.772379952 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.768282795 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.76791006 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.770492278 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.767246027 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.769240123 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.772492164 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.769013606 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.770615645 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.769591272 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.776326048 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.785066613 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.769631854 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.775969131 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.769961016 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.770358784 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.771995809 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.775501306 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.767691481 seconds)
  done (took 88.547413165 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.770867463 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.769870419 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.767932798 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.770657947 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.769476711 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.771315462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.771769565 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.770855977 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.768429336 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.767608239 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.770715636 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.769015428 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.767751977 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.772377038 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.771967371 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.768663145 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769168377 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.768494777 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.768369234 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.767947794 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.768603285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.77074481 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.774689627 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.768155782 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.771188395 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.768378085 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768775227 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.771333454 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.768580457 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.768560945 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.771779834 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.772131024 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.771530838 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.769424928 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769161166 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.772334036 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.771274913 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.768611653 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.772172846 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.771334547 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.772292815 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.772525077 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.772353012 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.771869441 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.770135075 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.769513358 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.769742981 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.77045593 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.769151004 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.7716805 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.771643556 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.769990584 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.772437518 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.770329753 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.772192199 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.772414111 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.771747843 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.770520329 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.772557137 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.770214818 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.770846205 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.773744181 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.77102471 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.772634749 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.773666153 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.772134512 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.77075636 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.77387801 seconds)
  done (took 122.098328072 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.77407309 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.773168944 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772950612 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773174897 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775930872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.774256535 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77415623 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.773684611 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.773731767 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774136855 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.773632121 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.77417999 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.774673748 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.773895448 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.773323007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773911336 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.77402766 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774893762 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.774764568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77423366 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.774357964 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.77597899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.77414118 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.775175042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.775136182 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.774695619 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.775486333 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.774439668 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774561945 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.773947751 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.775354285 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.774814471 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.774828854 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774613412 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.774928527 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.775449033 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.774472293 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775175814 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.77797989 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.775882955 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.775204447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775533871 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.775193833 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.775567032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775781067 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.776462393 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.776074686 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.777558067 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.776153966 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776974431 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.775595864 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776605777 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776166353 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.775601468 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.776521476 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.776828821 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776487407 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77644303 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774908755 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.776252243 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776149295 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.776579913 seconds)
  done (took 111.753861538 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776378009 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776745238 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.774206819 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.773481311 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775289679 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77403861 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775688875 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.775712377 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779066886 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.780545833 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777378588 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77452686 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775878761 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776314561 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773691457 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775758569 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773204398 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774061825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776863664 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774667639 seconds)
  done (took 37.211370452 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.773930424 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.777079525 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.774059757 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775374438 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.777196016 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.778984792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.777665379 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776967719 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775876664 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776911664 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.777836361 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777583155 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775255215 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776242469 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.777584953 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.775745042 seconds)
  done (took 30.122770217 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.775718012 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.778053187 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.778375403 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.778093432 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.776248759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.777837956 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.779940059 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.7756416 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.77536083 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.778640369 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.777057646 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.7777225 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.778749206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.778781847 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.777081897 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.778359193 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.775807772 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.776691689 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.778797633 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.778324802 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.777213071 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.775830998 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.78186892 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.779463104 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.775861459 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.776298355 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.776623595 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.776904766 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.776271007 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.779574367 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.776386542 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.776513142 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.776373185 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.776455519 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.779137738 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.776959035 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.779431763 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.778777155 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.780453649 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.781034166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.780495178 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.777324005 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.779915714 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.778726228 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.777836888 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.779279967 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.777674749 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.777183597 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.776829605 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.777119925 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.779934565 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.780163093 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.780704103 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.780848463 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.780582226 seconds)
  done (took 99.494108729 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78001369 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78083373 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.77880986 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.780969654 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.781544467 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.777888973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780386238 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.778345182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777975708 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781016957 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.781238237 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.780327945 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778870147 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780216301 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778389499 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780843279 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.779184299 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.780027261 seconds)
  done (took 33.738709554 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778968949 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.778214964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.781234751 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.77789989 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.777658742 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780752171 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778514524 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.781246212 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782176602 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.77948206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778630186 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.781561627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781955349 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.782262279 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779310785 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78481202 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.781672796 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781966468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.778984139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778798868 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.781826622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781528643 seconds)
  done (took 40.871617137 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.779833144 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.780569134 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.79543813 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.795943311 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.799348786 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.807650681 seconds)
  done (took 12.461703466 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780809779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78240077 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781943179 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782700446 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782763366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780218237 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780291028 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781449473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782280444 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78093499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780406346 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783096502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783146873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780546708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782528923 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782658709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781096922 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781800247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782242074 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790413285 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781263422 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783201409 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781143686 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780833198 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778817731 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7796175 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782775183 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780051534 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780217285 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78418883 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783769644 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78155769 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784225492 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780399228 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785796386 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788318339 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784176646 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782881178 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784122289 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78142224 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.783797043 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783576189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783840277 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782172436 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784490944 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781584571 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782316629 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782017989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782060765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785107747 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784018634 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78240355 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787576524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787821439 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784746011 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785409133 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783049222 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782485134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784955494 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782489549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781345803 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784720619 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783296143 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783672204 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785527281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782888787 seconds)
  done (took 119.374822218 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783169988 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783525306 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786624163 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783894596 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782785566 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78302322 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782796881 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78296283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783221877 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782672643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785691898 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783598303 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782563437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787074288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784332243 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783547189 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781930525 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783410612 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783766511 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788879874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784979201 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782984756 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783073688 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783639213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783373614 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785739962 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783673731 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784523434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783648416 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783781475 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78429865 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784013647 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784230682 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.784505022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784155553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784689733 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787994023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784911698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784335595 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786947449 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784802173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786807589 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78520143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784610275 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785266184 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784760606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78537013 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785868577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785291785 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784557688 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785959908 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785551088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785748546 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788617384 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785474626 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786011585 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786359526 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784518311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785293124 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788134111 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785121786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786242788 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788761694 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785584752 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785564272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78661271 seconds)
  done (took 119.509349663 seconds)
done (took 2443.266123927 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.829209931 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.805404322 seconds)
  done (took 15.342814916 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.953397814 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.904991636 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.791586266 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.800362378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.791639377 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.78857828 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.8039976 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.793047521 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.791771202 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.791275518 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.792281141 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.978561913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.786906268 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.792277683 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.793320521 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.887752007 seconds)
  done (took 50.959690686 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.794300253 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.795466711 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.80617458 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.798487154 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.796082559 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.805890845 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.828158406 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.798185838 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.829835552 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.809490345 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.864373603 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.8053396 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.794517055 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.844615418 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.807868891 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.81379355 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.892917594 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.869937813 seconds)
  done (took 34.471712047 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.87246116 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.801227212 seconds)
  done (took 10.395944445 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.820789242 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.792291307 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.829010585 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.794103632 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.819375537 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.79732868 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.826106423 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.829777324 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.800294558 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.818748357 seconds)
  done (took 69.849733465 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.80512479 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.803210373 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80142675 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.798550594 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.794121436 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.797051478 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.79859595 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.800191148 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.452621888 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.838686445 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.809662624 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.805094838 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.798506944 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.800882902 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.797441943 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.824422655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.90172379 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.798309251 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.797123773 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.80615842 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.800965529 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.854437446 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.815612271 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.804844307 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.828068688 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.453234972 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.807164013 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.806178827 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.917582524 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.797912122 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.798680674 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.801825538 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.800654525 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.194522401 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.072794508 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.801654677 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.813267423 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.808248701 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.799493979 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.907563283 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.801356664 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.80850792 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.506157228 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.052496661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.897191508 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.840998006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.121648732 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.816246404 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.803846077 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.828968025 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.806375793 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.802375141 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.815866681 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.286220967 seconds)
  done (took 128.427984207 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798320168 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.14913008 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967077068 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.799664835 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082557384 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007009974 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.797447267 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846686 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.79763314 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.030929133 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.051425896 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903342877 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.798946966 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.797476107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.797823663 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796034578 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.954612693 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87099759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799814954 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.795761655 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827943055 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041232074 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.9216601 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.800168611 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.827842741 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010372748 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.921467246 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903228059 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.57186276 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.798589801 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.863674415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.799606324 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.798993961 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797070794 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956525435 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896734667 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88076521 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.800201313 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.799804382 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.797845256 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.547511521 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00232635 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.894650392 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.932590676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052137113 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005296407 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.584172774 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.797785319 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.540180945 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965948523 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.029516734 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.033133613 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.920054006 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.800381512 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.341564197 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.799268751 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.797823783 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050063267 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021820391 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898571972 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802726029 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.79812284 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.798056986 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.09103608 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.801908447 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896307326 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807115224 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.799601839 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897635211 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.899026256 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.029665252 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014485237 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.831893074 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.144357221 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.321546243 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.047282584 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.866524006 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051513061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801429918 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799269042 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878976067 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.642328374 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054489213 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.084862676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.047706647 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836578185 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.522065791 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.799288244 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.027573086 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022889643 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.060008607 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051247893 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.034615639 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.125248352 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.80241823 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.800771441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.109320534 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.927127451 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.803290803 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153423781 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035281303 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.332420684 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.831436141 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105549422 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931788299 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.803109976 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.434899581 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802461174 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.034749226 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.842512004 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.807039113 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802096067 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.022256266 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.794671263 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800770988 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.704581686 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.866924027 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.804276109 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03520296 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.804196645 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071438063 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803763759 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038511773 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.843389302 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835398728 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.032936315 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.05012743 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.802459454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.041816109 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.049027995 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.917333511 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075041624 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.715812244 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805356302 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090755638 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802727656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.801144996 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.973769432 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.803414186 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946601619 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807069312 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097037991 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826363281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033834067 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807110338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062456776 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837661104 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857022774 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.805635385 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931437279 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805815341 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.057957931 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96588726 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807238459 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802120908 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.627890462 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.804378022 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955519274 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03119737 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827083491 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877274605 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47919416 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804037773 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886521635 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828642947 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.200843717 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.804190324 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.057201732 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.806563484 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.803914082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.803461845 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.090979441 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041016801 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.80556555 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.803463497 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.715667646 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.802726362 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.80249696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.98754834 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.165123192 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804201908 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010607256 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809960491 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93328261 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.808850674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.886745859 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.1465018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804053519 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.805898609 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804001922 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.803756883 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.805168679 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069836089 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834467176 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.303726863 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.945681477 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078415599 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.119447528 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.048182838 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.849848798 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.810946793 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064246173 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807467715 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.872736903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.807009982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828191003 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035211097 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809325588 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073319559 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07907575 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.714885688 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856378999 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.810186175 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.80617588 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.806505622 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.957034529 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896703144 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.809254402 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.807941636 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.923207714 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.929066702 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017177475 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.807059429 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.884771265 seconds)
  done (took 890.190321357 seconds)
done (took 1201.347446394 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.807064963 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.80663235 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.792681807 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809170638 seconds)
  done (took 28.951839265 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.813222164 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.809644085 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.812992141 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.812308926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.813421067 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.809728025 seconds)
  done (took 12.604846073 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.827412094 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808962457 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809046749 seconds)
  done (took 21.177766135 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.877183305 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.193364129 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.91574675 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.22973677 seconds)
  done (took 9.94610457 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.812859718 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.813892421 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.81228199 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.814778612 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.814563914 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.816091627 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.813002142 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.81391447 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.814672023 seconds)
  done (took 18.05715423 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.051231616 seconds)
done (took 96.521116002 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.807949796 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.020069862 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.706055987 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.889592289 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.905367464 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.920038581 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.118736882 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.962160084 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.953627399 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.169211391 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.007590278 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.847564354 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.163209864 seconds)
    (14/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.802237561 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.441709609 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.305069228 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048780486 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.982712018 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.949865768 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.85124018 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.840175487 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.907030778 seconds)
    (23/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.806751379 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.52691683 seconds)
    (25/309) benchmarking ("sort", Int8, false)...
    done (took 4.713620443 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.909300357 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.833474611 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.046095672 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.847146806 seconds)
    (30/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.88012069 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.938295488 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.983689438 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.48670489 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.905227096 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.683886249 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.960830866 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.959232638 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.351677037 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.919500104 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.260063822 seconds)
    (41/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.228866862 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.999344771 seconds)
    (43/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.050501654 seconds)
    (44/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.913145701 seconds)
    (45/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.029641303 seconds)
    (46/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.864137234 seconds)
    (47/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.923705601 seconds)
    (48/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.801386709 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.835222369 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.046300798 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.931229054 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.916461599 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.036409459 seconds)
    (54/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.327177461 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.821480032 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.516137239 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.820455989 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.681834141 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.919197714 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.096603273 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.859463991 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.219952989 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.500978525 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.786379375 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.991588947 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.843351513 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.819125094 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.146553735 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.826793145 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.909469798 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.10164116 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.677077163 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.910008085 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.110234366 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.841543663 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.200965508 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.230787372 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.828378743 seconds)
    (79/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.889720346 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.840406114 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.819438135 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.873199722 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.127477632 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.890306357 seconds)
    (85/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.916952 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.914267786 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.001150436 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.009901854 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.826571272 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.789697483 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.061356545 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.228876564 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.006316249 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.918436663 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.002846109 seconds)
    (96/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.098678633 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.851999605 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.91074998 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.984188744 seconds)
    (100/309) benchmarking ("sort", Float64, false)...
    done (took 5.616166334 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.187675298 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.068205864 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.968818293 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.270680734 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.203450596 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.300228991 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.049096973 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.921250649 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.133566592 seconds)
    (110/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.855991665 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.827037764 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.018908695 seconds)
    (113/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.207945263 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.917723669 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.889149107 seconds)
    (116/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.808123472 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.006096059 seconds)
    (118/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.976496238 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.845645627 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.821159328 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.901197158 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.313301558 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.226288558 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.183471121 seconds)
    (125/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.068951406 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.614192241 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.865941082 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.905205035 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.925147752 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.076574664 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.820071156 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.843790337 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.104699242 seconds)
    (134/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.964819599 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.074877092 seconds)
    (136/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.019529006 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.958610327 seconds)
    (138/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.816659973 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.212584593 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.625823485 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.924127813 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.915579253 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.193488305 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.853003961 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.140163228 seconds)
    (146/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.938561429 seconds)
    (147/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.95254316 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.969304786 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.845553166 seconds)
    (150/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.963453539 seconds)
    (151/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.950700035 seconds)
    (152/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.929464181 seconds)
    (153/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.81521262 seconds)
    (154/309) benchmarking ("sort", Float32, false)...
    done (took 6.239577214 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.827264621 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.924607845 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.845934474 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.147296939 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.108033603 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.825033565 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.167511949 seconds)
    (162/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.140995036 seconds)
    (163/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.872675733 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.933236448 seconds)
    (165/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.83873044 seconds)
    (166/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.715950438 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.81032585 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.233257991 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.785023514 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.829661384 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.916808993 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.94869789 seconds)
    (173/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.250973184 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.774348185 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.845710319 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.822556844 seconds)
    (177/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.260604189 seconds)
    (178/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.952572197 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.821911016 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.759200981 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.215854831 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.114978632 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.833179223 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.191605011 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.118021831 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.811849987 seconds)
    (187/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.962254924 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 6.836524864 seconds)
    (189/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.716858652 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.082843704 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.966818676 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.267776656 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.831915559 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.062304024 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.25975212 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.837734382 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.839524272 seconds)
    (198/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.005771058 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.83093603 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.906579673 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.978068523 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.397655203 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.919119343 seconds)
    (204/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.981549304 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.279478865 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.137745434 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.153952131 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.336490864 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.836717634 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.267260549 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.072694633 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.857940438 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.814226149 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.857277633 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.026352586 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.945241719 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.89323337 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.122319505 seconds)
    (219/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.338825793 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.014725096 seconds)
    (221/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.243569228 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.183114238 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.676198731 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.001091983 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.888749493 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.501576976 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.829283452 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.070503834 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.953570664 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.158353274 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.852504013 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.080838588 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.861801384 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.819110162 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.92677299 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.916899955 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.825441419 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.465681491 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.295503596 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.835998008 seconds)
    (241/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.831878333 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.813820846 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.829008001 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.054461972 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.853728498 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.857096855 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.923428884 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.837155016 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.973370309 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.311340297 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.251282275 seconds)
    (252/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.975632788 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170000168 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.938341255 seconds)
    (255/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.890056205 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.310042853 seconds)
    (257/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.085665967 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.974612779 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.898257626 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.468070963 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.761045683 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.101923222 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.126386675 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.703349912 seconds)
    (265/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.850992432 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.31766478 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.172612133 seconds)
    (268/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.760257906 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.486208553 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103463668 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.831882176 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.84416575 seconds)
    (273/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.517256629 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.194343245 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.825487302 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.508091887 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.847511028 seconds)
    (278/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.845173149 seconds)
    (279/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.972472073 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.936654546 seconds)
    (281/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.952560021 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.221415261 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.909474444 seconds)
    (284/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.978534296 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.667932995 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.01238552 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.089974135 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.996754249 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.976025382 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.63201984 seconds)
    (291/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.310551666 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.863736928 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.952054266 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.880969402 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.456633641 seconds)
    (296/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.745502336 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.866669355 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.811327168 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.029394875 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.998137394 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.968250091 seconds)
    (302/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.136602845 seconds)
    (303/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.866446188 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.938408492 seconds)
    (305/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.811854103 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.134896532 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.993506007 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.209009621 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.947347055 seconds)
  done (took 993.93747377 seconds)
done (took 995.94994613 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.857052948 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851421199 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.83570428 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.857435183 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.947360451 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.861926561 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.847223257 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.836519416 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.882996081 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.88492731 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.831749311 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.860752658 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.836012004 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.83649345 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.837412261 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851636017 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.15095589 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.866649612 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.852786438 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.843375327 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.852179232 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.832294395 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.884349406 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.861774969 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.840812326 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.837705106 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.83891909 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.85527549 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.948438782 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.83857333 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.84238535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.847843975 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.151020355 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.867696412 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.830738478 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.85938377 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.850409247 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.844940296 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.842380715 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.867802091 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.235189924 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.873755148 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.838002933 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.837307752 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.839908875 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.840224746 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.842800029 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.84349489 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.850902664 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854291657 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.227614786 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.893650542 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.842831283 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.839120137 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.852165939 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.838751904 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.841144835 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855024529 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.860319284 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854420045 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134262073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.87077435 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.843246168 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.855122845 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.846118011 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.26364858 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.872665695 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.842093904 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.237220708 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.883232795 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.265246401 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.885582728 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.839168442 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.850953179 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.86929045 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.154736407 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.862344311 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.839596323 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.845654478 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.834545328 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.850024012 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850981131 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.8420454 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843576601 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852826723 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.865738793 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.848367582 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.839069001 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.848554183 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.857780205 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.847772735 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.851273707 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.843330529 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.83641818 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.854621444 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.842238576 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.841920029 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.840667408 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.845081428 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.850212336 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.236679446 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895671604 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.838656238 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.837901387 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.840764057 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.853477854 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.237527995 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.878741874 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.862440887 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.889156403 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.842881089 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.136699842 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.874616314 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857818375 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.847937422 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.844009904 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.83606491 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.135608655 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.261759894 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.893961144 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.842590222 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.840089027 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858705414 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.842395411 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.837216752 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.159292138 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.872261837 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85476694 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.966221255 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.851778952 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.872192007 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.842859608 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.844685534 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.872992954 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856885357 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.872849296 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.845463583 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857250432 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.859776515 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.839167581 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.854164961 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.856082912 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.842639261 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.84710964 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.83685785 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.873574504 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854767833 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855942322 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.861759266 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.964393991 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.840288171 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.138740191 seconds)
done (took 289.207923093 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.912203991 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.834895688 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.936219511 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.843033684 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.921409377 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.926728792 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.839179875 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.837121658 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.837729422 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.213413847 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.840151005 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.838988204 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.841582815 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.842063191 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.925085179 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.84168058 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.839385295 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.17597783 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.842029599 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.912308312 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.838657271 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.839150426 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.842370395 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.213218293 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.840272042 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.838081891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.915279683 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.843261192 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.180733179 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.841530624 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.841940195 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.182017594 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.934084545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.857828118 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.853554955 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.850293971 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.923839956 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.847865967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.922346067 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.922076658 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.939993057 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.882397912 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.840945401 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.843684807 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.846066278 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.844570229 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.840942514 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.871058718 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.835956926 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.840139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.175697825 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.853513966 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.84963316 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.840517238 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.841560443 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.865867731 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.844225365 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.842332056 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.933417469 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.845100364 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.904706849 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.215482429 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.214164861 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.842640792 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.842416152 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.83948661 seconds)
  done (took 182.425280455 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.909589829 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.917615336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.911707611 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.846215059 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.892919825 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.910024663 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.846952502 seconds)
  done (took 14.994698898 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.849416077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.845606323 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.897428544 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894760788 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.842599584 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.999143733 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846607483 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.856889597 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842820604 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.870479875 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.8484774 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.845398926 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.853190933 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.843990141 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895645881 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.859786989 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.961769241 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.846577988 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.845117743 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.996244041 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.843928811 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.857061876 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.8709278 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.858578867 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849126967 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.851995886 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.440837147 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.844131921 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842349025 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846703319 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841972296 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.888486683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.847086707 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.845180893 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.845886402 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.959360384 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.848633734 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.845514121 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.845805675 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.847151793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.845851612 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.846465514 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.850242612 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.84308775 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.847790172 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.868371731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.847549198 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.848682046 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.850217524 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848581831 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.875885321 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.849234617 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.847565544 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.850720485 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.891643301 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859077569 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.851204384 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.848086191 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.851620187 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848761094 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.995951876 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900434648 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.850334607 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899034633 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.850761892 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.85058455 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.85068053 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.84964082 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.945300896 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.851884218 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.899131368 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.848485446 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.007926373 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.873561412 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858980132 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.852111012 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.851221385 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.850744439 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.843160521 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.857157083 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.849861768 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.850793921 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.854531695 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849987158 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848644792 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.961473179 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.98669641 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.851751509 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.863442981 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.858067419 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.848711651 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.893419568 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.852611413 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.849885965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.907441594 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.967632475 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.877069533 seconds)
  done (took 203.655751581 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.856360886 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.859013687 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.851619932 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.868352766 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.85175692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.853517938 seconds)
  done (took 12.908561098 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.853662017 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.852635728 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.853019949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.852183991 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.8523526 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.853577025 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.852439923 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856550311 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.856778717 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.853276614 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.853602496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.853707389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.854525181 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.854402682 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.8536568 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.854419981 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.853877606 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.850087388 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.852288547 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853987798 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.006753915 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.85275007 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855626298 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.854882526 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857913439 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.85348863 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862860632 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.851992287 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853512144 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.862196666 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.858903823 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.85421943 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.853859168 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.859533184 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.85896702 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.853087641 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858341771 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.855039769 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851112687 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.857753613 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858469363 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855266684 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.854247209 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.856021649 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.856778025 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.859629503 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.860611812 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.861658946 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.855819376 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.856313155 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.856426366 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854074494 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.855651502 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.857327051 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.856622129 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86378112 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860465419 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.854880299 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.854361994 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.856361904 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.857952134 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.856870753 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857984071 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.858708224 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.853296749 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.858072072 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.858762556 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.859810436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856150165 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.855398605 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.858636164 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.856384884 seconds)
  done (took 136.548961757 seconds)
done (took 552.307267867 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.016803534 seconds)
  done (took 8.787873576 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.935003896 seconds)
  done (took 8.75109542 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.319321766 seconds)
  done (took 10.09623677 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.88331421 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.861163419 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.863093461 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.86020171 seconds)
  done (took 29.265386319 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.880755807 seconds)
  done (took 8.655248398 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.875443529 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.851962513 seconds)
  done (took 15.533110721 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.867291388 seconds)
  done (took 8.648905755 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.951572141 seconds)
  done (took 8.728420195 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.866061737 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.857590071 seconds)
  done (took 15.510570089 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.837778545 seconds)
  done (took 8.611407485 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.50010993 seconds)
  done (took 11.368751593 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.872144131 seconds)
  done (took 8.751524937 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.911668197 seconds)
  done (took 8.685162274 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.921540913 seconds)
  done (took 8.695302643 seconds)
done (took 161.860587581 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.854321621 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.855857111 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.861511429 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.856666753 seconds)
  done (took 29.201498162 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.890593396 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.889895014 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.894185679 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.902864876 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.894384823 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.889826515 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.883546656 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.886263296 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.904256559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.8940065 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.893533327 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.893617066 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.891073925 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.882547293 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.893249687 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.8944413 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.902437107 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.897442201 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.883574156 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.89444836 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.860231051 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.901645008 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.894749046 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.8624088 seconds)
  done (took 47.149490787 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05283493 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.929760369 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.01032082 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.908666586 seconds)
  done (took 9.678119321 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.911013379 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.911922067 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.922828069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.962979147 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.986144304 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.921468845 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.885057858 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.880447763 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.867586365 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.917120476 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.988774615 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.90667615 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.002294335 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.859990507 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.046764987 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.859042159 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.858330028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.910740828 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.962209925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.990066774 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.860993284 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.911337448 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.913863961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.906560483 seconds)
  done (took 47.919008442 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.861102735 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.865703234 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.864160684 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858544388 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.861731375 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.860186317 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.864677515 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.859674477 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.879231997 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.860925236 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.859321903 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.859153241 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.857428746 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.859736911 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.860044287 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.871359252 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.877983985 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.859402788 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.86262268 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.866421937 seconds)
  done (took 39.047178342 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.853374668 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.705847085 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205166746 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.109907289 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.85266396 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.853943489 seconds)
  done (took 31.357459852 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.873425119 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.866822481 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.859522285 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.916588436 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.999745276 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.87087794 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.859481442 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.873130054 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.906954012 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.927274501 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.882547051 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.888687868 seconds)
  done (took 24.502179993 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.856306035 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.871978019 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.860921514 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.888184986 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.8716419 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.870466495 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.865673889 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.853742726 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.87519897 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.878637411 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.868682359 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.872139669 seconds)
  done (took 44.214218255 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945330632 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.74817772 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483675475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.655964588 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396364829 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066099502 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.494712371 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038970874 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.859763844 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12926409 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.486932154 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106844949 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108960474 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85773253 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.931009126 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33080177 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161489747 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087381026 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882437975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609121781 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988234902 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390775939 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.588262083 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992400301 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067914206 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.986943869 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.118512992 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814098181 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992928853 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902467557 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867237672 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859211121 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131000591 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071838456 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948349748 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867890092 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.51115015 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.578999295 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.847223804 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.610890025 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.538033037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.002216921 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866305959 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858921961 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793836797 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39475229 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034055194 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.863404169 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.560628636 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859771191 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868397583 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944674142 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.863309174 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.679667974 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812240092 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141662787 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.856893712 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864814948 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412285867 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.957957257 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.52175285 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.80008966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.951069468 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620383461 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345353902 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.022058323 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.864081196 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864879412 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793753468 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.612703555 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992400996 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005317657 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.879974497 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508352332 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166792263 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.539677044 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951308612 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157203715 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.712664042 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.800000255 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086083095 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.809363854 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79371271 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.717541069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794469134 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123601758 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894848045 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.515292179 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894758457 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038464067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87057253 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880283848 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868336063 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08330662 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.743065601 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862656421 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.41571051 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155784379 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883470733 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028045375 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794546729 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.865501014 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114770965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.072128003 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.126504133 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.346771934 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030176914 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861882792 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.947868043 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.815151063 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877656966 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.145371366 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9335366 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970949641 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002376045 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.818588781 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161459104 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888465941 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.035912173 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.503345279 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133878775 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.190532887 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113220493 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946823277 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867650764 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864095948 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.638034061 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494818113 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.090210136 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.862757006 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39146926 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881395594 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.865249225 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796543282 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.579235328 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.506375761 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.979668668 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08492077 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.847562064 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142786075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796220586 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00802338 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.851650101 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.086632005 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.536872505 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.954820313 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127244619 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367456624 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.093779575 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878786901 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88313444 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94628306 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885842106 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.324326364 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121077006 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.871716834 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.868325897 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.62675076 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.948204223 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870015293 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.86866711 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660425587 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161969207 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902384373 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870037737 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.757263846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.878236129 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950203705 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87041914 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875006787 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391437762 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.735575555 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.880639002 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.614527408 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136623441 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876920465 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.627465978 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067527562 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.954584404 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149291543 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938203021 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.799292856 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.56718943 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.570530425 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86686191 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800858806 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866754335 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874587418 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877119544 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.116908444 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154578671 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924192012 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.62725011 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.990494383 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87720154 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.870006843 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868549161 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.364602505 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987949158 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.521843018 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883032515 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001714218 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.879775115 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80006155 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.870271353 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874122832 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868233047 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.820938873 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920024 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.625521121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213048129 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127640159 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.512116797 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886715578 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.59998654 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.005240422 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.89519135 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.44519943 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85881505 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.004136243 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9422831 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.878333411 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.634850975 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.657592612 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422910471 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180129333 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202647048 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328902656 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.272650775 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.210466445 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033521922 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104670683 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396163036 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928861858 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059171202 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818101758 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959825484 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541864824 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234939686 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885038481 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096432573 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263826092 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.504289672 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038402925 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080111118 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904362971 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.69325093 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903518993 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.392089068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023671991 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.437108381 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105612386 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039160186 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.446627734 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.990667415 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.867875647 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323865205 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950987903 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.579487471 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229877313 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416146256 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.500350207 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260199946 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871832123 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.314993198 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234218477 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.231367923 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.962187786 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805272294 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882475618 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.883275746 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.870108784 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.858618864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.838954164 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.168384321 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881742127 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10438664 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.151921397 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148257998 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.839729174 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.876801143 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875527329 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165716045 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.56173709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107749619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.224452648 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.455622255 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885718438 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805502786 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805439899 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.575031868 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881213665 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.847000564 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095523317 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.976995345 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83114754 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255189071 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185769191 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126162395 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.886032051 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152651994 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162356848 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.606144009 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902140389 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.97341922 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.40969397 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.579530316 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.093361211 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106572893 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698575413 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103481449 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507217221 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.841953937 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.873572693 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086322749 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.094617604 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.476577625 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131833828 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.597383998 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.884947715 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237977513 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942175903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.489292175 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.096955054 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.965043985 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88325221 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955126986 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883489613 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.883642658 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884721365 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917525078 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.50748213 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.019428642 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.887939314 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964052886 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.967957035 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.475411749 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.888837629 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158818172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243204485 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217890039 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947722441 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876819719 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877815041 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807884222 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012449886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.319709246 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149177285 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008774527 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.067145818 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899534793 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.411636119 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.167855005 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187468124 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150568083 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.769350462 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87664906 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.962123327 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.100693997 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88637386 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.085169585 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101404664 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188455594 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351825631 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.027101761 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143275198 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148932534 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.253211598 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876315073 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46874381 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.891477778 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384212241 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.918011432 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.484299878 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173801972 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886558847 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091801893 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897574888 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.072366683 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.329525783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57296006 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24781598 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.864612426 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9415969 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158029543 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288287634 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199804257 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958712448 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888393432 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.575670287 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01607358 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.861956863 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.146358609 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883733327 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087865604 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.589925204 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.886680881 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158217933 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197625775 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.876246872 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.861498276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942987403 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.890585391 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099002004 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136760852 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130031393 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886925148 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886990089 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.695858097 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15608401 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943143592 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819328921 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.882481781 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969380811 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125241851 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898292421 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.39616358 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.582201607 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174386817 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.803932601 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901650567 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298308217 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330166357 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215045153 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.409816092 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117610186 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437658713 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.750397872 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252549809 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.882869235 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301308596 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257866505 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.882192792 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386521019 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990776915 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.156743534 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207445436 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.899290132 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686521502 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.935410853 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102191586 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471629645 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825089603 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880552623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.941084073 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88105413 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.877172433 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896506784 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.875629327 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767856837 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.718893688 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373545769 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.884901045 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.86737131 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.384917428 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438097798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986714527 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038456342 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893055304 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.603629976 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.183741373 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134775107 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.408959891 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.953153193 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.884324046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882161781 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807319816 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076074991 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.138944611 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177688306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.238693088 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.992094513 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885350101 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.096252578 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092395351 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.433209056 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04177575 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271164928 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997870818 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.8133742 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.593918952 seconds)
  done (took 1679.494584096 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907641952 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.888378908 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.892210183 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.889884476 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901647167 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893315627 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.902503827 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968849487 seconds)
  done (took 57.046673579 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.871161306 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.053950356 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.882283657 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.873929473 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897768812 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.874007414 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.050132871 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.882606606 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.295876613 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.882956992 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.873323756 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.878606678 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.197100268 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.898037836 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.872363516 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.877011778 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.884789327 seconds)
  done (took 74.848782985 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.871877923 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.201789504 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.889841756 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.89764011 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.829197781 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.880364771 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.971350547 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.880856365 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.873902577 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.046977124 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.211305995 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.887758456 seconds)
  done (took 90.236095155 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.888938243 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.876526329 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.877013835 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.875801299 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.876667533 seconds)
  done (took 11.195120019 seconds)
done (took 2187.684478334 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.107789936 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055419932 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.099153364 seconds)
  done (took 5.946033092 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.017206825 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.065311333 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.182186946 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.206756857 seconds)
  done (took 10.266027826 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.160992887 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.256868169 seconds)
  done (took 6.211115323 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.204378226 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.902103014 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.28896726 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.873474098 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.875580251 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.876757271 seconds)
  done (took 22.422513173 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.876161702 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.878297878 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.875320982 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.878528162 seconds)
  done (took 9.30188906 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.855137112 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.550968668 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.856312659 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.871989595 seconds)
  done (took 20.926874726 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.060806439 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.991860743 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.01781094 seconds)
  done (took 7.862253647 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.48067648 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.803233934 seconds)
  done (took 9.076576225 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.043756802 seconds)
  done (took 3.844871059 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.912362542 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.154810465 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.380374808 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.401913961 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.467207712 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.729446954 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.205748557 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.114948557 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342713151 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.349822897 seconds)
  done (took 24.86023016 seconds)
done (took 136.014920818 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.230420757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928991493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.088064311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.244604844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.121689404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.082242932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.106038039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.242412553 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.944655854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.927343992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.251582505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.11836499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.046183853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900022427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.058124159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.902662153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.11626117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.255866447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.938338721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.175079762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.117379242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.895021223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.089183751 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.909860642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.115949073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.03488822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.437623078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908837519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.076751058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.448074659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.040170949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.306985227 seconds)
  done (took 168.861521937 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.888680158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.886309792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.888381477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.885630749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.461025992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887476976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.887306926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892897616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.310575378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.304160413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.889691676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.448428056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.891590758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887141475 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.887758778 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886816827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.468196633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.887992508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.888664295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.885339687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890042894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.29071074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.886737699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.291335965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.457039004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.890063383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893693743 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887554906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887675465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.887752458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886832396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.88872795 seconds)
  done (took 210.159701572 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.887932041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.888618037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.890827529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.888690308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.892069687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890061553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.886440239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888512817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.636569243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.630752429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.887620863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.88859678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.890625828 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886087021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.88671243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887167497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.886000487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.887286641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.888854102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.888524071 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896641082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.630249393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.888676776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.636926217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.888241131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.890790331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886841517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887162529 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887073387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.888381993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.889352833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.885730421 seconds)
  done (took 221.222027679 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.144355548 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.894461372 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.895998162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.824976578 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.893801971 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.894728971 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.887896019 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.148208801 seconds)
  done (took 19.39217441 seconds)
done (took 621.445697737 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363658034 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.220628163 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.069310777 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.919446313 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.192126182 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.952706156 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.914977553 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.977472304 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.540935932 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.9857787 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.564067518 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.934569201 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.64877033 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.941387793 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.043161006 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.977485892 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.460249624 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.55044726 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.09395996 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.996145336 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.086595438 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.854188959 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.999148707 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.573228023 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.670951692 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.904408822 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.986271383 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465050571 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.924254732 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.079229251 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.664808027 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.231422171 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.931667532 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.912047143 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.973944448 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.94710194 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.190590752 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.926308455 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.037762442 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.667680065 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.012628919 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.445606907 seconds)
  done (took 103.64006579 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.884641048 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.881506166 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.881623705 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.884335938 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.881053469 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.882804741 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.881325138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.881644017 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.881446225 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.88375884 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.880931334 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.88374711 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.880411124 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.882610307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.88259044 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.881950006 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.883079658 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.884477806 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.884914716 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.882532851 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.883649285 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.881014221 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.895345643 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.88344146 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.884296384 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.884887753 seconds)
  done (took 50.782905699 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.896268252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.045395191 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.136824284 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.9191472 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.894964305 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.898608477 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.91376685 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.902964314 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.898068406 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.896357746 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.001953655 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.905701477 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917956153 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.134553158 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.915883684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.895540742 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.897950977 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.898621086 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.052489057 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914169431 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.916929962 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.904695979 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.914912949 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.910308197 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.899320572 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.897949576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.901194685 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.398471736 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.907827966 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.002726306 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.945728914 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.923262771 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.344570336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144485501 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.954960964 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.913172234 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.902062422 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.00734279 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.906315789 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896581926 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.915712959 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.906079936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.132302838 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.391582999 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.915271809 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.900995766 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.408356777 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.017740506 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.942810439 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.909082227 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136530872 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.919980995 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.900393234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.900408302 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.935119511 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.908630942 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.898604591 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.247736421 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.912532819 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.918445299 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.903689229 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.898537735 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062784941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.909661184 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.048665339 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.909259585 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.907386082 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.900793191 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.133277374 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917276267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.391749005 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.913802693 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.901281382 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.005949281 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.053331872 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.436950157 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.913468202 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.064525281 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.364140518 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.92617748 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.905764793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.392556383 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.929459682 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.908133383 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.901522213 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.901417416 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.900672233 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.947796955 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.916524084 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.329951311 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.395447136 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.27132246 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.931907101 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.914089027 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.901557404 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.248559061 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.911094036 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.901362374 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.130709854 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.404645472 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.917781631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.907119379 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.380871342 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.918713404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.917771978 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.908734876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.140762162 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.917974599 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.946273635 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.900730563 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.908510373 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.905237962 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.919054495 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.908716511 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.903381198 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.374186993 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.029864182 seconds)
  done (took 235.87455524 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.899548691 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.901352337 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.897383094 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.899874851 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.895682701 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.899163613 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.895713883 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.896437557 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.899947921 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.895940064 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.896269852 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.892852619 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.897882324 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.903961168 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.907236158 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.905588015 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.502884689 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.899262947 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.89794545 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.89913957 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.553917685 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.907455629 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.897910682 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.899543978 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.899069142 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.899314492 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.902500156 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.903343011 seconds)
  done (took 168.265417793 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.905193504 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.019861901 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.928911485 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.933597898 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.916022517 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.90370607 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.929201467 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.925438737 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.910048002 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.905878376 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.90660546 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.968265586 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.917004267 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.001973512 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.937306247 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.939242852 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.008534452 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.91766357 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.904246386 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.905039317 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.935098338 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.896671863 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.964028688 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.038349274 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.92752902 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.022776488 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.914066836 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.905117863 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.906997407 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.022868231 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.925011444 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.966917 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.937239675 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.92577043 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027956132 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.025532017 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.015012433 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.937843572 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.910906203 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.90483009 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.90574382 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.894010961 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021242215 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.927777098 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.904857607 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.015264435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.930895493 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.907354203 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.915575823 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.905663873 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.919969969 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.923291538 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.973197817 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.039351454 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.941563741 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.933474625 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.929937845 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.193785443 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.91815385 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.006148242 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.901542319 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.028441172 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.927191233 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.892936548 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.908113772 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.912605934 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.935848608 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.940793745 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.010513042 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.916375354 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.006031605 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.94360786 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.913970493 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.903983498 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.91022509 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.024511944 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.032850494 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.943829439 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.943670955 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.938563145 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.903418131 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.907231237 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.895062557 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.923845292 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.909701169 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.024324456 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.025867891 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.913911427 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.909476335 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.910120468 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.909623009 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.932913615 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031575061 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.945863408 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.001881635 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.974374112 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.983301346 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.924074879 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.920918757 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.912384321 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.971064059 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.926350842 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.921249104 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.239961217 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.981324843 seconds)
  done (took 206.560140804 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.374131834 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.963926412 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.964545675 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.231135245 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.269027958 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.814407957 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.959012981 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.959496813 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.982446832 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141833955 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.032561105 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.979425 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.945336948 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.931343809 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.9549448 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.982176823 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.969078846 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.270581561 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.057705513 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.108591305 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.93913669 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.225066337 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.235353886 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.343055393 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.996960459 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.293058817 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.618729663 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.099487738 seconds)
  done (took 62.472194677 seconds)
done (took 829.402016806 seconds)
SAVING RESULT...
DONE!
