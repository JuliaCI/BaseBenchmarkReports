cset: moving following pidspec: 19701
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.287594123 seconds)
loading group "string"... done (took 0.583322843 seconds)
loading group "linalg"... done (took 7.121049417 seconds)
loading group "parallel"... done (took 0.163389767 seconds)
loading group "find"... done (took 1.119222764 seconds)
loading group "tuple"... done (took 1.976730756 seconds)
loading group "dates"... done (took 1.263454925 seconds)
loading group "micro"... done (took 0.23493943 seconds)
loading group "io"... done (took 0.958924627 seconds)
loading group "scalar"... done (took 38.303960383 seconds)
loading group "sparse"... done (took 12.306671998 seconds)
loading group "broadcast"... done (took 0.964559702 seconds)
loading group "union"... done (took 13.024098339 seconds)
loading group "simd"... done (took 4.413850715 seconds)
loading group "random"... done (took 8.928829977 seconds)
loading group "problem"... done (took 1.9231745 seconds)
loading group "array"... done (took 21.118279851 seconds)
loading group "misc"... done (took 1.917815954 seconds)
loading group "sort"... done (took 3.191401069 seconds)
loading group "collection"... done (took 17.870972733 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529692287 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139629648 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11659255 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137263234 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18352456 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131584747 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143551546 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08346328 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01085214 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160886023 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137995455 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475367677 seconds)
done (took 5.009505804 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201740761 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085264604 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09540683 seconds)
  done (took 0.883525858 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065269086 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125392359 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079562776 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06684551 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065840447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080488831 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066175509 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065385158 seconds)
  done (took 1.260689349 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073588656 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067704076 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083338936 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066598096 seconds)
  done (took 1.001578284 seconds)
done (took 4.134199335 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894070257 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233332562 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187783337 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45157514 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146849169 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186373393 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665088916 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318219654 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20891822 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099578126 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103877442 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376728129 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105932383 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673777833 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074620968 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104821993 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157536509 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423509855 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080502739 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08196992 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10342369 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141278777 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0990724 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077007237 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168149408 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068857473 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146344479 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093937872 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068374237 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242680712 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189365715 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680213701 seconds)
  done (took 10.399109409 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098714219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115327543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068250626 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138558949 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100131674 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085593801 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070093211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082317984 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089662061 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157014454 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11230514 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1043225 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080990053 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069300204 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099086907 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211058963 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10711594 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08378474 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085380114 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075356288 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120365206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080995754 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092598843 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07699031 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150649588 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193765628 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111438635 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110423495 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06814401 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079755708 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131017549 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140286714 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065635937 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081152495 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137922176 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109534952 seconds)
  done (took 4.509899366 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023195239 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1593014 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090364276 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151176755 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084936469 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.126604681 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10916746 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082135713 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100072183 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245287774 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.138551355 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.454354487 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126666034 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100973956 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068235887 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082898073 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065380084 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065870311 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.524272586 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110354079 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136206162 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082902218 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090015524 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06839043 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370056833 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081190783 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06575735 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067173822 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075187078 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142809292 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067593951 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.204056837 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088764953 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066593244 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121246411 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191109593 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093367952 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12192039 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065205765 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080605556 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16809402 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073753112 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065115066 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104058238 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117544966 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103389075 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082838117 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067149005 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179229705 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066671774 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097917379 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.885592154 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163118076 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07685221 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064748912 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285437639 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083340599 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082989578 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06358587 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272346393 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149370123 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066332021 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082283999 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069868583 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067004963 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38074386 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06685514 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.005551283 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067846104 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077101274 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084998648 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066917993 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087746144 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071201749 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099816622 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065846165 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067049752 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081585583 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065057142 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082772836 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084377477 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20076235 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082356941 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0661424 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063216519 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081172546 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084630724 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111130908 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068542109 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080887442 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09875235 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082675318 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06662154 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118545035 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065982891 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079709561 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083694052 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084465486 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126585149 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066553995 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.127509188 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080142917 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09605864 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08963552 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113245825 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077715635 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083048751 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152144526 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064107635 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063597394 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082669849 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064633619 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082447889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068236948 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09453932 seconds)
  done (took 21.083327079 seconds)
done (took 37.726807534 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288605428 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090010543 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090249934 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07419084 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089969085 seconds)
  done (took 1.421993686 seconds)
done (took 2.18440684 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119697064 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115353186 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062618742 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111633064 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062829516 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115352963 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112674759 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08021215 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116473271 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06322708 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110559853 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063146858 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06240648 seconds)
  done (took 1.9855647 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081937592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083273575 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084547682 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080769705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077273949 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081268807 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07901131 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103656224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078964377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086564802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063453241 seconds)
  done (took 1.660361858 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081628789 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082264911 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083920337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080170709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077484174 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081172936 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079222595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100698077 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079157993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08789167 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062966448 seconds)
  done (took 1.65526847 seconds)
done (took 6.055467238 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077120017 seconds)
  done (took 0.831641491 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.690710961 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.505948775 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081726479 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13273819 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221322626 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151690584 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.439430979 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107555551 seconds)
  done (took 10.258965294 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100945859 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08360592 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071253224 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083550537 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071160899 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08520463 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067846578 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068678833 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086104684 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071166757 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085237797 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070754179 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08455669 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068226122 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07052937 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083553132 seconds)
  done (took 2.070464158 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092532962 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091940287 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089973448 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07467594 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088212734 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071646476 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090360822 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072938846 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08571849 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071343716 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089483626 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073452865 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086913037 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064898349 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089749587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07587508 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086297005 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074914392 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090286283 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075530059 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089636174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064692653 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086074988 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074754685 seconds)
  done (took 2.812986737 seconds)
done (took 16.736143228 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129986765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074944664 seconds)
  done (took 0.962761486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080475322 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09682053 seconds)
  done (took 0.943845323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081366173 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080831656 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088207678 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091731817 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080727968 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065166622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101459975 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065964276 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080356636 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06546226 seconds)
  done (took 1.567739343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067743675 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092007594 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069392243 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095355399 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072783147 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079399652 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072493996 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082547218 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077294868 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077664802 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070332702 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097018765 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070601015 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.098429994 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072030945 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082981723 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086357921 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067517512 seconds)
  done (took 2.199099814 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065020976 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067038133 seconds)
  done (took 0.905583766 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06603121 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063318783 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081086698 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066213191 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077800405 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062717334 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078064488 seconds)
  done (took 1.268794449 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398301276 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108606374 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241805881 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087295226 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102303827 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260230853 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081825604 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070130474 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086721715 seconds)
  done (took 2.247474326 seconds)
done (took 10.860646758 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07840092 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085186913 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108677401 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416888979 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104370399 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065301509 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.140666394 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.203214539 seconds)
done (took 1.977126715 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123758786 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602858947 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.395004639 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209933214 seconds)
  done (took 1.983155133 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.367255722 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090879465 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073563761 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066121529 seconds)
  done (took 1.378325428 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065740105 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068688033 seconds)
  done (took 0.911256827 seconds)
done (took 5.174393204 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065911714 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06609923 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078958949 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065499119 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099187438 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063290302 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063549722 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082679126 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065514799 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064886506 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082011579 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069035436 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082351797 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06328493 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06399615 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080896865 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063249824 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064642178 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078892891 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065869176 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063569613 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078682859 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06358256 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066500949 seconds)
  done (took 2.512244817 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084885419 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082494517 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071393961 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086787337 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070832194 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087024508 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071878754 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066213518 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086508011 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067868749 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085172629 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069814891 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083696459 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0697854 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083409732 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070285837 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0863086 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068827062 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068931018 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085171891 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071643157 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081449562 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06994991 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085890431 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070061372 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084985927 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067930241 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081873134 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070739634 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085337594 seconds)
  done (took 3.096658683 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069787279 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063249328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079942492 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069837917 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063090742 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080272982 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063041711 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079483321 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063706318 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063468225 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079931251 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06342525 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063504034 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080605933 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064142287 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082522847 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079556485 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063540993 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079757807 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065240922 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066625581 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078768496 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063882907 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078669428 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062852384 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063107867 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078956426 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063671239 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064216261 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079370606 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066127754 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066414039 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079090939 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069841251 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082544769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062756417 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067247078 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079055646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064134672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063443974 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078668775 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0637151 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062553503 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085293362 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063354299 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080782852 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063444613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064970292 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079558314 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066197365 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079281482 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063199786 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065023817 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080215482 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067083311 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063592705 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080137867 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063079761 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079439373 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06328651 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063409778 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078628893 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065527707 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063910963 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094175296 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06985165 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078759894 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065226155 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06484648 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081591726 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065406132 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076944551 seconds)
  done (took 5.880485358 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115572514 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090351637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081979649 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065672525 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077916932 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063386465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067054164 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079578317 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065819189 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084920378 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063938726 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065222009 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080957759 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076787956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080125981 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065229713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086051046 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062447924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063809009 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082886386 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064029594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082940852 seconds)
  done (took 2.453952509 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.182520909 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086823225 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108011121 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08851578 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08337915 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072322903 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085261204 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069916647 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070022048 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085111801 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067977065 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085575428 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06808044 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083313046 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067907416 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083821253 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070133076 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084388365 seconds)
  done (took 2.328057979 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076839634 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066222669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10518079 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065886208 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082524884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068189714 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087917671 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074998582 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084481401 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066558806 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089312707 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068787202 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084279263 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0658601 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068431809 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081889897 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068228646 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081795385 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074927131 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086500659 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070971738 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089692665 seconds)
  done (took 2.496684328 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080574331 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067625014 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099974873 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085198896 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062106742 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065168883 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088791529 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066365915 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088016221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068312207 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06597103 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081302942 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070230378 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08220017 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071197772 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081922742 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068595818 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065158302 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083389646 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063228681 seconds)
  done (took 2.293153641 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085138409 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082862032 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067014621 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090231677 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067619973 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083178015 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075917262 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082715977 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067068121 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107754684 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067343 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082890908 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074600544 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087845067 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067126309 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090895334 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075202428 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091312871 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066911827 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083007584 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.21607227 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067414158 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090416157 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067076433 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082503773 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066793288 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066546831 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087658816 seconds)
  done (took 3.133557036 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065379891 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065856527 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079435147 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063258912 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064178443 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079843823 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063311062 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062981031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082652144 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063521268 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065428011 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081829787 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066691302 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081326173 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066308576 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065894127 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081989771 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063242587 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063571691 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079804424 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066041341 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06554206 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082084139 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063703895 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079508498 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066093316 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064020957 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079462698 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065819187 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064264453 seconds)
  done (took 2.895004109 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075831115 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089908133 seconds)
  done (took 0.962276623 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06398792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080095281 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079821039 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069894245 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087082945 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067654346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09036658 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070447887 seconds)
  done (took 1.40291595 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081740947 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077551352 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08402905 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078092071 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093083271 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082804153 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15369712 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08398149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0729436 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081652758 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0797643 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065929611 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089491364 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067133686 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08868339 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072629833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063938002 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087688167 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068786791 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080899002 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067719359 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09109015 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068754674 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062620713 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084201054 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075436943 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093375554 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067350492 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085780044 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073147777 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070910426 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076430125 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066269642 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083191409 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064284381 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092262044 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081080218 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085161468 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0745666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066960713 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09199888 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061640464 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087429953 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072386364 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092270772 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066487047 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066023356 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077949254 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064444867 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084289511 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061352218 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065851282 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078303597 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073170049 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085728081 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076608184 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067321426 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084097184 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069218182 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085971411 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072750719 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084408663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068592817 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066091517 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092124632 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071021639 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091064382 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062006659 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060276458 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080792139 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076231969 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105063206 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072184964 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083576559 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067557137 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080438806 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070132688 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06749379 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087469158 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072071694 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083002366 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072191719 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08916894 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066802855 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069126523 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090048696 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064844868 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084808426 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064746969 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0986995 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065116061 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08110809 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063889632 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075896314 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085892125 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066224037 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08029301 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073817352 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060654464 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08297882 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06810481 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082906327 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077111708 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087421958 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071472671 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090835324 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074072611 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066238177 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085563541 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063238125 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083342846 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06518632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072825805 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077119331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069327303 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083895667 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06714226 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09065662 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064093651 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06727587 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08991629 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071990598 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080741519 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063062146 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068702279 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082758722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069688659 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090334241 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06487937 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060941398 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078192806 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069360037 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08274914 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06956746 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087359748 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069114985 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060899205 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080432334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070517044 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091187964 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067494264 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066715423 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089246872 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067569193 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082080092 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072583368 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085037599 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065475075 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071605397 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083747017 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062261295 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086551732 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068798928 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064923505 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086479303 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069095727 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084981393 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067182284 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081594566 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071338589 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067007684 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082036131 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06659568 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081034298 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07602319 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06732649 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077936602 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063702036 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090035724 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064411355 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064788225 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082023696 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068569218 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083285286 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064357162 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065363639 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084276297 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076619669 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086988825 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068146101 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088137835 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077623961 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082756632 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068866417 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065671866 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084166365 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067292429 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091313685 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071648253 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087909174 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069062078 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06298638 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088025828 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073135403 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082138128 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063996943 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065696645 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086570765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071847462 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086122377 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067760839 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081270109 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066905758 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069063369 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085384323 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066075209 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081744676 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071043756 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082688809 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072053381 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067589967 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093308848 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069577886 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079195769 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070867076 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081024719 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07192036 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061454382 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081520069 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065922702 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083960611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06513455 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069097967 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077352239 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073013608 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090167841 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066243266 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065522337 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083359388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072968777 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08450157 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070535556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06909835 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089389713 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076104696 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082172166 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070040854 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092772245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066683607 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060673599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088197219 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065022962 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082624239 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065679943 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063582361 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086196315 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075050748 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089122334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060914537 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084811521 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065221273 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065279012 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07873629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071585239 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085314109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067362091 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072430667 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084180069 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066967028 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086029122 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066361149 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066439834 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084592687 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069904688 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084339944 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069059314 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065139056 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086969291 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065931234 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080967404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068773698 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065784021 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083654963 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072387164 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08259855 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067045034 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086101462 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066939917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067140228 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083924955 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066457303 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086191789 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067489677 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067806715 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085440581 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062823054 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090219204 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06706881 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073556733 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083952084 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063582849 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087700296 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069286339 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070378088 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084043771 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067272649 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084516325 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066564497 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085455234 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07262913 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064219501 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093587389 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073438668 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084026784 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069547477 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08292984 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068018673 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065863134 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083692208 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067853101 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06612978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083370606 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070821431 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086018143 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066584308 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06717264 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084743181 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06646095 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084889563 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061517038 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065219088 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08297692 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066126065 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09291017 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067412818 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082980159 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06558181 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067369158 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08239224 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063143008 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090361012 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075696543 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083799766 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073201494 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064916088 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085165198 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076198553 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078023682 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06486275 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081128485 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064147387 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074028129 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083556242 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075600994 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08341569 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066089103 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063613769 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083778189 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065213308 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060850373 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081535592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070628233 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082359957 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066292545 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066057666 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08696626 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067855078 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09287034 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065863106 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084760012 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067507144 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063196262 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083032315 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065990901 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08647537 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067234076 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064583129 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080843413 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066976557 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066734574 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084667759 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066547692 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084434986 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073386089 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083245254 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069876803 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069121506 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081344969 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069685956 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083198296 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06634499 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06567282 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087210009 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069786381 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083936113 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07504836 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08272671 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067452827 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066208924 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081411542 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066589673 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065226096 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084622045 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065526953 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084752183 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074248448 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081125694 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069598767 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066224046 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084210011 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07371568 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084395309 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069507318 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090572153 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06665947 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06820739 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090594467 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070116786 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086427275 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067457553 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067377899 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089132204 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065653701 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089429498 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066760431 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084089101 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06847176 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064101805 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082837815 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066910022 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064890984 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089629692 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066578559 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08267534 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0660762 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063543502 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084432551 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069664135 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090854811 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06864094 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08620156 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062043249 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062933843 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084702953 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064460042 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085121888 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069328394 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071736336 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086054238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066984543 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082773151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075380544 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089069984 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069842622 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064797561 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087299254 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067636211 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085228153 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067311295 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06668671 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084745366 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070379763 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085072073 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066011422 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072891374 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086799516 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067994092 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085593112 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067793158 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066441134 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078559392 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066786948 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085315741 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071498603 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067612045 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083819741 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076486761 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081326035 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067256198 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08656253 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066794925 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070068815 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07899955 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068337183 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084370525 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06763425 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06118088 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082882067 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064458798 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085595014 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065941617 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061874134 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094463216 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074894114 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086855518 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065899948 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065137706 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079549427 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062037616 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08327678 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067846303 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067947124 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093972066 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065789719 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08380459 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062040195 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06599973 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087409016 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069976195 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081489327 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062233 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065311044 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087221989 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072261805 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082808001 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066248438 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068841621 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08597372 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065028133 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087198415 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064276688 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087056207 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079473734 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066766578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084594608 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072341324 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091319118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067139501 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078973104 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067283454 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069027824 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084290891 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067332831 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084847468 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080795532 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086689952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066420324 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065033781 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086308967 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065969509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091106406 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067312257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066551315 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0894055 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067998669 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091931272 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069207142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091035869 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070032244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08629619 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06565835 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066127217 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081710398 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065959806 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084509929 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06740015 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070918389 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091311687 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065529613 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093900764 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075901859 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085860163 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063855284 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065565882 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084380987 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062057258 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084691336 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064866491 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064235596 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082255792 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066412841 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084601907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071821067 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068072839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084660412 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066141303 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078211094 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068208162 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068475603 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084717155 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06434321 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065956384 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08505417 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070584699 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086993746 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064502932 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084960408 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067933419 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066859159 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079366804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07295433 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064478876 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086808519 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065711955 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083920152 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067516077 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0867207 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071169717 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067050636 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086028367 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074682263 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086174952 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064596424 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063038371 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089413479 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064018681 seconds)
  done (took 45.726783133 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105990527 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081356664 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061901188 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079992281 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074115533 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08096151 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061734818 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062276803 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080502169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065737528 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078997038 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061890469 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088259071 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084722088 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0913015 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065642663 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080011114 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06272831 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079795514 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063446797 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08816763 seconds)
  done (took 2.444066995 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074300398 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08916881 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072394287 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094121506 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067125844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08873999 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073112033 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088318343 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094449773 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067448294 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093446112 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07107942 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08493853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067382099 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084289922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071019853 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095102563 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06840767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088355484 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073052211 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088558015 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072859575 seconds)
  done (took 2.609814788 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066671484 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066169222 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085677741 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061704764 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065803342 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079290396 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070513537 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081955769 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070129355 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064724007 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083131937 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073586096 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084919213 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06157646 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066449028 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08153122 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129030861 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069344485 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064695038 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08510821 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062161325 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086422072 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061876016 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061515277 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082938085 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069597821 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084417308 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064634758 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065565223 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08312813 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066155204 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081244707 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067225764 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066074252 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082845086 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06530503 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064658066 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084294576 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061992675 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081733359 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066931899 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06203893 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083713587 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06820814 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062999181 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081557765 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067039343 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083154805 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06125373 seconds)
  done (took 4.440108837 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084277736 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128754823 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086586901 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088578398 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.099886536 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091445212 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070012137 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109280653 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063144404 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083380076 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082387749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102048757 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084032073 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070836369 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090255803 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065967162 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065637253 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083195327 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069018951 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083729385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069626817 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090199991 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.09812875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079340205 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087461093 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065551805 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083010579 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070422958 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096958134 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070397281 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088188935 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071526828 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09913452 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070749409 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083618975 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068125894 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100141861 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083555201 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068109861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062884053 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086276724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070402398 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.09045881 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.09990708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066546325 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070036244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083821848 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063051424 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096697663 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06712503 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091952866 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098241267 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070157059 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08426736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071456203 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099210207 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065981491 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081890807 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069278201 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095938093 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064781387 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087126705 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080083641 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085178125 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073595064 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098432896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071197869 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087560287 seconds)
  done (took 6.547557037 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075189275 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090508965 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080059391 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098820666 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090792768 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.0730337 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090698975 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07276735 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091136724 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077219809 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090429731 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111111409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067965207 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093501387 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072324174 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090382402 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07292304 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091584285 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071521226 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091568597 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090494174 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080997259 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090317475 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09876778 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103323583 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086087327 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072876064 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090691985 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081577945 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091627963 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102320995 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073346441 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090873164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100257145 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083471993 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090533849 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065496065 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090296782 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073078092 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090720874 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068274983 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099072858 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072122445 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086657376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072867376 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090598461 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098334418 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083404235 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093499967 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095089398 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072692866 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098594003 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071961092 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091627109 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099146771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104077924 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098491442 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098403423 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071904362 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099377711 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098553228 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.105287906 seconds)
  done (took 6.264099606 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086118366 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093588318 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094859514 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061696643 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064933605 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088679916 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064229724 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082519574 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074967399 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092940691 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076968332 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088093655 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07241726 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095322028 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087943126 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073940039 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087427236 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07050249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092735671 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07067336 seconds)
  done (took 2.474896137 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074525117 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101710306 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067137917 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070923708 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088178698 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07165242 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087491406 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069478396 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085205104 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069791876 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094541715 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076282857 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084902876 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072886869 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094057839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072510913 seconds)
  done (took 2.140569821 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078224853 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094478342 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080171728 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084822568 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064729573 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081200651 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066080384 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061399696 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081026739 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08021481 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085224494 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068966796 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084393859 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06466344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062495835 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087249271 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062339824 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082500601 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066707543 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098493589 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077132577 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082962905 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067354696 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066429025 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085375877 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070248799 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085346117 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063647847 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083357459 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067080626 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08435181 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073569909 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081067421 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06474461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064116552 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082086041 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066086974 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084494039 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069442992 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064918073 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083863434 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065950807 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084035936 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067600629 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080542882 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066578107 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061947839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090279679 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064655689 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084703494 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066248178 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086233034 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067169855 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075343019 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088249548 seconds)
  done (took 5.014462315 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080127988 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068768138 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080542033 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064164901 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087252255 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068496521 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068506916 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086969964 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067928052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082261658 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068762539 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087044069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067872498 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069374052 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086997841 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069407311 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080405568 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068547816 seconds)
  done (took 2.216165295 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071621235 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066623165 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092129179 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067670137 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085081796 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069104754 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062235088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083932355 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065334156 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084123543 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066766941 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067836718 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084009447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068852713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083994445 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066335193 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068237242 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083417456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066641171 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080769781 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069158176 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064417322 seconds)
  done (took 2.483258196 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071678612 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092037852 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160902761 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105313449 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081615242 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098602223 seconds)
  done (took 1.47582101 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090105989 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097860497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067689979 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105508357 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073607795 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086717228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068324058 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086479336 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077366078 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099206667 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068494497 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095491198 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094860041 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076545812 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092100086 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073669656 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086724055 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0683775 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08490414 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105099601 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06864389 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094398659 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067999284 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086228509 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068550059 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094835905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076011874 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099931015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085990199 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076305083 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091583589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067810693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095087008 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099931644 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070116053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095167158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067984282 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104101774 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07278334 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09465519 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068445582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093024783 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094948157 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072872089 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095582167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068511921 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091298608 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067344398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087007882 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110243215 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073531925 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095106016 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092761096 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076162472 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095023891 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10978453 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080999171 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094277684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092369559 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081564194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095180605 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073278887 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095221237 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099895899 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073803148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095077159 seconds)
  done (took 6.516863033 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084592781 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104051566 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069375477 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099832308 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0955537 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068521112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08649178 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068457208 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087056652 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067533629 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126498233 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068472559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094890141 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094381647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068315411 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086207861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068450447 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094031395 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067811075 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110979752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085999887 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076398336 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094263408 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095084255 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081153187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092524296 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0680205 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086591248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068659195 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086515599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072317909 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087028332 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094636943 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067805853 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094460839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068714148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086612854 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072932185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086765698 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073212563 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095409755 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104492838 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068621705 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086979769 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080934975 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087192986 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067653951 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086689166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06815148 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086385862 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080770379 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101157438 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100251582 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095419641 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06909862 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086379734 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069136768 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087063317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069034436 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092615588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076781553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08640416 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111784099 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06853954 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087013645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076128997 seconds)
  done (took 6.41194626 seconds)
done (took 126.999010281 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209506088 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.20094995 seconds)
  done (took 1.277126564 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06818544 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095191142 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096959803 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128212328 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086431843 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100204323 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11829145 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079484554 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06585781 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085648201 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067490921 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087011001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130654309 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06706728 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08586024 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068361381 seconds)
  done (took 2.308244112 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102103955 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194641284 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108287839 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065162554 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098928016 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078017652 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084344846 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076408679 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094179349 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065938245 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077697274 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095128344 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064671222 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095193226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075408838 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09673543 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065671635 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097445978 seconds)
  done (took 2.513294591 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103261245 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147563536 seconds)
  done (took 1.124956113 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.202032905 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121548755 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20033509 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.409450256 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207949824 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27498091 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.171548883 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169626509 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158015259 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.166938521 seconds)
  done (took 2.957571162 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098173021 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169136384 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309493242 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136995515 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08512361 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114680567 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13647191 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088369493 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099458449 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.09873934 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080345643 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096328259 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097160305 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0946822 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074111794 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095976002 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120583948 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073630829 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095478632 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075272668 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116760257 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06688125 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093899028 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07396109 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076353846 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097120169 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065557962 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085106129 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075807437 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093723339 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078154633 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113284316 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096122787 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130027923 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081628442 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129710077 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097186509 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072349061 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094168134 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072151267 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097181381 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076582547 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102728274 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094653459 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065984506 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077198268 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085048301 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066500695 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098765272 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077053755 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099142303 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078747365 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128333657 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09609631 seconds)
  done (took 6.169441857 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.747205848 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110172884 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093369623 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.807533597 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089176501 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104520473 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.715251141 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116438668 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207105151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762359543 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08834921 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097936363 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179608709 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232433625 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922916378 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283704037 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632010939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103550005 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107830019 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131032656 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137529071 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174551209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148554666 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435359635 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074712945 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09104989 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134488578 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094195065 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.13814393 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084063045 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093586172 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154675891 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.22601604 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154587357 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095967473 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069834342 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09021007 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147656884 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239000487 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16843609 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157213952 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067348866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09015716 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138237902 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1308911 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067469703 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138475914 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171553383 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147810318 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072691291 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095509538 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140663988 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136284815 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141336464 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100696545 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270800329 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281690617 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089683816 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097489818 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102919493 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234221185 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082327987 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197839792 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137712416 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165531251 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090301902 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.72980458 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144995413 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091608462 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073731698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117173868 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094122571 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1380271 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142003269 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367944327 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142026109 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073561669 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089511332 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208370569 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10342031 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070797913 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140659123 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094978397 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099693314 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162893813 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141289136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145245799 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207153733 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138966402 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157117854 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07479334 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122372293 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093557123 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188612454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171634295 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.13903488 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.204554706 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138297662 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141097333 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146941131 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095417802 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148763484 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117649561 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08003673 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135930225 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189676606 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121948053 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081878144 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094186136 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139006971 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125157176 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083836915 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158796839 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149011718 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45904692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145364901 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088250047 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086793172 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137164834 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160156873 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075399259 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230931422 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100614859 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166265689 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119697392 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068694577 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118163073 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138795625 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076899627 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121401119 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156132932 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076335358 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212429558 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187474231 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076492272 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213308857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160243009 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0747588 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146139659 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119717285 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143049151 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097317655 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138330211 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07418483 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76066094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14224689 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120171332 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072565837 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175306081 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09005268 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082671873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104240815 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067799117 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.748437579 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084644225 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100419768 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10275694 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074733205 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120003 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13525926 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092337682 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137627423 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179251937 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095967549 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116600769 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082882186 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13850378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095494096 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103537301 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084072566 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102896865 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121389888 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07337788 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102421747 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144097522 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.139307164 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190747638 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540932772 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069087854 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103634227 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198759229 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070427862 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258205998 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136047863 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194795811 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138934536 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07990124 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.277886092 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14145171 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.173997867 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10522953 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149520456 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068819633 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135331878 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139937158 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091444529 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074688167 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138182939 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163599963 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141075379 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928242243 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070835689 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20097294 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06695435 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16857536 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075470031 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096311944 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.245917013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091250668 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144992923 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142298325 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092353971 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083326977 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671002953 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104712297 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137073127 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094426571 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.169752216 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161432821 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13444152 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137484624 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074743225 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137509518 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204697185 seconds)
  done (took 40.117981813 seconds)
done (took 57.344686448 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258771804 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180763032 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240660797 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143663836 seconds)
  done (took 1.797939055 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143085096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103787513 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116430728 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086032466 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102162735 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085556698 seconds)
  done (took 1.538256045 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40295148 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263584271 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23012096 seconds)
  done (took 1.798548493 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260311182 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212258113 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448568735 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297404368 seconds)
  done (took 2.244574633 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.17535105 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112685494 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067334421 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10545307 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158038173 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250828417 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12719682 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185902645 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078906045 seconds)
  done (took 2.206989589 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197062043 seconds)
done (took 10.689215019 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.256224541 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10372043 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104540745 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.174908063 seconds)
    (5/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.213341358 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.195068497 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.234466245 seconds)
    (8/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.207693082 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.152648086 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.172889287 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13538357 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167189935 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082455841 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.268471039 seconds)
    (15/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14289284 seconds)
    (16/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.16664015 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077920834 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097298785 seconds)
    (19/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.203195279 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051590825 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.185549883 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078772629 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188796764 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.186049178 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072343791 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.136380235 seconds)
    (27/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073459719 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221419606 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222956428 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 0.173271756 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.061811303 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121756465 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.168904837 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077989017 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.220138219 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178550154 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079704493 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050687166 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.075359257 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107210985 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.0898537 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070239588 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065956732 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095821016 seconds)
    (45/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.140635652 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117903253 seconds)
    (47/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069152852 seconds)
    (48/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112137501 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073121512 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189861783 seconds)
    (51/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.170373263 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078778921 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052395534 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110172899 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11735843 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107327741 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07230499 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097823344 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054562237 seconds)
    (60/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095406944 seconds)
    (61/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155941758 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109656363 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074200457 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181741681 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173152128 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054282633 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088806659 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115426724 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.132409158 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051426198 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06312643 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166414376 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167181215 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052135887 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052653455 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089232998 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.161331165 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087556766 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074339077 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065410096 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072801023 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07641236 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.122321304 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.181980752 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05177743 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184651201 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066360807 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.202177944 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191536249 seconds)
    (90/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118494576 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190739565 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.136961715 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074229868 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052474186 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.116270189 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095446022 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102978769 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 0.089012529 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077106463 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070918733 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089802386 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065713368 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087898245 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092017029 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096794755 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071864656 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100715202 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111127375 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08171345 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112421132 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156865471 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073488147 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068216325 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095616272 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061556228 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196515799 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062444811 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051395334 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.122024406 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105093509 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07442517 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051572457 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074666856 seconds)
    (124/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102835791 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095798444 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094077537 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145764959 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123391303 seconds)
    (129/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113266813 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093284938 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119941244 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078167318 seconds)
    (133/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052504266 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073615727 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.156880642 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07434566 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157336244 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053043292 seconds)
    (139/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053504877 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098100552 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178017313 seconds)
    (142/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090280843 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073797991 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067016576 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090133779 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162624159 seconds)
    (147/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173212357 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094760116 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071903744 seconds)
    (150/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051127216 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075086438 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07381742 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065316393 seconds)
    (154/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095851212 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076915761 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114607931 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122353824 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141631201 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07919967 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095118979 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074473413 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052302537 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094603448 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145088459 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.185682377 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074803526 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052125714 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071004496 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114121686 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066010012 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051184814 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095193579 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.0521239 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105773993 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052366433 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074851683 seconds)
    (177/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.083601334 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075712375 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106266399 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096331937 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068577923 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.074229876 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124466932 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054257881 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074015897 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054830143 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200583537 seconds)
    (188/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062662266 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07292633 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096688991 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053057467 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170672654 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066363578 seconds)
    (194/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099867715 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 0.128480975 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075171062 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051774317 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066912403 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095168604 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051699098 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.134846215 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.168456077 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101199988 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066100641 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114182245 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075610854 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.129764159 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072838732 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.291709245 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088268193 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067540624 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072397609 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091620698 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065012231 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113277036 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072810096 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099055061 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092583874 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109062335 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110150116 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053378329 seconds)
    (222/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075395807 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073468742 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052493374 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097561754 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.132818095 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088337856 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072565749 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088304201 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071325 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067724247 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08727795 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073377772 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189026731 seconds)
    (235/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078808829 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09097074 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066663616 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065405261 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.132588083 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138909614 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07389991 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06639139 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060131191 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084487367 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05288776 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113154174 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092156715 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160492717 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088309084 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158159411 seconds)
    (251/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079198751 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.07316075 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066061291 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051825547 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088154266 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091686085 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113004832 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078871201 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079664419 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088975355 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.158525375 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095702238 seconds)
    (263/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067190149 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103253305 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111454996 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097282601 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064929101 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070795732 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 0.147458476 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052616975 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089202871 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065781998 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053458049 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088188448 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09503789 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08828036 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067764552 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066564756 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.07362803 seconds)
    (280/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069766879 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066309119 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099063198 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090114445 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095657843 seconds)
    (285/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068713297 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06411283 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073314843 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064420856 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168647374 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074162913 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087285049 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073158565 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070919664 seconds)
    (294/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.074547461 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104060533 seconds)
    (296/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050909903 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157125575 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050712658 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12458112 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052734753 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087460755 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070787249 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051631539 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051305543 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.074813726 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065969894 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209036112 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159007452 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195054563 seconds)
  done (took 33.018565346 seconds)
done (took 33.929703201 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080337304 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114272016 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074677168 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115423389 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081853077 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100046317 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072557954 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101442004 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080454832 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.104666445 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079080701 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054871011 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097378454 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075410762 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09703439 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093342479 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100170814 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072828861 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.096099677 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06493147 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074588552 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088733824 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068305066 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055970172 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100712659 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073532764 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095390509 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075565283 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065591154 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08852706 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069328459 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.095476011 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065318951 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079435344 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09453803 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07337149 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09765314 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076417392 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067149542 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087776778 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073250884 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065078683 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094747301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073248495 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093156687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071162725 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074562692 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100912065 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114260839 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068365785 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073881422 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098798941 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077210327 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.094975068 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069419961 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07313441 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092714139 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091731499 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096374328 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067791496 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073163866 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096668626 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07114116 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095820305 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073829283 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097968742 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076538724 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071386301 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097832926 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071290023 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065511891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096412495 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069503122 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087651026 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075297444 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07616493 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086762073 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072000452 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.094497608 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071831114 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06538401 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089579204 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067327381 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071803205 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090114857 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055881245 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069114877 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094724101 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065582558 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09598634 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071488547 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072807922 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089416927 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076942637 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064878409 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093469889 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066077086 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087498131 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067690291 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069954126 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08826417 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068633807 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074622491 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089676944 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072877081 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.102073198 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065253176 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071967946 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08738739 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06527453 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104773536 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076047137 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066043644 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090621355 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065057045 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073085189 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087480088 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065745134 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087748808 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066218098 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071850577 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088223 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067900436 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073241957 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10142971 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065791366 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091188365 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067713219 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066444805 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093461586 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066094371 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066159243 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090331449 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063369028 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067962618 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08912006 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073204575 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067334932 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096894496 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067910548 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096801359 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070462128 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071546158 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093629284 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065239098 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058714433 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090287293 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068273118 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08970654 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065790728 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067585164 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088260171 seconds)
done (took 13.160508966 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066145034 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168532752 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125327798 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095623677 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109998785 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066280998 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099617067 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10318986 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090483288 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126991025 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087106759 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107470494 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113898613 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088802323 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066146518 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070250895 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090785265 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088274386 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124160958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086739372 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139989107 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08796025 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119616307 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08997998 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112130481 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103658218 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089116478 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070617689 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069273068 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115479693 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108667728 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069710604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066531522 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123356382 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117190886 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085144737 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088842285 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084146116 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088501539 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066538762 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115111283 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099968972 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104743979 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081870615 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095457901 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069002775 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090538246 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086082289 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113724133 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080462012 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110530704 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133926991 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069160721 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105019095 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065174663 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109829781 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104601963 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068828617 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067045863 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091761322 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066128184 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069562119 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111126353 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1147779 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070667485 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104741365 seconds)
  done (took 7.23380353 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084301683 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116689815 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083767483 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107190337 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066893843 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066215966 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089420204 seconds)
  done (took 1.586932652 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067147825 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088945438 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111960484 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089527604 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109312694 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087686645 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099541604 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067297505 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107228934 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068216851 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087537987 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127297045 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068494374 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097309887 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090911368 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090096263 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09113586 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090053927 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069863928 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114586779 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069205507 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11017159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069097627 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067071201 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104200666 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067476661 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138708371 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071128394 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090571038 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069847049 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066118688 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140945273 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10440679 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077638267 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06722871 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10475252 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08204201 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088418996 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083995123 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095651299 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081450396 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067669126 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091204685 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065390147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071426321 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10039034 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068367339 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091656365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070239313 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086881446 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091429743 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081094396 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090345005 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071080857 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06874458 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096062404 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077167211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091203623 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08655688 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068444591 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107390784 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083243947 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104813785 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083727433 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093565186 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08116225 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10449218 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069861098 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069220046 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093784532 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083591961 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088353541 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069195308 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077996577 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092076406 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090092174 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113178595 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06868301 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100510152 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067268033 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067687128 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090497999 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090574064 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093802347 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067836445 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071264368 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093699945 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065388683 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066173221 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094221274 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065838068 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091131037 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070035464 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068088215 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0931614 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083552364 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067959632 seconds)
  done (took 9.268494552 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068028756 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068469157 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092057158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068221132 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06899788 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091656612 seconds)
  done (took 1.445047562 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096702721 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092708663 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081103531 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095989457 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105904323 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104960064 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082589611 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106389485 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084644005 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102827632 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082321278 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105923667 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087733893 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096160092 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081949259 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095599743 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082608533 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099437165 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078635681 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096893443 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087247518 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096601327 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07406732 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106812128 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07032814 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073445062 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100496422 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079673477 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102388624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082775556 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096308992 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071419103 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095067361 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083434295 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105186666 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071982887 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096102115 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071894581 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100556286 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070808751 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106057442 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073234148 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.0782777 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094854712 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106529756 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071750192 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071409285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100562244 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082077329 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094499416 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07131008 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09555245 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070762923 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09488657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07252743 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105528441 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072198674 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105480664 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073007482 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072373023 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093230923 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071231472 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106121583 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070494891 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103932232 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071284478 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095427428 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073416496 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096690263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072635736 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071261258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092909155 seconds)
  done (took 7.313822818 seconds)
done (took 27.813679653 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648433759 seconds)
  done (took 1.629937373 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.779944228 seconds)
  done (took 1.764742682 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.641391378 seconds)
  done (took 15.63271968 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.610157917 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.756236366 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807200927 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13326868 seconds)
  done (took 3.288828873 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.88645329 seconds)
  done (took 1.895323539 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233114657 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222153989 seconds)
  done (took 1.444228236 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.741628943 seconds)
  done (took 1.740413527 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.279779442 seconds)
  done (took 2.272811541 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319083574 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180063715 seconds)
  done (took 1.497155105 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.518547962 seconds)
  done (took 1.516116419 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.587914889 seconds)
  done (took 7.590629018 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229673005 seconds)
  done (took 1.241760763 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268094743 seconds)
  done (took 1.267224286 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.116183799 seconds)
  done (took 4.117012727 seconds)
done (took 47.89029964 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077935838 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081625854 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103945393 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07875438 seconds)
  done (took 1.337158911 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07757196 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073565007 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099815313 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073176749 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100793107 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073337089 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098369697 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077459688 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072827951 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097252299 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073305834 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09550111 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075972048 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097619108 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070756422 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076505348 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099937678 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072897234 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099502573 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074011565 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071631857 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097962648 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076321306 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094907057 seconds)
  done (took 3.028926605 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077106165 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073080276 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098118972 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072130057 seconds)
  done (took 1.325220505 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076976499 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115179718 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088760673 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101024955 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092524695 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109848104 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069800205 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069371903 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094880472 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077190277 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091481521 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097985242 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110700115 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077487752 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102341959 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067009325 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068801549 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1105954 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077448741 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101304522 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070436297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079466866 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091547364 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090651711 seconds)
  done (took 3.142952855 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076500798 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126912429 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078088737 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.114787908 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091142989 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089330368 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075748063 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114627179 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124840828 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090080614 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070482917 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065795713 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095954959 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065418637 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075931597 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132898942 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135647483 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068666661 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121407051 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066123098 seconds)
  done (took 2.892248128 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074633043 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07011392 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089215702 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068550085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076151368 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096109151 seconds)
  done (took 1.491539837 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068303829 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067775449 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090888473 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066731307 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071541318 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090992338 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066194399 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066950083 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090821436 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067537776 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066526312 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088839925 seconds)
  done (took 1.914191454 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.383319018 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093019445 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068703158 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087836746 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071154823 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090438836 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080374258 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068435343 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114458714 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066519957 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091281842 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069188757 seconds)
  done (took 2.300060353 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26024177 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077952406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322757094 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168079576 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140001512 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15450009 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105408579 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139075543 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196720849 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137465126 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199881955 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222671994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132886257 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167225438 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114575334 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132426749 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186526684 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220828302 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129523719 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19966594 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206080471 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15641991 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179954058 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127973542 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134185424 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150355605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07149819 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105343039 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230995799 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160205136 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199509759 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137970692 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097130355 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229561192 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224651328 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195153126 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162915241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085082277 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157197399 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164975371 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256065323 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114698898 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19408581 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133594463 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10608878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173870595 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14554747 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147665091 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136553029 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11556174 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174252608 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238628174 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164872893 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111883718 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137916874 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141913571 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143041076 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104319312 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267003549 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195590235 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159171183 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095885061 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12419448 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186859265 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159108621 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142153452 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153845001 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118550708 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167584452 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211259757 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145992962 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173864998 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180609457 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089107609 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170837987 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170455683 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156984032 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228921517 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155910161 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.0737593 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151311001 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12994967 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106940906 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145357913 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101843899 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207833015 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12456875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140726935 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141138592 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135932399 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136805449 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195018924 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201774239 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130001945 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066757862 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130309493 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149873867 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174411338 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113516042 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134474868 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147333592 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103610901 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166078813 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076510968 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151866498 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104596665 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151763417 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162221827 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101141026 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155244405 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102167663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12816737 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162162132 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220233109 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114831527 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082761701 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225752903 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155825252 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131673378 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174934896 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213431499 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10158477 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12876894 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204826699 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240802282 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089542175 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2217393 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13510795 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109135428 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088668911 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154216841 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139225012 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149425711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108342174 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153631073 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227194081 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075101476 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121250509 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166244599 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107095406 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082251798 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139224372 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127177702 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12144172 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101560535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133744389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194540552 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154959698 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13317058 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152814836 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125014706 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198294216 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114474173 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130473462 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129804959 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070292855 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164647926 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216348483 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079671253 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224399359 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152914613 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131160879 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147354461 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107786491 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168940191 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078962815 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096536345 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173887417 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13734532 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136033294 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183198799 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129935885 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.153800184 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150623941 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187379381 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160616063 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161038273 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131716831 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088385072 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138400012 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178408963 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074148338 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120559155 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083334228 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130069996 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121906942 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083889031 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195880351 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154999202 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126936452 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139635304 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097716663 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204650822 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078242315 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157718996 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171188281 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095146721 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210672778 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185726188 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188486181 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10128698 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199329575 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071430524 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099282898 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090781946 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180115173 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084331992 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109114743 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144065926 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178595384 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154751726 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191437914 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111849022 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147727292 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212214605 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070819732 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143371564 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176984689 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178546029 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131730176 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112251599 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099974758 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200204478 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135900631 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244948398 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14354619 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151882356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180149394 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129802203 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105621597 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106216247 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191943658 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133525745 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179767014 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126367388 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114654652 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137256037 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081670782 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130399471 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154453089 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147161358 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18620145 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144198911 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160657952 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077111097 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168620915 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151943373 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150915564 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065217365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147393379 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221057557 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120216654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14587207 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184875452 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106217585 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153710056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236542472 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174729674 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110493591 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138177036 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154360608 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157136616 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14612887 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169383395 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137581959 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162195322 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137438507 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111036011 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088069305 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125108035 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133068508 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095769419 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.165041835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143926362 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094840124 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184006286 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111930901 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137006357 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147226256 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125353041 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091438392 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122861429 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234531065 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149745258 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233407859 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127422934 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178827797 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224501806 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074928644 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105358154 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106226404 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169685931 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085103108 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187916541 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098555417 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132170644 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15394979 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171797081 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122039271 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068920896 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137295053 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188575896 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112778602 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124070545 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131536624 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221029826 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103737431 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106424279 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152562724 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131481393 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103817983 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231931508 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08802188 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098153925 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101167252 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081880409 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156838816 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212080189 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108820511 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131118954 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141504972 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173260034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158464834 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128235223 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099986153 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141631578 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203804896 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155935748 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090080245 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139252079 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1829123 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188155094 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13251153 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12176772 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229622399 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186760685 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220707682 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114749698 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143123587 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116661512 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136269859 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196692499 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083643197 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226439374 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10870865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166137922 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132239989 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119296243 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15743223 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124777142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089042513 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204637864 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148069321 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124683279 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080389898 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145166784 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150209373 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132991817 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100945732 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167445295 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072715885 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190441925 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201069406 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107321061 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132824924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096249961 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107780389 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13564484 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130743578 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112050225 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118587592 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227840742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116382473 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181300373 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196795184 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141681302 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165568594 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125992676 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662503837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078527154 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211463006 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14730455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235868698 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124185205 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147091432 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138352957 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151874812 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173267186 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131674917 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202852937 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160876236 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147793159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105237928 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130558484 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138172672 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091934454 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133440456 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141850301 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143024086 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127215689 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148195549 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153782235 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108156892 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09647467 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214568163 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144934185 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171222313 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196117676 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085610164 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146713239 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196289738 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080126515 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177043965 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187100519 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134616646 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126323478 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082466235 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132430716 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231446536 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098190485 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193421183 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152011522 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138002001 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141206062 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.170752202 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161983513 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1358286 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154183927 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122202817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140177314 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145281123 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084816616 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104133101 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133767157 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139718618 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099819578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129499445 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143260305 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182349924 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097543033 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097233365 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130633575 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171983398 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236272506 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115875565 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109068456 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146519503 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139955455 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144606278 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153535088 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082688965 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108973612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108555017 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113717863 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136692544 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141950755 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131005092 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138299114 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199886348 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111153639 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250323365 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096036206 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134538231 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069659302 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105923609 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1230082 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097317614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134038742 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127689073 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230622561 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122012976 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091153679 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120182617 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073643445 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109869669 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158529619 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138058181 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14978434 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124230491 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063606495 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136235771 seconds)
  done (took 71.005411705 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14275721 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.118615616 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.128775457 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.187759626 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158831167 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252632071 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.194528933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238498566 seconds)
  done (took 2.518286945 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06942964 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116673106 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101749731 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115390175 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089341401 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069405033 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292860285 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.10966604 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066536976 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114113179 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118545694 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09126144 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.469613798 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065408607 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094168576 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085131643 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067117767 seconds)
  done (took 3.228132696 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426652207 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.632973337 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.45086793 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073957552 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.910808779 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106857369 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.413507692 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163097268 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091085332 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.432196082 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.724876065 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149721606 seconds)
  done (took 17.673119293 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075218911 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069561825 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109971947 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08388307 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099248141 seconds)
  done (took 1.53642862 seconds)
done (took 114.390094199 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07984733 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342852184 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053830795 seconds)
  done (took 1.527938635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083290493 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084520087 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111309464 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083135512 seconds)
  done (took 1.464923838 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074744452 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077034179 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110824698 seconds)
  done (took 1.363235005 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278299572 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165193342 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087495644 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082141806 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077758768 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10415563 seconds)
  done (took 1.36916733 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072751097 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075444863 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098782134 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076184448 seconds)
  done (took 1.422777861 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076150415 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052210388 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055522368 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082018787 seconds)
  done (took 1.372926308 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089519013 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106008371 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080100474 seconds)
  done (took 1.379775142 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107228442 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112989647 seconds)
  done (took 1.327448717 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081677777 seconds)
  done (took 1.1825345 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094436608 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138792734 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154873008 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.13701972 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164932397 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136442106 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11301813 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087696799 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103843748 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115410715 seconds)
  done (took 2.352765367 seconds)
done (took 16.470877275 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078245956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.386980267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36109929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116777728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666595958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356525773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004204996 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119061704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120509578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094030096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083170901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673635926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969870793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344191085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956455577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320615361 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676202052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068749362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093498292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068322679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964552726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093686193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067776587 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068584455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674987925 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371682455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094501047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316673729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067455742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095639937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354564306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09447433 seconds)
  done (took 15.920135528 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070002199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144021424 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073621232 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083339111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097051254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069589698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098025446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069144787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152555477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067346831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111069007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067665888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097761166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068670989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086841917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09477579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069015367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068249554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094025106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068921878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112748807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067940398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06847874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094703436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068604415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105947306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06918076 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067975984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09473575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069928693 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096950236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068779936 seconds)
  done (took 3.845918884 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114133414 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152495244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074338992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129338009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113477213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099287289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172479224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094809073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158414143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06952802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112970861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068498643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127563752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069069285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114225199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068776174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069493157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09483074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068061534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095115905 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087399257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093672426 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068460786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069363546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095376159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081316267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094307943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068250672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068536547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096326659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071759562 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09474543 seconds)
  done (took 4.172843278 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071979133 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074688138 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108932996 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083118909 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095946752 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071821913 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07302334 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097032476 seconds)
  done (took 1.786788152 seconds)
done (took 26.827476334 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077962244 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069638332 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099391348 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081288674 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099136228 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078470839 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067453384 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101633338 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076573273 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072844378 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10245125 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067880596 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097886245 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067409679 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07425211 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093657556 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080039272 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098130272 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078834774 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079179042 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096182753 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076606514 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100113715 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079693434 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105328243 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079052468 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082151775 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100049245 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06914656 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096368196 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076764197 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110696823 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068749955 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079719668 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094599998 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06772384 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06754422 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094182042 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079773643 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100368846 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070610938 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100274064 seconds)
  done (took 4.666328095 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088312795 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091158379 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111448222 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064965022 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09754823 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064994171 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115458377 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063352828 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05915772 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115382956 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055606777 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058947519 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089343629 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054138042 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058784001 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056435507 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087996234 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056026915 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059425249 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085842922 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058094377 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053776032 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087167006 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063213073 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056662302 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087633137 seconds)
  done (took 3.053748668 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074642104 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083902794 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114031957 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127950097 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132588996 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077640721 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105607947 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087496183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112638671 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067351109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071281019 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122526478 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087808477 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100620374 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06800094 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113815403 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081796425 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069213603 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100999114 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089859374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111070733 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078044963 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118781647 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080468433 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067736266 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096789837 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0718306 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108021136 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072774817 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076586345 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099036429 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071618142 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096599508 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079841102 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071705771 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096345297 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08962291 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10404163 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077744751 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067965684 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098504104 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068906318 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115394443 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112099213 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094367978 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075097572 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075615499 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10446571 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067848792 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113614743 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076678368 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067115718 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097779257 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067321395 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094519507 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081624277 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069446548 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096756928 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077197032 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097681098 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08052251 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071407615 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110551866 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067904861 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102613459 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067346957 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069544449 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093513064 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091923046 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069388601 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136897678 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068592473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096519289 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076689159 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102445588 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073896279 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068045524 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110027735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077113799 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09849934 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07699176 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071542321 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097769464 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087702026 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096865186 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069684504 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06875264 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100941828 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070550036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095718891 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081375967 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067605677 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097696041 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085848358 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094215159 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069574945 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074692777 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099514871 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067139623 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106389254 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073386853 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068891956 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103904139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067972993 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097523545 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077610491 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072368999 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093546357 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072835153 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101108753 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069122303 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069289122 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098012025 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070415032 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104469466 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07420413 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07265279 seconds)
  done (took 11.298147757 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190977987 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184983798 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070972333 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1794083 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076242137 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107153876 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179078581 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096640653 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096199217 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068596469 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069157501 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130251623 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124122926 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105725784 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10680456 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.078224185 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113085983 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104705764 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18192351 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174975164 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114893546 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076780805 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07037407 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097833367 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070388381 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105222829 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084668027 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103538897 seconds)
  done (took 4.29439717 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081795618 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12879824 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073965628 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089042109 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11840159 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068073761 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101565364 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069525932 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107827493 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080619568 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095095308 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074138621 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074499127 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105663712 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069048388 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105096883 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078253346 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069074601 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098188253 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073190483 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105189153 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081083275 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099077567 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06723153 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074331528 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094858099 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064881847 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112550785 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067854344 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117400224 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066742356 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074540709 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108904296 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068527542 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096276158 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071361426 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070994524 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098806695 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069419193 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066125515 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094165655 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057794449 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067095522 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10785494 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074878506 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08700475 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074017986 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073285182 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100543129 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065801631 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097883894 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071287581 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071035046 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104257891 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072758281 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074319221 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09980847 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066049361 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102905673 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072073995 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06447131 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094421578 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073067671 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066695486 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102935557 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072548899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09403112 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07138656 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073043195 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102025669 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071351837 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070503546 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093441912 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069805702 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100344985 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073050615 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072279815 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094727957 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068342231 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068533451 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083416212 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06847733 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053818283 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099195384 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066888801 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066899421 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098754107 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074105691 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108246017 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069780378 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101468826 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069024308 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067187091 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098684963 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063890013 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070697683 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111155031 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111960141 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069021036 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066076573 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110522499 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073017054 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067248267 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083989169 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075072505 seconds)
  done (took 9.833386382 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095779736 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093093781 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097724671 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083596251 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123749187 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092854579 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103467786 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074436995 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069628312 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112564016 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068141718 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103900143 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06824372 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076685283 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124810881 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07603215 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09773 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.0773106 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071824761 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135816729 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083028748 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109820168 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080838334 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09632864 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072952484 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080720198 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124451426 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079600556 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106610095 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085445104 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079678813 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123519547 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086823502 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099728063 seconds)
  done (took 4.303615493 seconds)
done (took 38.561854346 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208587903 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418344222 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188331576 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.117304063 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.196784459 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.213985932 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220018373 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188071565 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.366737177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194312532 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.446663435 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.784545183 seconds)
done (took 58.681630249 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.29880078 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334256093 seconds)
    (2/2) benchmarking "String"...
    done (took 1.45966647 seconds)
  done (took 3.93830683 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.601859463 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.068670699 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446914171 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.19253184 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.20606625 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49719694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.791529233 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.018112576 seconds)
  done (took 27.355939892 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.201966228 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.561763627 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.543994169 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.536790547 seconds)
  done (took 17.98224418 seconds)
done (took 59.314142511 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.179280521 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.273595092 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.198036328 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176365369 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320332355 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.215582884 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.283869836 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.279040116 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.193900132 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.198282842 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.193594934 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.214803552 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.202411647 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.32758583 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199315048 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.193039463 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.219123483 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.836019822 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.573717156 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218408123 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.199231022 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.255624669 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.19547831 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193415824 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.237735341 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200422466 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194212511 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211973091 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.42230639 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.196451519 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286158305 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.66414078 seconds)
  done (took 189.8897207 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19428715 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.234936306 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.320322586 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.256438719 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.842645969 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.391763064 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.328690456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.892622849 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.208941252 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211195417 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.537993409 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.1953003 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.600169712 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.156785585 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202180277 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.299655447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.526321815 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.560317379 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207323691 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.467725796 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.213111058 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.430533783 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340163989 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.455328 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.218211241 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.224153258 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230549572 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220300339 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383591127 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.439684122 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.208362294 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.202221706 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.773396359 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053070407 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20782051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.224626178 seconds)
  done (took 150.599543383 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.452486277 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195963862 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196073241 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196563715 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225825987 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195786167 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196572443 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.727840371 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726172755 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.73634853 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.594728143 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.257349708 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.396869788 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195910984 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287829419 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209590883 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19770276 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197369695 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211948553 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221488814 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196121086 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196096433 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730644947 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211312878 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.194337205 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202709057 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197634246 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226926241 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588031688 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197373971 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226902505 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.513387792 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241777241 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198192695 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.460599484 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.091573957 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305450217 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199900136 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227755249 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196397408 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.464975812 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197830814 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197691968 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201342037 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.737166225 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197907378 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.732282845 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200166162 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.076392903 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197912743 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198723765 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.661768649 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.587040023 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197717603 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198199392 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201265607 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198499956 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197721217 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228250978 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.600791259 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295969882 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198957689 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201820387 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228892981 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199011492 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.591477935 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201302129 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.454920449 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257334916 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.414883087 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.73430513 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200753697 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291208087 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317757963 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199191908 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198853965 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198971395 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199608821 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305653261 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199798585 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.595254164 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205647582 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.200325606 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257823624 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.200473385 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291813438 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199976695 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.507484662 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201124783 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200021449 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900160972 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292586278 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.200225868 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199536009 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200229701 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200404694 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.596867274 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730029091 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.363234474 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202096182 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.498184221 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202209468 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.608631977 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.717950887 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.759671218 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201308853 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307234909 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204190125 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.201668071 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200674506 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229740909 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200835839 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259201262 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202621742 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595892629 seconds)
  done (took 344.417032228 seconds)
done (took 687.495063873 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.901455632 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.878668722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.990092064 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.876417869 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.856044463 seconds)
  done (took 10.647279419 seconds)
done (took 11.790518472 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381281147 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381324761 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259269964 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383192576 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229832368 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398052631 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36045453 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221770318 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301899414 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274665794 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299896865 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248341101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227710072 seconds)
  done (took 18.112276662 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.492976175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488340302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262892503 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493379671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239925312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502410398 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389139122 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396747899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385709658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215408869 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2148685 seconds)
  done (took 16.227973042 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501228594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491091664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267146826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507879914 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242349269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507185806 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390739758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400905377 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389824693 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216393869 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213919405 seconds)
  done (took 16.275058995 seconds)
done (took 51.759273928 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210028754 seconds)
  done (took 2.356071803 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241473319 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411124349 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224092257 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213593535 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.210591527 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211178855 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214581398 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210765507 seconds)
  done (took 11.084603359 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.209889484 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206679937 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209629919 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207029408 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209535252 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20731741 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202976184 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.207947438 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209624707 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210219013 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210259197 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210555843 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206678006 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20710424 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210850313 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207372079 seconds)
  done (took 20.480102085 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.209381287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207652816 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20706378 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208005085 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208418454 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208769572 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209220745 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20756436 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207835272 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208466643 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209086204 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208261838 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209042547 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209228388 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208661327 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.20958835 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207779779 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208863736 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212671848 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208123565 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20921943 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208912637 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209228908 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209968536 seconds)
  done (took 30.161243503 seconds)
done (took 65.228714904 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.253836467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.809335781 seconds)
  done (took 9.212070223 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211676042 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.21243635 seconds)
  done (took 3.575055352 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.211552364 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212018114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212664111 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212144719 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.2114025 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212290253 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211649781 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212256974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212222822 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211430168 seconds)
  done (took 13.269315609 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211341614 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212088703 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209830023 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211957466 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211972769 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21029672 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211471198 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211992805 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211654273 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208813498 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212444194 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209750103 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212927748 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210526032 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212864766 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210898821 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211446619 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210814394 seconds)
  done (took 22.952415402 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.212404979 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212225694 seconds)
  done (took 3.574867041 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.209651428 seconds)
    (2/7) benchmarking "second"...
    done (took 1.210457642 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209605321 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210536969 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209581418 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210049606 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210605986 seconds)
  done (took 9.620959886 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.214148347 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.389015446 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.468737063 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800940518 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213655577 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.217175194 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.078068661 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216598362 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218736364 seconds)
  done (took 13.967160675 seconds)
done (took 77.320265593 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.213784541 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.205893532 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.027254245 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.209115878 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220583751 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.549933989 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.241346575 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.327705693 seconds)
done (took 37.14725905 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.206038499 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.906423622 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.942688334 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.214936977 seconds)
  done (took 11.216152594 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.193312402 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.109322949 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204181577 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21173743 seconds)
  done (took 17.872266224 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.81347075 seconds)
    (2/2) benchmarking "read"...
    done (took 1.539031624 seconds)
  done (took 4.504620242 seconds)
done (took 40.950725206 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21433844 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215396317 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.212713166 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214932594 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211476614 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.212584233 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213359893 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215725851 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216438308 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.216416187 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214890317 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.215517721 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215418743 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21318605 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213527356 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216135332 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21447775 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213446358 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212993578 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216991228 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212635163 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212880447 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21319177 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21706209 seconds)
  done (took 30.298558387 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216488701 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214651369 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216202272 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215654212 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21375518 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215450594 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215263133 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214442882 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216634017 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217342401 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214567207 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213958458 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216725585 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21478794 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217177982 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214474058 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.217503346 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214478487 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216668971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215052961 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216992757 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215262153 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214216052 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216470626 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214933009 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21487287 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217821786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216239128 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217732585 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215528382 seconds)
  done (took 37.625134074 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22262798 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.224763461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218394595 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219190832 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217548369 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.218863667 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.218856502 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21811271 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.217522622 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.218013554 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217418974 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.218753313 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217926183 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218975436 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218615943 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218123953 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.218507302 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.219079364 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218018295 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218583445 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21819802 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21766919 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217423672 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.217970191 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218970386 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219147519 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217996716 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219657281 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219011256 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218182261 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220079468 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.219114427 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219267133 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219500968 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219588458 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.219861659 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224751154 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227223412 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219137933 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219665526 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22024793 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219480622 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.219581489 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21977055 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219354738 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.219764364 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.221132917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.22006535 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.219500371 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220544489 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220221288 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.219555631 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221287156 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219359583 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21911 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219982228 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22003267 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220667278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220008511 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220404316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22194971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220408425 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220676735 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.221258672 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221357847 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221046637 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220782107 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221913396 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22154087 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220786702 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220446097 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22142696 seconds)
  done (took 88.982118757 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.221067676 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218640138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218938599 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218635269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217886564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221313765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218575624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221558007 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218221073 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22146819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221340969 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219281481 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218358147 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.222797372 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221441153 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219317677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221605543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219062156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22227051 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221646489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221886208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219295364 seconds)
  done (took 28.004586132 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222283517 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221566894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217472633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21885074 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217816156 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219851531 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21900854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22056696 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220098012 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218077275 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217436675 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22010229 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217148783 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217407177 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217612985 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218320627 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220697375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217481006 seconds)
  done (took 23.10170061 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.218260627 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217972756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220515468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219076028 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21840927 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220194886 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218306751 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220959518 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221179207 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217869528 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221041817 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221744051 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220890864 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217598522 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220722143 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218411599 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220568767 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219279804 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2220162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21845465 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22001288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221669514 seconds)
  done (took 27.992405711 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220931285 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221510222 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21952968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219943364 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218601005 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221594259 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22088712 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219066001 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22179599 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221295426 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219911717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221680204 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219828122 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221294022 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219587187 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219537447 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221165514 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220979906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223361623 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219004075 seconds)
  done (took 25.570884889 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223295109 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224039188 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224837027 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224218913 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224737416 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225282987 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224844464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224350291 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224030014 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224197776 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224340184 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22580074 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22466393 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225608732 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225335507 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224303982 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225347526 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224672021 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22498925 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225039809 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225688382 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224830933 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224375438 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225595514 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226237872 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225011181 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224460874 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22587395 seconds)
  done (took 35.456589069 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225054511 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224653776 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222731213 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2219399 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221928585 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221967248 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221994501 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222125693 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224757169 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221394498 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225257767 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224302677 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224951236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224767966 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224130428 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224699142 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223770503 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222318653 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222699286 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222573021 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225600838 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223638274 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22503457 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22281542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222549806 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225712833 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223764253 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223523776 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224997843 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223115312 seconds)
  done (took 37.872014459 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243169672 seconds)
    (2/2) benchmarking "in"...
    done (took 1.244110604 seconds)
  done (took 3.649466293 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222486471 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226222907 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225298554 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224500585 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223474731 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226158235 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226231287 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223449681 seconds)
  done (took 10.960102023 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228258173 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226331204 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227334142 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226869371 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227721294 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.229485219 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24073326 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243335988 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23170771 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.230854113 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235919452 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.237042458 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.233246592 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230699721 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.230338394 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232615065 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227546089 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227664695 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.228793799 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227803835 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228057354 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233075117 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232738707 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225285244 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.231009988 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244365914 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.237973128 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228863828 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228889316 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.236336048 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23193801 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225074254 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22859006 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228975499 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22784318 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229311819 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244622911 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249370509 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239895522 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229075085 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228812218 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225305439 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233071849 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.234034237 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23371074 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230064228 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.229807582 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227201451 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230605446 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233581909 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233486505 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230427873 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225810011 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238683296 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.235159902 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240476826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246200608 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23479992 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24176101 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.246329568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248268864 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.240354688 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23592511 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230223365 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24268933 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.257272114 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244054621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243875022 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227739239 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230691961 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243044631 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247576167 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.243335496 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231086381 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230801984 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.23157339 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234602384 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231020783 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245580884 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.253399974 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230986226 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231957119 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244023395 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256181989 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.232665583 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231293757 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.231420233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231613562 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234798513 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246798562 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248419181 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231159489 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234059906 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233693062 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237732419 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232331385 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233087944 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235033165 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229105204 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232072471 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232802693 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23826263 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.244088032 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231997078 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232768482 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.244003825 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.232337985 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234245969 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246504404 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232758662 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233053288 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233938425 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245012421 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.22964751 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238165408 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.244266383 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233623137 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.238033982 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.232936909 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23315302 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246127591 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26344498 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232876859 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232500876 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240784603 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245363218 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233510033 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.240552908 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.233066667 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230892421 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230707725 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.239008711 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234549869 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238289316 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234890736 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238696287 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231075097 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234319801 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23473219 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238210102 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.239154862 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.239061209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23903381 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.240220238 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.235294217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238981746 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.24630319 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.238227298 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239625864 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238846196 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.232122845 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235077278 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.239575433 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235935103 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237860449 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235303032 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.236156451 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235446155 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23554916 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234731097 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235160251 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23805989 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241493398 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236848386 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243551987 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237840876 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233629686 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236138149 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236045857 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.240401094 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236277371 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237691354 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24158571 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.244480943 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.23582667 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236224744 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243129121 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237014728 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237763585 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236791234 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242221663 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247477105 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237260863 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248604124 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238045229 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237702095 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.236435715 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241114067 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.238555819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237277206 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242638656 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244862117 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254577917 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250016004 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241567946 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241206936 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240292211 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241111493 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245585684 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237757118 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.23809034 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238027267 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24043871 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238675562 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242386704 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238371675 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.239078756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.237631739 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238015178 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238361925 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237558446 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242319536 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242963786 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235568728 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238689558 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238793751 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239937446 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236470428 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240119772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239687023 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237974012 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239359494 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252147079 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235570154 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243119021 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242730353 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.241712564 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240034271 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238992946 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2451378 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240927002 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253879406 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259271209 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24327413 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250404878 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.259218286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24149877 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245306545 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240346912 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.237134064 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245194748 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247468238 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239917627 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241178181 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240945685 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243080626 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240223382 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252425891 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237989258 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.242303384 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240995946 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244756311 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.237003948 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244416686 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243874981 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243942545 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245931205 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240926843 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240395137 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245377102 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.240642731 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.2405319 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241344394 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246061427 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248681568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25077207 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244363848 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246828755 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.244971133 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245298172 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245953795 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241516404 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.242179839 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260031011 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250558832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252495861 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.246958269 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.241088034 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254770111 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245398128 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.24929863 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244809591 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246246845 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.246017871 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.244071708 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.238705677 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245936373 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24220531 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246055172 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.246868953 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24666247 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24209992 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243786512 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.242185904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.243099192 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.242794258 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24446456 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.242134947 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249536888 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248562449 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243844015 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244974154 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256567521 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261982832 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247364172 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244801401 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247128034 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245167716 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247185062 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243329436 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249537676 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.252564185 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248933866 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257166092 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246982461 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257764999 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243787029 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.248725113 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253834194 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241415478 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245838824 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248267463 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244490252 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259792444 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26078836 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248102038 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249185778 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244429736 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24532449 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245326856 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244676681 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245142138 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245337857 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261354812 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263978482 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251423049 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249449922 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242358459 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245414854 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.244507285 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246622315 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254664161 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.245384796 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.249755837 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247847174 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248854651 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244967917 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24577287 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245137634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.242737449 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246085226 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260357904 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265643678 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250718894 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245368357 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260335484 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24745933 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260679324 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262462442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250560692 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246579047 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245710479 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251415415 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250370042 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250560682 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.246722478 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249203935 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.249878972 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246378618 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252090527 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24861353 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.247498938 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249635999 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25916514 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272011889 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249914704 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250963154 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244254983 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251019608 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251267893 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247378151 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248392185 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.252203313 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261436864 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256352848 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.250592744 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.247568003 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251187641 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247212973 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.247662012 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247550556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247384579 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248007348 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251936463 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.248471923 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256780149 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246892882 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25214006 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253060057 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252436334 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.26302647 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.249514388 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251683817 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248435042 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.248851442 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252210581 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252090718 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249327287 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252224983 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24861706 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.254121856 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259190696 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257654381 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254991495 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250631385 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.248862375 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.252856653 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253468623 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250280434 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.249410717 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248988635 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253776418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.250286193 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.254306168 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250776726 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.250973374 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25370661 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24963353 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255328938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258721403 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254561788 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247800622 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250358698 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248999959 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250887678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253792541 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.265214316 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255426284 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.262300141 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2607947 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.254766886 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255112233 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25696406 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261625788 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251563307 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254148417 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251088398 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255851133 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253244517 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256834759 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251761761 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263208211 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.254720538 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253238244 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266752339 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.272021255 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251369703 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254330981 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257840282 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254884006 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248516891 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251359207 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253318498 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267422913 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27304591 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251909723 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257112422 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252843412 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256587808 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256199016 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251465382 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256542124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249637808 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254766416 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251890913 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251859868 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.249949105 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255887433 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255503358 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.257973353 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262934074 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250275559 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258650213 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255972434 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256691045 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253555623 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252219531 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250484105 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250188077 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.255592046 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252946204 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255548581 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258714635 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256731763 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25512074 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.25427229 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253323401 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260019702 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.265577092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260989928 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.251122636 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255392435 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257980015 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260840378 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254455401 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254818769 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258671176 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.259473969 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.254084778 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25408661 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.253162158 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26055023 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27856941 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.270295796 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257557753 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257115004 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26348379 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254539464 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.251419126 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254624217 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.260229487 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259814382 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262926029 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256030864 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265724037 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272961432 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258100482 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258662392 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260440784 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.265654608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.260535918 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255796968 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.256116387 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263246679 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.276184814 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255088713 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268899443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293133834 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.275987736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260179074 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256554888 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258617748 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255581464 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260516978 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.256674027 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.255897066 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255231034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255176868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.25990736 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265743119 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260411142 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.255230288 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256364834 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.25853024 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261384532 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254197175 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.256319393 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.256903899 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256215028 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.257064986 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.257740838 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.260942215 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274249653 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271911228 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.257318894 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.258210197 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.254306796 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264314144 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.263083217 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271421501 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.265008 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.258277789 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257474756 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.26211918 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257613076 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.255011629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259904298 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.261603838 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260657344 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.254757463 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275783829 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26823057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268140786 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.261096917 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258478647 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.257395689 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262539629 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259419344 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257975436 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262819813 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262291364 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262223597 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257795518 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.258217962 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264058993 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.26556879 seconds)
  done (took 744.390065538 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25633192 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256518342 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256717984 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25544031 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25621838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255860758 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256513809 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256506755 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256257719 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25648372 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256064562 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257046525 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256128893 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256797212 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257179568 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255859949 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256738339 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255869091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.256771901 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257212835 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257020983 seconds)
  done (took 27.580758375 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.259452112 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.256369175 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256754669 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259960887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256869232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259154332 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256995471 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259396926 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259601559 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257075298 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260219246 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259884758 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.257727109 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.257350804 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258254312 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260113726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260324509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257581219 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260177606 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258112325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260461676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258225298 seconds)
  done (took 28.886856826 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.261561036 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26228557 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.263321599 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258511956 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.261070296 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.25942457 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262510194 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.260786676 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.261263361 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.265462504 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.263190151 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.265636946 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.27207 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.265856451 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.267249939 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.260955906 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.404960521 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262041935 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261347753 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261370899 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.259146398 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274759634 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.25928551 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.25976845 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263614182 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262332816 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.261680612 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.261813462 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.262187066 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.266716852 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26679113 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.261988717 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264926415 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.26733549 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.265203708 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.26671068 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.266553473 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263197764 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.2601138 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263736735 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.27726297 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.284346441 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.263809574 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273979877 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.263160467 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.262952601 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269352226 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271889655 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.261830611 seconds)
  done (took 63.306315451 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263173267 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.262929027 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.260280353 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263717687 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.262874195 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263149587 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.263561647 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264058219 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.260744832 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.260899485 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.263784709 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.26249786 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260865731 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.263803489 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.264043336 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261319114 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261560385 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262255619 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.261104162 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262027144 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.260893775 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.264306905 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.26392372 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262023456 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263795535 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261611945 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261674713 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.265960285 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.261785873 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262049142 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.26531071 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26475741 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264210555 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.262248932 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263022876 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26524458 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264439321 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262495943 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265432911 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26289013 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.265090423 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265499315 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.265630123 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.266461237 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263132419 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263469444 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263461417 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.263828158 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.262307991 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.265919156 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.266643931 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264489265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265546416 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.264012407 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265572652 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.267867894 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.262357038 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.263852526 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.265896408 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.263677512 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.263827244 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.265630993 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263560287 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.266428196 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.266141669 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.26450667 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264105285 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.265852232 seconds)
  done (took 87.133817932 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267359743 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.267261347 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266603359 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266916294 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267384307 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267183248 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268032811 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26743085 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267889713 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267025544 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268867077 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268590013 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268352997 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266276022 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267762001 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26843338 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26806757 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267034322 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268480491 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267170696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267481915 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267500906 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26766894 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267672643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269061846 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267800265 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268334596 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268033419 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268164049 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268151123 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269122842 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268497977 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.267938507 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269054749 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268326336 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268727571 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268734412 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268479633 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.268562616 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269014078 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270021682 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26909224 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26980555 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.269248961 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269638557 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269825186 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268205322 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270023095 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26923896 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26891269 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269778474 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26933047 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269481997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27001525 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268893573 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.269515981 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270162907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270186451 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269375059 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269811309 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271105974 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.270459551 seconds)
  done (took 79.856073435 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269927118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269828568 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.267456526 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.267578021 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269644295 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267554488 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27005289 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.269854217 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269978398 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.270298925 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270200847 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267732315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268065953 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269809794 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268100505 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26799575 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267235728 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268129944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270776878 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268577246 seconds)
  done (took 26.584495705 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.268086924 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270309401 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268155536 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26880134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.271113314 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267925457 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.271449684 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271975801 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268638553 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271803065 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271701199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2715799 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269685575 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269584646 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271812223 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269365152 seconds)
  done (took 21.528893434 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.269415111 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272367787 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.272451046 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.272095476 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269263514 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.268957883 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.272092223 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269890453 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.270469707 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.272484103 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272683134 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272235336 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272322111 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.272255999 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.270195453 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.273303148 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.270193202 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.270573401 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.272218114 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.273363618 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270814296 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.270167086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.272314078 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.273124698 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.27117551 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271146868 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.270612464 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.271215197 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.270659899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.273343527 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270787505 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271515557 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.271350343 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.271310048 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.274121546 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.271514332 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273978138 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.273745691 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273747314 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.274252313 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.275143513 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.271715733 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.274045949 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.274332408 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27209432 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.2740541 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271446206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272865306 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.271247041 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.271585438 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.273717225 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.274534486 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274863302 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.274823258 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.274521999 seconds)
  done (took 71.179858913 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274322861 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275189974 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272567034 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275392588 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274342164 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.271880888 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274627301 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271858062 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272749551 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274411932 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273293499 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274331453 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272565206 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275644388 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274308459 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276131643 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273063448 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272989673 seconds)
  done (took 24.140032779 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273767426 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273977764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275401517 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272327555 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272806329 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276440322 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273113008 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.27612503 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274471927 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274158384 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273226437 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276770014 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27585797 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.276735754 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274428639 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2733332 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275802863 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276939067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274131164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27399929 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277261822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276318084 seconds)
  done (took 29.258568985 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.278742182 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.277919384 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.295419724 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.324284852 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.310712692 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.277871072 seconds)
  done (took 8.976735749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275336458 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277334121 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275592417 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277739718 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277736388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274564513 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275206188 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275511126 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277220879 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27474104 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275589007 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278082544 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278021185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276023549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278592391 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27795195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275380232 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275475619 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276849093 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278849424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275357536 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278518919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27603526 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275944837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275843574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276077976 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277509813 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276744166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276097858 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279224338 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278752275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276534231 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278639927 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277497136 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280217625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279320642 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276754025 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280082207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27911106 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277061123 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279736603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278656208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279445818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277014557 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278493063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277228238 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276003812 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276585161 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277342986 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280269475 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279761797 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27740418 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279850099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280083468 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279746702 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280421113 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277730643 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277503018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279836303 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277464737 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277975379 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280405318 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277671077 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278484262 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28012852 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277713284 seconds)
  done (took 85.54104849 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278036265 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277754493 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277716833 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279150016 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277965156 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277651439 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278632533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280043075 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279157196 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27847093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282498076 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277980982 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278006944 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278377719 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279206965 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278658458 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279689912 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279497172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278269815 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280720517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279712781 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278564263 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279137833 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279317313 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279782279 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282157624 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27910217 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278904935 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279908766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278615885 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279068943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279212533 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280035574 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279224654 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279701505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279795163 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279481724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279984827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280240124 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282278062 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280541738 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283373474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279876154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280398567 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281023513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281287731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280209053 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281005958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280963035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280382761 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281435928 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281247345 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28073831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281529217 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281069652 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28005823 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280353221 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280660649 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280898987 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284258449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281588434 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280397318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28405537 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281156155 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282060925 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281805969 seconds)
  done (took 85.70200915 seconds)
done (took 1734.731786149 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.383186472 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.349845711 seconds)
  done (took 13.951119326 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446158554 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.402179222 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.284474384 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.321945106 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28448529 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.283088351 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306392229 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284561336 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284867725 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.285037748 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473127721 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.286716021 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285147749 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284784379 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.378012197 seconds)
  done (took 42.403102319 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.312647183 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.291947418 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402441143 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307507408 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.312311431 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.474981664 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.344782353 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.288538975 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460359511 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.331654254 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.85410073 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.314047074 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.290226525 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.397004521 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.306705462 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.475543898 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534706029 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.858584677 seconds)
  done (took 29.777528049 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.741745706 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.283358235 seconds)
  done (took 9.246056559 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.31114011 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.300745732 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.297578187 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.32572168 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.328019113 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.303557421 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.300706184 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.342872147 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.300950104 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.329221117 seconds)
  done (took 64.367532392 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.308164841 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.291610346 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.291153961 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.288770762 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.282885137 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.281112971 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.290082205 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.283011534 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.970882151 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.417063733 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.304665061 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.296897558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.29077805 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.290212845 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285611773 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32699694 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.430353596 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28539597 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285497006 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.297441432 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291373943 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.386915983 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.332753099 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286499407 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.416834416 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.99011124 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295154037 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298543105 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.408662148 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.286263632 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290583839 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.292331824 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292692047 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.85789261 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.730101611 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.307754682 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314133457 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.301330308 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.286092184 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.41238051 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292543275 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.298567114 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.295197893 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.708771255 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44964634 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.404635436 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.613703397 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.294744907 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.293569292 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.354937564 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.294472191 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29403914 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.320764846 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.043823972 seconds)
  done (took 109.060058569 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.324931259 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.774210587 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454483257 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304813111 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.157050119 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.063722789 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.286209631 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574858609 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.341782321 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285875772 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.564793933 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79537924 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288834919 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.340779597 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.810811285 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.336530171 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.285648445 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.18824063 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.288214673 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.292534766 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703310234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30327084 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.291444604 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.341519142 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.324956277 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751705423 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.887989672 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.849490712 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.287344092 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.28658218 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.76418351 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.294041551 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.293829085 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.28700946 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562440456 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.644893731 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621220962 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.288324087 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.295779783 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291264589 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.306805598 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749438192 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633413604 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.286953917 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.287014164 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75269886 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.28845549 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.293235407 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.294651023 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496401502 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.009962969 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.286791148 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.780152208 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.289040291 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.648536174 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369395423 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.296394051 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783282071 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288997449 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.429385327 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289358335 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.28966959 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297478304 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290626388 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293024288 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637530858 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.674490981 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.294995881 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.639263251 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.761038609 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289771701 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825649813 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.202319536 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.28963208 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.345887919 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289911142 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.025202059 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784884318 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.304211412 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289060977 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.623883093 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.289333868 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.571221339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304048786 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29163249 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715552781 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.311221551 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.305503604 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.289564016 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.314158172 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.05904161 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292612611 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.573923488 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.310724066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289097168 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.289232497 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.296482296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289439692 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.290699067 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.296796903 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.824002581 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.298754643 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.427130838 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308142435 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290491079 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305340967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.293422779 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29044433 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515781105 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.812417033 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.291974349 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291421785 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.289999675 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307195091 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.590302367 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.290735798 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.600824413 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.292151846 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293424972 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295334851 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.127387751 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318324578 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291186723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.292296671 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.14246085 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.499713575 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30855659 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.290779582 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293469437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.306784829 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.66540697 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292048748 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.346928817 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.295677228 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011977906 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326911634 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.33004551 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.659954553 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.291526233 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.270814688 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317424837 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293201761 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598472398 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.56905746 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.590627868 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293606442 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.309658547 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988904281 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321980509 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441197288 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310874793 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.279801853 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491121695 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.550327231 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.292028899 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.852899138 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.293311464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514659494 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302980223 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612364284 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799481693 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.2960312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.29720155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015885066 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.950790188 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.082172354 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.297566883 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.572360705 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.299961924 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.744721258 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.294062385 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.294139378 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.888379082 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.294693057 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.300627997 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.293573219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.294593531 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.362700763 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469866797 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.920458866 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300350428 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757872001 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341847597 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293855249 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.31385693 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294706337 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.647830407 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.387342546 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.297763558 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.316920959 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.295641996 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.295100559 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783597715 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.261271849 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.296535266 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.451306721 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940423555 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.297812483 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.296128698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.918408861 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.489574116 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846072648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.310263666 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.618808209 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.303529766 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.336063543 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.101480883 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365572682 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77043138 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297808661 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.294943765 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910827642 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.297622632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380254957 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.295667046 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.29565453 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.84702875 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.299576567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.300612423 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.753539935 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299191712 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551756397 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.297804794 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.30503612 seconds)
  done (took 1103.675999171 seconds)
done (took 1373.69978207 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.297828357 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.296340041 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.283332871 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302623741 seconds)
  done (took 26.416060551 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.306540519 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.307039275 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.304836663 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.307091454 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.306923094 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.306787904 seconds)
  done (took 9.078973164 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.643373849 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.302643679 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302102431 seconds)
  done (took 19.488570784 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.528853672 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.578743192 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.679415754 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.506782813 seconds)
  done (took 10.534787312 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.305644022 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.306095447 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.306738978 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.308655057 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308730733 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309963924 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.308438371 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.308321452 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.309586489 seconds)
  done (took 13.01154653 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.296278332 seconds)
done (took 85.062238285 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.285848774 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.758202699 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065046891 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.401032941 seconds)
    (5/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.533314025 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.916140828 seconds)
    (7/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.892495718 seconds)
    (8/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.063754509 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.89144533 seconds)
    (10/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.939524218 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.388551697 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064415845 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.560640017 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.744850273 seconds)
    (15/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.658721113 seconds)
    (16/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.94197256 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.341380255 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.327962139 seconds)
    (19/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.289071872 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.639945854 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.498903596 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.404906637 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.49749116 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.622024614 seconds)
    (25/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.517088809 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.831827557 seconds)
    (27/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.328343856 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.287465506 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.888286673 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 4.380488844 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.184911909 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.33698707 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.912175038 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.305166879 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.942965028 seconds)
    (36/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.465080998 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.32404887 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.617277919 seconds)
    (39/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.288041053 seconds)
    (40/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.788213847 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.308275577 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.36354649 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.987338956 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.32346881 seconds)
    (45/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.624717246 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.238185592 seconds)
    (47/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.372550844 seconds)
    (48/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.326907826 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.42659848 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.850195372 seconds)
    (51/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.30118341 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.338699441 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.37980358 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.695358861 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.973454239 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.658953903 seconds)
    (57/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.146966887 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.383228616 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.283990398 seconds)
    (60/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.326795704 seconds)
    (61/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.894922545 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.851575814 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.41218641 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.69453866 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.168715039 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.319464682 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.411035232 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.579893868 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.28494708 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.465022938 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.815175196 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.422498818 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.619962899 seconds)
    (74/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.712924442 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.615143274 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.357640953 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.153406665 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178648553 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.325773105 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.997523727 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.167252183 seconds)
    (82/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.321884772 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145670203 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.303762412 seconds)
    (85/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.145387102 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.76823557 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.233431569 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.286340357 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.286514871 seconds)
    (90/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.491532653 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.304645092 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.206883514 seconds)
    (93/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.385947966 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.490861371 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.669335817 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.265273365 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.756504694 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 5.500904884 seconds)
    (99/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.391287764 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.319283337 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.328309161 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.897858964 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.562386891 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.247287155 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.363360716 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.432138689 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.955381821 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.324042881 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.391128054 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.886938933 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.441798245 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.329689328 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.400287953 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.327491248 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.804591492 seconds)
    (116/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.325454169 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.705379471 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.503491262 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.698610615 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.292043812 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.997416593 seconds)
    (122/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.682676182 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53054106 seconds)
    (124/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.032040513 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.730261297 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.73860448 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.308262693 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.317991695 seconds)
    (129/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.323465117 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.173269886 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.530758124 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.307736797 seconds)
    (133/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.698225648 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.709203478 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.820579167 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.329142358 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.30943283 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.919364587 seconds)
    (139/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.854418489 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.729111691 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.327221466 seconds)
    (142/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.365010811 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.589774953 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.318097108 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.310720011 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.401984047 seconds)
    (147/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.309441468 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.079851181 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082471503 seconds)
    (150/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.65048191 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.29945903 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.571331545 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.192439463 seconds)
    (154/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.413743354 seconds)
    (155/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.317035092 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.167711038 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.331867805 seconds)
    (158/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.309087534 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.395644205 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.409634419 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.412372961 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.188689659 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.332567887 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.329240917 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.205304136 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.307302687 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.297542751 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374550962 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.717606924 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.090167014 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.73476441 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.33363222 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.591848682 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.788295529 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.549311982 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.330204477 seconds)
    (177/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.10547633 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.429098411 seconds)
    (179/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.696953734 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.311506795 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451196485 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.496942214 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.387103598 seconds)
    (184/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.991965409 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.705067331 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314807218 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.313428309 seconds)
    (188/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.665385854 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.417993334 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.312947674 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.5261346 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.311484773 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.790795448 seconds)
    (194/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.31049687 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 5.347494884 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297068324 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.909396456 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.960091812 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.334817431 seconds)
    (200/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.173870207 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.30628832 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.351397121 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.346978679 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.190674339 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.358219176 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.351238824 seconds)
    (207/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.622598158 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335348026 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.373260567 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.311782178 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.396301465 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.336344934 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375774685 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.372437084 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.325231987 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336527083 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.358763146 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.412940812 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.295741254 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.959197473 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.193484355 seconds)
    (222/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.956759523 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.513141839 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.376147844 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.889683037 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.625460627 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.729144738 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.342361314 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.312517847 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.338207238 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.437004738 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.35144677 seconds)
    (233/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320661452 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.414504204 seconds)
    (235/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.627389795 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.375554772 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.362192897 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.095495749 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.636887289 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.314242025 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.73171901 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725287259 seconds)
    (243/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.70228032 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.298356933 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.211846397 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.345382783 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.841730708 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.914908252 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.756351498 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.641139121 seconds)
    (251/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.043263945 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.911892485 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315283655 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.113290056 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.530244909 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.372036898 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.45465203 seconds)
    (258/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.632892733 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.463732452 seconds)
    (260/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.315081714 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.607826136 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.338809053 seconds)
    (263/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.867844457 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.739106431 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.299407061 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.750339788 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.436139065 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.338689501 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 5.627464518 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.909693252 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.315864865 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.673546256 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.828899094 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.276925427 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.362037671 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.326985472 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.398250793 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.067922651 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.631001406 seconds)
    (280/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.398411763 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.321464843 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.32591903 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.333278104 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.400036209 seconds)
    (285/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.442753219 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.39600594 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.815987389 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.425866122 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.316717812 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.476055996 seconds)
    (291/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.763573697 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.323360275 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.355879603 seconds)
    (294/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.966018789 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.388874771 seconds)
    (296/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.177473195 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.415375608 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.607180079 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.387822129 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.300702236 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.400086648 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.337933441 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.819747007 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.968029021 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.150589115 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.73671502 seconds)
    (307/309) benchmarking ("sort", BigInt, false)...
    done (took 6.333427641 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.333936759 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.34646712 seconds)
  done (took 921.487013105 seconds)
done (took 922.729971608 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.34751806 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341063481 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.32489455 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.345324173 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.436201807 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.358336226 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.335431807 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.327751603 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.372727662 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.374859031 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.323276609 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.357449818 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.326469484 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.325338168 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.324773112 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338978963 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.399857272 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.32750135 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.341433615 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33801208 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.340562972 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.323167236 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375355668 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.358215698 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.329329469 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.328522656 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.328044215 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.34471792 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.437649836 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.328283971 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329198265 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.338198509 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.402683807 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326711541 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.321168227 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.345760204 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.337699555 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.336651263 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331216997 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.358843415 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.771782855 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.326010552 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.328214554 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.326989869 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329230604 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.331277613 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.327909428 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.334934212 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340422009 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341568074 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.763062505 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.34191524 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.331017331 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.328578121 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.339589289 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.328347256 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.332844316 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343034884 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.346988241 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343025646 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.401927089 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.335965599 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.331347766 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.344358707 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.334518503 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.801646525 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.325057017 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333678119 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.776633907 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.333574788 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.804716125 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.33617362 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.330310868 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.342324085 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.359995347 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.361277802 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324031473 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.32817591 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.335438281 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.326242753 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.339856793 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341811002 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.33396063 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.3309 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341927953 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.361781642 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.340204444 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.329134617 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.338729739 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.347898078 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.33675604 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.340461506 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.333241451 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325751915 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340173135 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.333660527 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.332867825 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.33156286 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.334539494 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.341526919 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.777577778 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346665703 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328140226 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.328028769 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.329223964 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.343333853 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.828127721 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.332335322 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.353166843 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.378725295 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.332330303 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356123993 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.334156886 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346513125 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.341173003 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.334135554 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.326936318 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.356908642 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.852778633 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.347771627 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.333137867 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.329689628 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347423004 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.334144157 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.328441442 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.367836074 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.33405529 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343832858 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.451921463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.343177229 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.362445166 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.329792273 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.33457357 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363684405 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347377394 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.362504187 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.335101567 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347618232 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.347380882 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.329508453 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.342833513 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.34296664 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.335094798 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.34043985 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328079216 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.361700552 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34462817 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344334515 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.354372116 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.452274903 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.329633213 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.359678529 seconds)
done (took 225.117842449 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.396507354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.32578324 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425065855 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.330857847 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.434209025 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.433686401 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329333186 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.328544229 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.327426768 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.712113925 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.328110855 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.328618678 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.326807882 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.328326581 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.416706409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330738164 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32883474 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.675467982 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.331407131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.404931816 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.326374242 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.330357215 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331636953 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.714087105 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.330792721 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.335870827 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.405610407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.330740701 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.681253947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.332290212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.326915202 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.681322742 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.424413163 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.348644341 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.342168354 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.3382462 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.434679864 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.349613822 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.415800526 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.416359984 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.425835045 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.370649788 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.33080657 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.32856128 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334267935 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.333837736 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.329829273 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.35924843 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.331554219 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330625253 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.678066719 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.342700589 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.330605695 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330878736 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.331225497 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361069566 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.330967184 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.334337991 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.426053416 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.334290098 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399411138 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.718087964 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.715574969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.333724586 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.333375129 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.330906792 seconds)
  done (took 148.412527314 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.400153469 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409525239 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.450375074 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.336519346 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.385216469 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.453576043 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.337408907 seconds)
  done (took 11.039858803 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342145976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.334513955 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387253311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386793475 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.335161528 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.483895961 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335413491 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.348569569 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.331917007 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389534911 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.336605077 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335652671 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.34055526 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.335010716 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385507265 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.34812761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452547684 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.338336894 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335951913 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.494976899 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332312997 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.342317433 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.390208583 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349006715 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.335940787 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.345302673 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904056866 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335934458 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332868724 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.336051043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334010476 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.376081079 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335900052 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.335145853 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333437497 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455287982 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.336078922 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334110115 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.336379233 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.336597551 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.336174268 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.336381308 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.337400026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.3356163 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336340445 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.363470918 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.336765081 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.336548646 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.337073897 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.338079048 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390590604 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.337457557 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.335302759 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.33426763 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.396149262 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344790327 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.336973745 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.335550474 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337789499 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335115791 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498740005 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387768863 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.337171847 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388927341 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337565832 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3377191 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3379286 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337377455 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394949807 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.337227362 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389130712 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.335481942 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.495066948 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.364732739 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339230902 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.342869844 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.343715631 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337673496 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.338061509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.346358706 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.335375437 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.341998646 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.34722651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33550831 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335785261 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.443029481 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44929015 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.336192772 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.354006091 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348112342 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.336556248 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.394972987 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.338818987 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.336846276 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393885855 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.456464643 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.394801584 seconds)
  done (took 153.651709768 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346571751 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.348118253 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342414857 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.358305736 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343035652 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.341636343 seconds)
  done (took 9.352418896 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.345245332 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.341088459 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.340383875 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.339874568 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.33960368 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.341087272 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.340484799 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344820715 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.345219502 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.341427012 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.341690781 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.343460382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.342668969 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.340955864 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.342038259 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.340638072 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.34120976 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33878759 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.341624868 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342185888 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448921172 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.340956871 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34124145 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.345755498 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.346550543 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.341386853 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.351317825 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.340705659 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.341815628 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.351771594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.344294278 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.342591152 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.345174138 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351451577 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.346442126 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.345444948 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34596705 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.343746244 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.339198761 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.343178342 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.344035846 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342509701 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.342545493 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.34394481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.347412786 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.350080692 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.34923975 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35318756 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.342246993 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.343763239 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.345080671 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.342920745 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344856363 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.345244553 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.351036085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351234442 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.349719921 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.343782085 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34284974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.347465252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.345462696 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.344963249 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349891362 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.347469438 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.341659198 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.34531329 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.348411788 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3475815 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343304395 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.343320305 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.346038989 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342231191 seconds)
  done (took 99.17755571 seconds)
done (took 422.89734642 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.761727149 seconds)
  done (took 8.038985 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.447495374 seconds)
  done (took 7.726245726 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.641620987 seconds)
  done (took 21.924760187 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.409302135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.430657138 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.355557367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.346202782 seconds)
  done (took 26.820004929 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.427126762 seconds)
  done (took 7.705009013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.349388123 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.335873839 seconds)
  done (took 13.965416968 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.41796479 seconds)
  done (took 7.696462077 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.782121368 seconds)
  done (took 8.065211553 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.351320863 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.352113179 seconds)
  done (took 14.249268195 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.322737527 seconds)
  done (took 7.601052501 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.424988119 seconds)
  done (took 8.701933919 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.33268975 seconds)
  done (took 7.609855409 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.402253143 seconds)
  done (took 7.67743443 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.407969589 seconds)
  done (took 9.683558556 seconds)
done (took 158.742958116 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.337900881 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.341667623 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.340317618 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.339264373 seconds)
  done (took 26.635344593 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.375584342 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.37593428 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.37716758 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386275055 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.378495228 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.375749637 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.367940425 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.367613033 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.38755804 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.378957768 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.378785277 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.378769146 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.376366155 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.368303012 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.378196563 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.378337167 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.387697172 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.37705991 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.369241439 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.379834449 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.344194046 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.388908754 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.379835403 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.343937801 seconds)
  done (took 34.278303912 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.546085183 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.41934123 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.500238589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.400270632 seconds)
  done (took 7.143824848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.395665995 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.39766333 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.413499703 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.446726499 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.474886587 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.405994641 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.371672373 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364893779 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.351356984 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.396899502 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.473035191 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.413383266 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.48004922 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.344125091 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557729972 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.344443633 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.343419031 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.3958417 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.448081091 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.46185157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.345152906 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.395568515 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.399525441 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.416701824 seconds)
  done (took 35.117112535 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.343198364 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.351744943 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.350174693 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.344300776 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.343610695 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.344291727 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.350557751 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.345461273 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.366024354 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.345017787 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.343461358 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.344292695 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.34279987 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.344243291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.343858837 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.357206571 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.35769771 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.345622541 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.348050754 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.351547043 seconds)
  done (took 28.242341752 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.342255315 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.195838281 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.692266299 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.597795244 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.341627282 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.34321727 seconds)
  done (took 27.792725264 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.422631604 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.549790996 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.349132802 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735671417 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.819250244 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.351167739 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.350415076 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.590087594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919916893 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.934947376 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.407641595 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.418528738 seconds)
  done (took 20.130788924 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.343578681 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.34428907 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.346299384 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.359980551 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.406076425 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.353038643 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.356233554 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.34361636 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.40860459 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.412422376 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.353216824 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.407799645 seconds)
  done (took 37.716413255 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429409909 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391771198 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.405897368 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193758139 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.723600927 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55372457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.245098267 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.780143178 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.345935225 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615074694 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351998406 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431361259 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599334372 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349761248 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343669643 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.425881343 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570608853 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869955124 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346623842 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.465781935 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369058476 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342023815 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.678014525 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.373008805 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555227354 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476160231 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.602816633 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342167626 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638045849 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355610021 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353332018 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343405333 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616450145 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031531536 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435598311 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353091598 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.223978314 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056896876 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.350745948 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.468200655 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360071917 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347245759 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35410184 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344837983 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.278344769 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346848183 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791564944 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.350465187 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.054665784 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345826957 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355054849 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438807234 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.347828678 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163453353 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445460362 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344326468 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.342583331 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353826274 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914236588 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.02627655 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348414876 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.280871371 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.511153155 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.463601746 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979954863 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.446540248 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.348259582 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348930165 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279552485 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.572412926 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364567152 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482561141 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.36645474 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007797698 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081384967 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353065006 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275795638 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93945031 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353665314 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.281104329 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574875515 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347214908 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285911086 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.288981069 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280651521 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101614576 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357359391 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.808456697 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358660429 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.785696095 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.358924412 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36608404 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370832397 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570367102 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.232645294 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346700955 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.349554681 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483020785 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368015652 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.788472933 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282807592 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.35096531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603082133 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559395706 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354126056 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.426526015 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561006443 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356968263 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.362905451 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362231544 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359768267 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.948929001 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36078326 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047461134 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366242681 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348739275 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143883418 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351556007 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.448331392 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354540422 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604255567 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.158043766 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350435277 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431205605 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351219411 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349494998 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.588334003 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868211466 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348468891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.350942425 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353098011 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.360340928 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.350321247 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307942159 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.345845087 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368972401 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.352427987 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574004589 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352045379 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625369058 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283880711 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485494082 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450886197 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.573398193 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.617224535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.348587708 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609339124 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362683885 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363888519 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361158874 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368393671 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448130357 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371718577 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.349222671 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625632623 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.353734347 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354501249 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.584261403 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.834647026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35724183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.356568426 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.254073411 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953763775 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319680126 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359869268 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24470135 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.364279833 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415586713 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35650863 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.360123255 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.289254196 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351698955 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.357219386 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.354141349 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575015441 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361162087 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.48598938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430493248 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.554423893 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958474072 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365047954 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.284656926 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.062710021 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.043837078 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35200243 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286759321 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350622683 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359762605 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36270613 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.676116564 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956704166 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354799445 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.497695342 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.359793326 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361812043 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.356216547 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352106211 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.267147262 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063722377 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361560611 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.365589272 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496605329 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.366352641 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287109905 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.355756772 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357362007 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351788489 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352071341 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386458645 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.52482026 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856020541 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614235592 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.196186405 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367008619 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.610205382 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.38652871 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363281374 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352727147 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360571429 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.372372926 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363080597 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.363967551 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.596070326 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036209564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920829724 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113783147 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906491496 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34246033 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.358940632 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354983909 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.803342582 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289310881 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913371925 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555646582 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.803874075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312936438 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561352954 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.635629468 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155465328 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364040752 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583632493 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333135995 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.356389267 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366862346 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566539981 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389924404 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364920092 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285879426 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.64019657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598423 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371659964 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433599267 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800792458 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366721035 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357104168 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.356889553 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.803197827 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538803301 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069372302 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.53413107 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367836354 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371921251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848144925 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365562631 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585709891 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997329695 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367520651 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.563642499 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296340568 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.367495702 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.366133921 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.356800903 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.749562963 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.362558521 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.611409524 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366849908 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290659367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36206154 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911324744 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213130293 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.362259738 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356130019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141942296 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37318218 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65774321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.370321519 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.233258761 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362880887 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291813086 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292528219 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.049473876 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363873218 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32566524 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886784581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.472732484 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.407115348 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388182321 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209703218 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613547973 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.371094353 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966116763 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584663274 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.312854891 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379667984 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.457791722 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360080081 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.34651391 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358044521 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594752766 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254813987 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584198761 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.436517936 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.264069931 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360102693 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571757109 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35885661 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365502239 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61271546 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.070260132 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.371859368 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102592138 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38570753 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365863816 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28075033 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527608515 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368652745 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438117599 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370495675 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.370065183 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.370158533 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543179556 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362240134 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378092627 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.372952106 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453701755 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105017084 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.243863839 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.363617858 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974807379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123029932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975259987 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373462155 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358764026 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363452044 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294862823 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509712616 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59053586 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634485806 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478438222 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.577662389 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381979124 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370895661 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372506874 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573700863 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636167201 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259904231 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376891119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375295878 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.36045128 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372610131 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.572370679 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899414055 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962402194 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476198666 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372895279 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.805520686 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636630057 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361375771 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36218095 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955716453 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.38302939 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.816570037 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.369479875 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361714203 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509824274 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372011434 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062681184 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.371916459 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.521827653 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.135407652 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622237232 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619096564 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.866346049 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373723505 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975784253 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114607805 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630561651 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429598684 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374395138 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.479133506 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509208469 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.361233786 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362288238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362382173 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211791364 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.073457428 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.374077405 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979173932 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62811491 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.361595925 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.365497315 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386360824 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.373912708 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58734123 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139771708 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592035843 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373091788 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370450018 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.184287003 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977778783 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37738405 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297662246 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367355921 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614674217 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60098331 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386798615 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.817184883 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.074959794 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966415756 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.34129745 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385875142 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378529435 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11845028 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979955861 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.256871771 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906132385 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.934350449 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38228271 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641164613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.36933612 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372658834 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642811704 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.368932318 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380066453 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378582587 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.977185248 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175781546 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.382622215 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.557757066 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.303878067 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712222908 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07546607 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303132271 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376083087 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.562291288 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368744856 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485542416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380621128 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.368052639 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374741321 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.100210676 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657643921 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.37221844 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.355077777 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.352464651 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374635461 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376252962 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611830981 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367204737 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083441572 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7173866 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622866563 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369732977 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.35418242 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.370699695 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368012674 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.364815136 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.575468272 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.691857427 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971498952 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.371414541 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.379197726 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371953604 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.583605284 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579888976 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367997317 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381120331 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367430255 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386872497 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.279333774 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.875607862 seconds)
  done (took 1611.655525042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418819553 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.418207902 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.407410807 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.433098921 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.390160167 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391847206 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.429980536 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.40861707 seconds)
  done (took 52.605345191 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.382603353 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.591852535 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.402664278 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.374433378 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.381500651 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.372352089 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.84574397 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.386861647 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.380448115 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.380549523 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.381878419 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.386747966 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.034691524 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.382344827 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.374791478 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.357558842 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.380050437 seconds)
  done (took 66.11069743 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.372323915 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.667446617 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.386768503 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.374629734 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.782504828 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.379623573 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.692081235 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.378773873 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.388084907 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.586646006 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.039786 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.420682387 seconds)
  done (took 80.778643306 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.381549035 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.379115485 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.3803123 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.380683444 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.380279817 seconds)
  done (took 8.211167448 seconds)
done (took 2037.69527061 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.623369138 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.120129484 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.066277878 seconds)
  done (took 5.495997743 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.521508689 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.570162372 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.749535792 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.716038876 seconds)
  done (took 7.866611867 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.649683835 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.754623374 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.56404815 seconds)
  done (took 6.278130216 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.879771075 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.374623922 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.445090208 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.371204324 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.371849386 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.371775817 seconds)
  done (took 20.427200954 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.37532157 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.378107137 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.375193484 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.378717456 seconds)
  done (took 6.818457903 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.356730842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.132444738 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.357381132 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.374419684 seconds)
  done (took 18.532588258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.122715798 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.135686489 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.120709505 seconds)
  done (took 7.68976567 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.387133601 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.21852731 seconds)
  done (took 9.916588967 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.676701922 seconds)
  done (took 2.988266691 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.508252899 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.644852209 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.453225286 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.42378187 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.479078835 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.568753047 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.180606404 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.712677045 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.406300659 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.765889514 seconds)
  done (took 29.456767676 seconds)
done (took 129.10268467 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.385345078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.395291349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.582591384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.359991895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.606643674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.581914084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.66587027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.327603991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.865086433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.857552423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.362882235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.609549459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.614062271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.395829625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.614176588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.392106669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.609615215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.417246374 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.049707328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.248846225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.665978233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.998605658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.188313684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.009748813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.60956809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.5328269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.576339216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.3933862 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.222475727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.585129601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.533082879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.386707375 seconds)
  done (took 193.957847038 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377520092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.378396982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.380004092 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.384437509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.378088884 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.393394297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.378996367 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.392121523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.383821498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.378491114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.405824525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.391171566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385422209 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.378694778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394454028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.39335985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39934649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.398523187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.393968986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.379744991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.379361322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396078219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.379648686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394902452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.394437005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.379793579 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.379160948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.379934192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.379116579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.379296895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.378826054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.386963911 seconds)
  done (took 205.668985548 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.386116904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.380599737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.395106755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.379813981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.379327718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.396303567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38231315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394180017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398524514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406743959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.378842678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.388722434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382423965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.394323506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380168103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.380597548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.380526202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.380093028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.396123334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.39707701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396210513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.38057043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.379876339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.380175071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.380076565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.383717409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.380901506 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.380937231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.387036075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.38036513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.382682375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388561278 seconds)
  done (took 205.675394496 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.574974521 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.385688851 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.385968119 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.321223861 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.386551263 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.38611489 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.385318921 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.577087157 seconds)
  done (took 14.720705324 seconds)
done (took 621.335664409 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.781817227 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.548054828 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.587809113 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.406205118 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.238983043 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.411854844 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.406911473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.585500685 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.348170569 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.589057276 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.711947402 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.407281554 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.855752589 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.40371495 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.662772332 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.506032291 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.285783476 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.399889906 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.732426942 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.987131982 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.665943706 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.923310638 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.582788493 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.321914347 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.867837208 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.930935025 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.119906356 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.285543518 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.405779563 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.734244048 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.212208778 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.419633885 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476865882 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.453611545 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.504595651 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.485349465 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.36126926 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.452044741 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.592136105 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.683844966 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.969913948 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.139646389 seconds)
  done (took 94.766437505 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.37661221 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.375897281 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.375960166 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.376034416 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.377699605 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.376200165 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.375557807 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.375715138 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.376546179 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.37543158 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.376216671 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.377386111 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.375900654 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.377052146 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.37620557 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.375358843 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.37613506 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.378828446 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.376840572 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.374643604 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.37663486 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.376068914 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.376838662 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.375965208 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.376471334 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.376687751 seconds)
  done (took 37.106880658 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.389459342 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.630621114 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.819591182 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.39818453 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.391334276 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.395914574 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.474747231 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391303719 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.395562584 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.397013546 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.552058139 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.393160238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430464302 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.828548703 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.395520023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.391101881 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.391016311 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.394145311 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.639667803 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402486489 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.47585418 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.392017013 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.476386472 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.404865138 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.396202944 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.395333497 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.397468581 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.890177927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.395671791 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.554091185 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.229324838 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.475333225 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.843514277 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.832806325 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.236624355 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.395007503 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.393046062 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.558646232 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.397903573 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.395052241 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.47636523 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.395533304 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.83075828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.031066111 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.412797722 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392585549 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.916425578 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.557648204 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657822673 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403636388 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.856754142 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.39826073 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.395198149 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.396940896 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.656991396 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.402845844 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.395113751 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.933761505 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.400050532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.477628757 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.393752082 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.395143189 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.6478147 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.396270621 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.635947638 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.397037885 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.405376796 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.397673731 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.833799338 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.398418672 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.049062953 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.415520018 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.396288042 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.5577025 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.637761649 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.951496836 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.401729749 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.653950713 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857007723 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.480316369 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.404417973 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.884493452 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.48185552 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.402235186 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.399019527 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.398669935 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.39672211 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.440395102 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.478996076 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.974804268 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045471667 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.954744565 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.48216703 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.411469887 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.401210616 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.939044488 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.414888211 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.396290271 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.828776407 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054413577 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.417236063 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.409126519 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.039833305 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.419605468 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.483583665 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40548007 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.84130346 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.402832227 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.441806672 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.398161387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.408013058 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.403823994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.482045875 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.404792356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.398256554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.028107797 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.581637915 seconds)
  done (took 183.210217498 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.394073829 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.414134417 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411470165 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.393404044 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.395010225 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.400534582 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.394950148 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.394324541 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.4005223 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.394393338 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.395679587 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.397895673 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.398117262 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.403452599 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405805273 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4113722 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.004857809 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.395114753 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.395778744 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.395901531 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.206524957 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.397305594 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.395144584 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.396340218 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.397191312 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.39548735 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.404277916 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.397212226 seconds)
  done (took 153.917808772 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.400105707 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.998807793 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.401590877 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.541120804 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.420886738 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.398558773 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.538293116 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.463065587 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.404986689 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.397980916 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.39813919 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.720901365 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.401551106 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.943936926 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.606831931 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.540122179 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.945245153 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401679557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.39787036 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.399503084 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.542436393 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.410190188 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.722629273 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.002076285 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.401927263 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.001737149 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.389523213 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400164977 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.402602066 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003063988 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.399215428 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.721521001 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.4844546 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.466053088 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.003483587 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.949715509 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.946674149 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.555397024 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.403734857 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.399527925 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.398832375 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.38944522 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.03781361 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.404056321 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.405154818 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027080863 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.420131217 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.403022312 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.41029872 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.399891606 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.467299203 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.467415623 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.744975568 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.045458936 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.483556163 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.422361905 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.542834832 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.776839913 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.405443114 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.949481091 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.388762575 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.038785614 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.407255153 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.390238166 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.401932554 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.406571506 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.560664208 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.540748458 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.952099064 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.407165679 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.951826758 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.55991674 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.400826841 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.402400931 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.403833076 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.044886452 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956408508 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.563190982 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.548647132 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.613354708 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.392777178 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.40614026 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.391385332 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.488861831 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.403602731 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.008288811 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.953825377 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.405650844 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.404123878 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.405080619 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.404993768 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.594669609 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.011359492 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.488538827 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.943303401 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.748788921 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.732041327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.405113434 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.466805665 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.404392321 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.732926847 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.406064675 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.464471025 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.842532766 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.733336067 seconds)
  done (took 167.843696689 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.661487264 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.665237062 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.49653571 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.523449967 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.960510493 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.979124485 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.642950595 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.532888588 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.516465663 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.661577339 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.623663853 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.497560805 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.595831689 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.48347953 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.169982702 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.477565768 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.498622943 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.535345017 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.516690834 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.484422341 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.04862582 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.706210737 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.58505505 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.576716393 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.504475421 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.188423421 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.984388014 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.921254844 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.580579837 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.756560314 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.936997798 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.598283997 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.393880965 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.094305886 seconds)
  done (took 67.737745759 seconds)
done (took 705.901654845 seconds)
SAVING RESULT...
DONE!
