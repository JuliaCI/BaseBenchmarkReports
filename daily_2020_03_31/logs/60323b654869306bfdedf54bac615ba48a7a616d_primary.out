cset: moving following pidspec: 22053
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.311349692 seconds)
loading group "string"... done (took 0.636316446 seconds)
loading group "linalg"... done (took 7.672602895 seconds)
loading group "parallel"... done (took 0.15637478 seconds)
loading group "find"... done (took 1.217357717 seconds)
loading group "tuple"... done (took 1.811801146 seconds)
loading group "dates"... done (took 1.267730211 seconds)
loading group "micro"... done (took 0.219574878 seconds)
loading group "io"... done (took 0.927886175 seconds)
loading group "scalar"... done (took 38.09784377 seconds)
loading group "sparse"... done (took 12.194033769 seconds)
loading group "broadcast"... done (took 0.978848566 seconds)
loading group "union"... done (took 13.284021431 seconds)
loading group "simd"... done (took 4.923698888 seconds)
loading group "random"... done (took 9.385867681 seconds)
loading group "problem"... done (took 1.891045882 seconds)
loading group "array"... done (took 22.023787728 seconds)
loading group "misc"... done (took 1.922437988 seconds)
loading group "sort"... done (took 3.493899686 seconds)
loading group "collection"... done (took 18.636095619 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543564263 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133170287 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141371197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12759547 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156899375 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12631201 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133931248 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093206801 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866675651 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153990163 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123028953 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414405798 seconds)
done (took 5.406336105 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180752974 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086895308 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094025502 seconds)
  done (took 1.242926321 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073091432 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130874189 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074913357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074598171 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073982114 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074725752 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074000163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074300471 seconds)
  done (took 1.640313179 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078315488 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075980528 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072811069 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075644121 seconds)
  done (took 1.366675046 seconds)
done (took 5.578435664 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.782660726 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219870116 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189568731 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401831286 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136817621 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180534421 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643025451 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317212192 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191278901 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08330886 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115695562 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351018635 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125807741 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653808747 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082934857 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098251281 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.147450378 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.40909579 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072625 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08922779 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09669033 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134539557 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089515544 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078922767 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150274341 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072815981 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143593239 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087611272 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071334955 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222582843 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180578096 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690626918 seconds)
  done (took 10.404001995 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104953171 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106253382 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076226417 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132881282 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106781033 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077930737 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083662367 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076203773 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098046318 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.138419976 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100046232 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.113907799 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074368495 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076876835 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09070064 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217283258 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088473193 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089467824 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077934565 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086493018 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116399736 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0863149 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087860957 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087805883 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137602854 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.189355886 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10531048 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10580992 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074640511 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.088704382 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122546659 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135571391 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073846633 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075619536 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134293313 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102298832 seconds)
  done (took 4.84544721 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.984501444 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148321541 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096269626 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140785282 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072846696 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116252462 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073371164 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088320434 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216204758 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.434951174 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591013822 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138999421 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118492962 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110452732 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075207212 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076930291 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075109295 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496696292 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10698646 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114654252 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087221118 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077165413 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072908914 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075181368 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074444196 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071278291 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075238206 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120638908 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.072050656 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083814291 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307234718 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12908826 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075230902 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942035785 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.17414901 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073290048 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.248005082 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177933252 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096536215 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148790768 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07610341 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072942897 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167154109 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072424147 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076953133 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099044379 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075827326 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092824942 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110724345 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129411757 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072920568 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073795069 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175670737 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072899719 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086327273 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.139755301 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160172344 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074185526 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298464881 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.0977876 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077590193 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072994602 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174767074 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124336434 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073315637 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074804012 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076497104 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076286089 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371863565 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072563046 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.886098223 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078532358 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085164723 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077658159 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077730953 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080659894 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080768168 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096372187 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0737279 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070941827 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080192937 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073118501 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073122384 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07352769 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070830719 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090572984 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.477972745 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074225343 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075268003 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072591472 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098477755 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103266935 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07510402 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072564172 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106743095 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074152128 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073600182 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073678818 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091504838 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077772623 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120355376 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074366349 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101668266 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104658074 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076956737 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108794028 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087390711 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075707829 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.412712244 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07334325 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074880062 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072908792 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075079607 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073647673 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085489617 seconds)
  done (took 22.35305419 seconds)
done (took 39.651558498 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.251288868 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077181158 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076765549 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077971541 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077642476 seconds)
  done (took 1.708275912 seconds)
done (took 2.847487934 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12702578 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105329502 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071114796 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103815093 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072094812 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11076136 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106832569 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084597881 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106494454 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071980788 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103460039 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07167087 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072136321 seconds)
  done (took 2.353726804 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088199603 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09097728 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077286626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090196301 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070902885 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089417749 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088074341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099108779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088695235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079650531 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07087074 seconds)
  done (took 2.061613722 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087618839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09098015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076868262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089615598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070551358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089191868 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088979488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09341729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089360134 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081138921 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070786052 seconds)
  done (took 2.052521404 seconds)
done (took 7.592179346 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081300833 seconds)
  done (took 1.194904662 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.534091475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.625363377 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085611273 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112160336 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196942559 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118196446 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.250241137 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091252074 seconds)
  done (took 8.287768725 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095834152 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076974424 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076486192 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088125066 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076705718 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076084781 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076964189 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079709422 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079374188 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078229692 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078903894 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078945726 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077595132 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078410631 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075663548 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076251234 seconds)
  done (took 2.462339739 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098475373 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097388419 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079892363 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081708555 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079523415 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078666999 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081018516 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080551196 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077394673 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079255968 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082615348 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080334542 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078676719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070764192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080645421 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08278421 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077835167 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081072923 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081787179 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082392326 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082314251 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070625424 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079212228 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080868035 seconds)
  done (took 3.161095078 seconds)
done (took 16.232263204 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11122941 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07503269 seconds)
  done (took 1.307247773 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08431517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086970149 seconds)
  done (took 1.301716006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085082884 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.071741212 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093359362 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083456888 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072774855 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.071936657 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092484842 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072675932 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072244819 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072625217 seconds)
  done (took 1.919365688 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071600657 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081738008 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07561563 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085921098 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079184932 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070472079 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078435203 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074129566 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083020837 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069621581 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077442349 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089692988 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078079776 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091096358 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078047992 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075014309 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076951717 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073733059 seconds)
  done (took 2.545014093 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069553889 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.072848069 seconds)
  done (took 1.278273444 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070505476 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06924052 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072083891 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072238709 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06935787 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.068849936 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.069965712 seconds)
  done (took 1.624871404 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.366439328 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123728056 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312661008 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079563006 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088525175 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263267915 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073543047 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078218507 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078589213 seconds)
  done (took 2.634709856 seconds)
done (took 13.750097271 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085310124 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093875704 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.102763615 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385396419 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10068461 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074500437 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121123936 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185867188 seconds)
done (took 2.299190227 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212206489 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.664530568 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410172025 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213420767 seconds)
  done (took 2.425512764 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338285639 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095442237 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067494003 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075561674 seconds)
  done (took 1.722055054 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072531076 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07655125 seconds)
  done (took 1.294649478 seconds)
done (took 6.799364613 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073042679 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074150562 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0927015 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071368322 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073370446 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071107484 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07129684 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073172375 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073200815 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.073865711 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.073451082 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073593275 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070593406 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071025707 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070924259 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073856793 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.185819667 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070860814 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07078936 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073116965 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070625182 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073021727 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070805193 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07072939 seconds)
  done (took 3.040138919 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087297582 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073604743 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077390433 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.076889203 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07568297 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077300713 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077465272 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072923993 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077523016 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07549338 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075507669 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075344819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075692259 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075802392 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075172872 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075328412 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077368024 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073297215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07539973 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075704557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077762744 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073791426 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075435425 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077368175 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075217342 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07540248 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075825092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073988006 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077429074 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075413403 seconds)
  done (took 3.439762975 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075524733 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070127881 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070192559 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077865741 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069646897 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.070908392 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.069943139 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070219457 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.071872006 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07015828 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071887926 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069892906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070035541 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070535241 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07074843 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074416772 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087411419 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070321746 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070169865 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070263076 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.073967722 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072998593 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069851445 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070047292 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069887702 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069767242 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070508885 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070358661 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070691172 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069726573 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073987747 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074360441 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069908808 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078379381 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07420353 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069713039 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07486521 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07020817 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070718493 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069829021 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.069874129 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.069494495 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070534504 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078042464 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069894837 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071602876 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.069806416 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071581724 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07090511 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073136976 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069777732 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070470405 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07225081 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071293037 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074763048 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070025948 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070591629 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069631599 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070889101 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.069965509 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070216109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069703596 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073620902 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070626638 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087185822 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078089388 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07024238 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071433024 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071142302 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074034425 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071881697 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086354956 seconds)
  done (took 6.352003283 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091379682 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091063714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072925715 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072799032 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068173308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071106563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077393526 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070851556 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073066483 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090454667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0710995 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072774814 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073096914 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07479397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070814451 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073159413 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079329973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068947109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070828184 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074898083 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071662785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076481712 seconds)
  done (took 2.828727681 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152685169 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076834614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112701475 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081967587 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077277946 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082124309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076949573 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076808946 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076705761 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075106348 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074967692 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076939787 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077050414 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074575052 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074753595 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075009254 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077101212 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075390583 seconds)
  done (took 2.658360623 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081574335 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072957655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095432339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07326981 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073100253 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075534453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077547716 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081246638 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075638511 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073727387 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080798876 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075563958 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075656204 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073266087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075873493 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073008726 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075691672 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07366943 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081299137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077457522 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077552972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080737625 seconds)
  done (took 2.862874797 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084318845 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075045646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088140149 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074428481 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068305044 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070600768 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077171786 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.072846922 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076542212 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074970572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073097273 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070582486 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075971301 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073170109 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075696895 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073131697 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075147226 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073105831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075224076 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068476208 seconds)
  done (took 2.659779706 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089081417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074301382 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073959934 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080492782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07373122 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074315564 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080675719 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074419284 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074284096 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095520162 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074196054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07457066 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080240698 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081086839 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07387572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081359433 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080700196 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081216134 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07432896 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074465135 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094904741 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074690825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080690304 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074367192 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074328809 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074264566 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074362716 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078288954 seconds)
  done (took 3.357403822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07244328 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073480113 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071218993 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071177302 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070766205 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0707878 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071252867 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.070989329 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073084052 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071005334 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073589742 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073826635 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073528439 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073573719 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073962186 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07367287 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073501163 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071151874 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070898279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071443909 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073332261 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073561232 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073385002 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071528115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071211431 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073394582 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071314953 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070907441 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073177309 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070929515 seconds)
  done (took 3.336679594 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079811605 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079313199 seconds)
  done (took 1.328426017 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0672734 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0874289 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.069809424 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079418719 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076321588 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073745755 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079948239 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076723168 seconds)
  done (took 1.775294445 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087234761 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08244976 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072780605 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08269357 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08145412 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089406021 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131069349 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072957867 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080541347 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071605683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086551488 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073021264 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080452562 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074128694 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079665642 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081092718 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070476656 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077389115 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07376051 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070951653 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073336605 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081665622 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076955591 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068354528 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075179327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097115269 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084765446 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072218677 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077025596 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081213941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080119395 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067148238 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072688331 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072853125 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070997942 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081525804 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088339992 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076778895 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082307821 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073098212 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081583581 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068283369 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07791004 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081277983 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085103492 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073139037 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073671952 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067659934 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071474615 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076040558 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06817209 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074768327 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067845375 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081564317 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077304087 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084178325 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072063206 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075170222 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076629879 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076955009 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080781854 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075566808 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076868753 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072706224 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085051805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079441655 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081454907 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068273938 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067777242 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071229354 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084201046 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098240805 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079521422 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073061201 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073574575 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071130901 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077611065 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07354575 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078610535 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080414257 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072109622 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076854675 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081025056 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073944585 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076054497 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079535937 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070947955 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075022501 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07155932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089240063 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071458004 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.073725038 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071554473 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083114187 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076801334 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.072000643 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071109901 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080567883 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066094446 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071813198 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072154911 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073503347 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082577663 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074986658 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075858212 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081709008 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078665206 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072719027 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075145725 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.196111644 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075065936 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075073028 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083901452 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068594211 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07798639 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076094342 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073698236 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083178232 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.07210245 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073315311 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082869693 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080175749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071448068 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070211084 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.076770438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073055531 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075956323 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082229488 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071485953 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068029696 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068318806 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077453993 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073060583 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077038897 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076573896 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07665716 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067868483 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070988327 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077022899 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082728847 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074233065 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074867116 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079066976 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075147382 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07230655 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080385848 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075765188 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072626113 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079226824 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07452734 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067909332 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074508585 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07614008 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071364352 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077604469 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074388795 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075983509 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072784428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071345727 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.078538531 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073320973 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072829683 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074284953 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071968022 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084528909 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075672559 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068362759 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070831939 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080202001 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07189131 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071963719 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073155746 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075902598 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073947595 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070567789 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072404818 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075848789 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081207516 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075956063 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073660461 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079422332 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086595615 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072893502 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076620801 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072656502 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073540605 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073761617 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083407102 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079780392 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07710333 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076305082 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070037974 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079088352 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081904928 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.072614428 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070244251 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072785802 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076092957 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079533434 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.076264556 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072953679 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070829433 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074389222 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075396057 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076392836 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071729424 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072626974 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.077645931 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070601879 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077309486 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072507839 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083051816 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076021804 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067139427 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073801463 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070082044 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079086376 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067000181 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071343959 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072301402 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072264634 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070796958 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.205009782 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.068637022 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083368318 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084391543 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075417163 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074738558 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.073489815 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082712972 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076027888 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077481504 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078245802 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079924169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085325105 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073797664 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078082605 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.088148257 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072404618 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067356279 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079668216 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07128798 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071933282 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072055462 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070868108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076867282 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079453303 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079871467 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066952831 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076553815 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071461238 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073073495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068120172 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077982302 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076534913 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075272307 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080767243 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073101866 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07286499 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076635801 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071477959 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07232716 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073350653 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076636074 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.072869576 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07594755 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.072717094 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076156848 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072689647 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070448519 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075111479 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07243413 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.073993731 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078411965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072114958 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074083213 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076337919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073928143 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074390721 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.075179754 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.072994442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076829891 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075048316 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073935197 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076242509 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06769161 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081211078 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072384562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081158779 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074397625 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069902496 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078467603 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076186209 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077396807 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.072831496 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073126458 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075029774 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072759651 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076577712 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080844598 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071957785 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084974883 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080769502 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075154383 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076430489 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074738479 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075244998 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.072697971 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074287355 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072661391 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074050828 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072077647 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077563211 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.075923432 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074028854 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075110272 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072812518 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.073721638 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072942893 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067272329 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072953965 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073653187 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07261203 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082263586 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072106187 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.072747949 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071443097 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072909559 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070819127 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.068725448 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077866842 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078214072 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071703945 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078803677 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072279485 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074303793 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083705437 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.199160296 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.07271881 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.072283476 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.073584483 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083161812 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074551484 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084794102 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075190479 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074193961 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070831108 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073446922 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.071848201 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068491625 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.070893611 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076981957 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073548113 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072128004 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072735645 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076895386 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073512787 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082282747 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072395262 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074683131 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072385409 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070341039 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073177416 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073334369 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07707011 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072984594 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071785938 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070273275 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072199426 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074663813 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075011716 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072472405 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075337427 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081030691 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072142517 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076672203 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074853972 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067449733 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076551719 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072478069 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072078358 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072989156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077167587 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079269166 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073139807 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083594647 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072284428 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074972742 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072949141 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071495854 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071995687 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.07230753 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07239587 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073325791 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073930194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081776167 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071340391 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076729078 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074103828 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074578254 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08018351 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073452458 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077036775 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078836082 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074869519 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075526756 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082303828 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076358218 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077298279 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07351115 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075598772 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079723923 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073564559 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080660653 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074510938 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073833817 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075729966 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07258251 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072661149 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072732932 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07215336 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079684228 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07325155 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073411659 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.072975371 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071109615 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074605507 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074704006 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081296886 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076806342 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077272878 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068307843 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07027525 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073073436 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.071733759 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075271092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076059234 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07916843 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075929559 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074262974 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.071614232 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083192273 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078704651 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076741747 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071128549 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076649609 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071956408 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074668889 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073880789 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072965781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072640216 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076450002 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074726181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.205238737 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081332435 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.079585785 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074687472 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.0765836 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076011456 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075405565 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069605352 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.073829681 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076967206 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078599457 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.076544054 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073131673 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084562798 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072090095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074747855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075507806 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072637786 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078529395 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068150164 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075696133 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073824354 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073640643 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068214755 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073527415 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072702863 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077230098 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07344972 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067982558 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084482577 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08344971 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0767286 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071990816 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0715614 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.067817157 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068250744 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073469528 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073064327 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075911114 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084485464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07302526 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072729694 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068105358 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07277533 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07665945 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.076874472 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069999207 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068390682 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073274101 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076388155 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079666966 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072377451 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.07245793 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077024501 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075748112 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.070959594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075947714 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07046037 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07828812 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08656233 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072890507 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075513018 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080100849 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082437929 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073207883 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068458239 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073220141 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.076802175 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074974548 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073546821 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074070407 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088841651 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077352466 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073008266 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.07184803 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076937314 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.076099084 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082394568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073930563 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073454135 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078733215 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.076412141 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080567342 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078113895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080960993 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077694765 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077070279 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.071749566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07435753 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071216024 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.072579041 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073536352 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073387502 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076795923 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079302157 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073663961 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084738907 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082823083 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075554678 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070011633 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073941119 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.07325491 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068798051 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072840233 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07108948 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070567486 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070718629 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071607209 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074888827 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077366482 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074247816 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072046792 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071674384 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.066421761 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07579929 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.208672585 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077156769 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.071685648 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.074002483 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.07422385 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.080199041 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076306207 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073156767 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077403454 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076295646 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075064615 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068603781 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081497279 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072492764 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075995574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073630218 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073417474 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073536805 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07724366 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076941302 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074490427 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076833579 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077889959 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075038152 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.070835039 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070334522 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079782886 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070869766 seconds)
  done (took 46.743552314 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106273891 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069747688 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068177098 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068297441 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07857001 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069257288 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068365677 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07001096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069701697 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071904682 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068696702 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068720819 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076581126 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084099196 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078982611 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072907326 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06899821 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070076751 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068762303 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069451419 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076649933 seconds)
  done (took 2.800316532 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077720729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083971961 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081667534 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08851856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077475431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077150254 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081899897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076962037 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084783763 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079173916 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084914127 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076369184 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079456981 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079218182 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08026182 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07673293 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085086905 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07912258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076446818 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081915667 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076816978 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082349238 seconds)
  done (took 3.012963315 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071917615 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072666694 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074982691 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068220022 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072103326 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067903524 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074965464 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07038813 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075279148 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072393373 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072451597 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072746883 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07494972 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068086173 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073881881 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070478689 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113880052 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07549941 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072530826 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.081873003 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068148788 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075028662 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06865839 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068923237 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07303686 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074903033 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073431245 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071153113 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072013003 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072770055 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072477085 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070393479 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075072614 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073855175 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072627476 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072337449 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072197825 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.075026612 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068363717 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070638221 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073533392 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069688078 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073711022 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074033988 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070453152 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071055076 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075106161 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073173756 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068009665 seconds)
  done (took 4.836045258 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082028762 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115546306 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074903909 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094325299 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086261474 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078754239 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077902501 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096079947 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069852112 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070812676 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087430972 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0852253 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071861276 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076336802 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079117321 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072213487 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072909011 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071244988 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075718811 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071623631 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075523861 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079555657 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086353359 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084538546 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076043894 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070703826 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071445377 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076139174 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083576357 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075762547 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075910768 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077111977 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08656388 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074989159 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071417077 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074081611 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087723249 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072318605 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074720289 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070485878 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074366197 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076359611 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079097155 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087467651 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071778786 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077104708 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072118111 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069555469 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084364302 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074500821 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079235286 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085191733 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076149082 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072536773 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076151517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087062546 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072054998 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070787532 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074862788 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083339224 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070356439 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075377854 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085151789 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074117795 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078661039 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085340869 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077279492 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076050883 seconds)
  done (took 6.69504657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08038344 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103737499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089596996 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089380146 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082309313 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08284292 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082864378 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083044081 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082805198 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086487658 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083298679 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123224765 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078379598 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094620387 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083175161 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082705084 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082603185 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083290167 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082692156 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082658988 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082744153 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089194347 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082717667 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089407304 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086470713 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078428957 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082517522 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082519378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089082103 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083010466 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085766568 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082532215 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082647782 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089670863 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085872595 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082256095 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07227218 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082816406 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083476654 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082839238 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077895129 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089187518 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082110785 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078535527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082465502 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082733259 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089276685 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086298178 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084693929 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086538525 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082537707 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08904533 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082131591 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083201481 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089107252 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092145265 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08883455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089862197 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082719179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089735546 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089159249 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09206449 seconds)
  done (took 6.582389286 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084981636 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079777341 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089913543 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068385747 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074374898 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079974347 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071490869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071015823 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080379437 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079908251 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082870505 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079371659 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081907436 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08243699 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079314207 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082299493 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079176044 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079652329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080613941 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096749596 seconds)
  done (took 2.880571968 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08105608 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090115767 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.073535514 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077683561 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075723015 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078071161 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075794145 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07639318 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074136312 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076863904 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082698539 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082339502 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074665496 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07890683 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082280963 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078265445 seconds)
  done (took 2.536729082 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086908036 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.078162236 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084507897 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07238175 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073433101 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069228968 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071939796 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068351693 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069041295 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085022377 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072574009 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083412435 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072456294 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071303073 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06919836 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07848841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068977589 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069508938 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072966209 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083443199 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076556945 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070703362 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076450412 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071990134 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07529536 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07771665 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071471431 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073274462 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069959399 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072488218 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075720872 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07629177 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069609566 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070299041 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071590187 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069517627 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07272453 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072713118 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078598081 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072219029 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07074697 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075201792 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072262916 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073478172 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068828189 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073264369 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069348045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07564883 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070070479 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075538852 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072727454 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075087552 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073150098 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079644998 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075029641 seconds)
  done (took 5.342714881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085901122 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07625202 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068213653 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07110367 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076151502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074269741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076255224 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074574445 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074546548 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0705616 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074534309 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076684632 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07454807 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076746843 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074569692 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07684948 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067953436 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073887961 seconds)
  done (took 2.635921866 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076993802 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072722007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.08020996 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073355846 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07276327 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075108248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068070645 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071413184 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071078209 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073049169 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072961498 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075414195 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070781599 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075316386 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073309096 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073317151 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075678366 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071829605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07310138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068391008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075763996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071164584 seconds)
  done (took 2.893492057 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099534517 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090758594 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146050092 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086421328 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093112061 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079522199 seconds)
  done (took 1.879399642 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096830464 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107081492 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073239089 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075869769 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081844395 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076821057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076703632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077538864 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083858329 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082235909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077111681 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087420566 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084445495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08383416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082714924 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082364908 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077617989 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07758274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074181972 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089124823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077580915 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085054542 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077587774 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0768524 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077172719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084070389 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084546893 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08253636 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07733218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08447606 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083082289 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077796293 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084679282 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082825423 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076334149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08437246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077245891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089297837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08335371 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08385265 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076321431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082292006 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084686253 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081539948 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084803414 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077149751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081155923 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077240271 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077198103 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090671686 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082621919 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083691168 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082157072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084806956 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084576694 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090837115 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082209179 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083538043 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082288458 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082784195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083749743 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082256356 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083401454 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081792716 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082397109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083508079 seconds)
  done (took 6.7155936 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109933203 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074298742 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077353434 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082058148 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083902167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077619875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077709198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077426588 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077583958 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074523176 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115386658 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077741536 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083934916 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084180762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077447576 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077188556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077538844 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083774995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074640665 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090971623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077622181 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084178712 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083971449 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083850151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082708092 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082107103 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077218335 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077309928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077301584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077598638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081689265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078006352 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084171199 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074953102 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083945032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077991605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077904288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081512054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077529612 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082417864 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084144298 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089394449 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077428405 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077419619 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08256485 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077737787 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077730665 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074705985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077505736 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07503286 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082672113 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082394944 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082153054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083674974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077463752 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077634855 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077679427 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077608298 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077347476 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081942824 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083831574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077589381 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09120813 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077588851 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078257616 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084361693 seconds)
  done (took 6.654708838 seconds)
done (took 136.997687577 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200105174 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175505313 seconds)
  done (took 1.649450043 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074673612 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103269183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08315055 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135729538 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071808798 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106388098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104084648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081941782 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073951338 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074181264 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073804856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076244073 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13930356 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071635049 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073844469 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076494789 seconds)
  done (took 2.712233511 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102379533 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16498711 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108894114 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072649558 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105205134 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079784505 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073141957 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085147615 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078340659 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073021207 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079691941 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077947552 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072991066 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077767258 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078335558 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080279065 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072808316 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079581927 seconds)
  done (took 2.858449141 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101077231 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097598417 seconds)
  done (took 1.497580689 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161963672 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138211989 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207501237 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341666411 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161230063 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151314693 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151486598 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149871256 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11766422 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141168334 seconds)
  done (took 3.014739134 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104863163 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156909995 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277868316 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124310624 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080880871 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099273135 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127046222 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08637116 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087370437 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086750201 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.0874119 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083953402 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.106779479 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081085428 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082436061 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083203126 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.110467805 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081478765 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08229363 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082983079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108924056 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073805557 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080821785 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081011396 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084417526 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084015601 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073855104 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07411646 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082658752 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082207061 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084017227 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097567254 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084302269 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110085678 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079174441 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110224027 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084672475 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08060145 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082443635 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.08044793 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.084740858 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.084862736 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081344525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.084027629 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074025666 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084009308 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073567921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073677249 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084645008 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075118631 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084766261 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083693256 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109524109 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074897648 seconds)
  done (took 6.304881599 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113767546 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112697386 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078224559 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119938072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111149336 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076904829 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113297097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106033138 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.115952507 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077802464 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075579327 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077309536 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086299989 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089999261 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121945042 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113753748 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080367271 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077428095 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11535334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.11483242 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076791029 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108957752 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104447087 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.114915363 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075541762 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077208885 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076096094 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077201936 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083434567 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083904996 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075922499 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08566347 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.094292075 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083935763 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07476468 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075036112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0755915 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084418012 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085506713 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085629386 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084136342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075068816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075480616 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077673713 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076602285 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074893829 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084150888 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085498786 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084318154 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076386136 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077350443 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076055778 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076642394 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085129355 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083216147 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086537237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085702391 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076167197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075663822 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079119299 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086272865 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085476202 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085514764 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076632859 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085327421 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07836752 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087905103 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09063833 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076317417 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076791019 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075586163 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07548108 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076550451 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082668467 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082444624 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076744263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075657051 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075285722 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084820015 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083271177 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075042339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082412283 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07444029 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075124128 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076438688 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076479977 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.082897728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085008486 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077181085 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075362684 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07446776 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074489044 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073274182 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081618986 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082902846 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083135844 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082163647 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075382613 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082560682 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.215695775 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078949172 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.0858663 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077086385 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078134129 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077694256 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084340535 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083644564 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085414805 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076164021 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076089422 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084233645 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086950738 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076492482 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083714192 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08560939 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083819301 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074823974 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086977428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076890953 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085831887 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073800644 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086765367 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076021224 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084647048 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075886951 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075175622 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076340774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085003825 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077066417 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075359653 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076920572 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075803017 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084374995 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087428427 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077247505 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083856233 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083659636 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076781089 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084271837 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075700649 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084230771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076068533 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076978845 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074340119 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087525969 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07659119 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075968523 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075763712 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085974411 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074179841 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085614775 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083800698 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075451551 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09052665 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086589989 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083420876 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085815215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077500771 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075063101 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075832115 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075360551 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08307296 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085483004 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077716855 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075342993 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08319265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085507215 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075089851 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08366765 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083527566 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083673886 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076062362 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075771572 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086498622 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083711106 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.083863206 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.083931029 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08443494 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075753412 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082317216 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083730927 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075783458 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090047056 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075885067 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088185309 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08434367 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082404056 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0838015 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084708844 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084499287 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085827995 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088112196 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074535357 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074992182 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082497666 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07494193 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074274721 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081557548 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075843963 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075366668 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087104449 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.207528194 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08769342 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076707164 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086573624 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076436257 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07748144 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089729809 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077147885 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077467014 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084053388 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.079043817 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083958651 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087091801 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084056488 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076048195 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077877304 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085424937 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084778301 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076547511 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075751322 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076990645 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083849086 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082732175 seconds)
  done (took 20.077912248 seconds)
done (took 39.427499302 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203775056 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15406313 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.168461425 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119693637 seconds)
  done (took 2.030694888 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115090959 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10483518 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096517013 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073173439 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102543198 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072865306 seconds)
  done (took 1.896471752 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278392323 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197195867 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18242583 seconds)
  done (took 1.989099441 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206270643 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192144041 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.436228132 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.272682642 seconds)
  done (took 2.537054959 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145316989 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092989364 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073756274 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.091000941 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132579966 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162135473 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103228474 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128715565 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.086435806 seconds)
  done (took 2.395088662 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152141254 seconds)
done (took 12.334160598 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131387012 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097937312 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.107849892 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.120020335 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.079211855 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.247905695 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.246465769 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075632512 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.212014228 seconds)
    (10/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.201674545 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.08350493 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.233907355 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.174891589 seconds)
    (14/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.192303842 seconds)
    (15/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.20975363 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090365693 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.082043508 seconds)
    (18/309) benchmarking ("sort", BigInt, false)...
    done (took 0.202598105 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.152106506 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080466544 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.082154647 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081327807 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090176591 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080479723 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090073019 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072611106 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.180505786 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097333276 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205265932 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061278115 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208802884 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.077402674 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.407881806 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081530246 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072987965 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170373107 seconds)
    (37/309) benchmarking ("sort", Float32, false)...
    done (took 0.140215932 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081645884 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.193908323 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.107107334 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07189512 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.209570673 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080991336 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.189562406 seconds)
    (45/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.103356923 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100973874 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.163037699 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189053744 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09632766 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179714083 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.074704566 seconds)
    (52/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.081644541 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090435784 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099584607 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073072852 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081467956 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098450803 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071313255 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093120099 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072384662 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09542687 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084720607 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154966059 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.059049181 seconds)
    (65/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08351313 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05925798 seconds)
    (67/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082887757 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195701814 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073734182 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.099062103 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098996382 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086051235 seconds)
    (73/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104224196 seconds)
    (74/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.170636462 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153642855 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119422786 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.081757641 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09882358 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09439687 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072123615 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11376613 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095693217 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.364191983 seconds)
    (84/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.087662013 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195492832 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165001023 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.070835797 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183089808 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088133271 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077228496 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084420899 seconds)
    (92/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.097676663 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.159582262 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096030667 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.117757916 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07966148 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134053444 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.087181517 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073172282 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.059335306 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095510325 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188696318 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083717851 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073195945 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059803667 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08089395 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.081660247 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.129258734 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07714351 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061058773 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060056233 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07093904 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.082352692 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.072000771 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.073053569 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.123629764 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180621044 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079233349 seconds)
    (119/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082120623 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073199632 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.081144035 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073469456 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.079731834 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.059326236 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.152372246 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080107133 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094897151 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079659036 seconds)
    (129/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089568731 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05969303 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.08068356 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073526953 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07398254 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095523266 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082655058 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087397229 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05908122 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09636712 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156385041 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.124342618 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155541683 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073337815 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059518823 seconds)
    (144/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.071973559 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081387015 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075873077 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072692567 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.062022507 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14839062 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.120100972 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.071452875 seconds)
    (152/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059379883 seconds)
    (153/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156831308 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073102158 seconds)
    (155/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.123198686 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081434115 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154343768 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.059669763 seconds)
    (159/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076111048 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.060466491 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080843685 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085800171 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083123571 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.107966402 seconds)
    (165/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081487931 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097236233 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.059778157 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085134611 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 0.137432497 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081974341 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073160198 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154074179 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127574624 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.122194103 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059643295 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081421952 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072919322 seconds)
    (178/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161327675 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079168174 seconds)
    (180/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.075179915 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.154978929 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080190602 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149676395 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095971235 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094080385 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082389854 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18626507 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073519194 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184834703 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060552267 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.059372796 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.270244051 seconds)
    (193/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061873016 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.100860996 seconds)
    (195/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.127777895 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.082337595 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.098560741 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085880207 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119583877 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074549638 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07997029 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077446507 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.060141634 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080793326 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08821824 seconds)
    (206/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084566057 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05990635 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.060595432 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098953577 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.071034949 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.081032397 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.083294552 seconds)
    (213/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062212581 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148731426 seconds)
    (215/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.0747793 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.078658534 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123864976 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.061431271 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095900241 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080938381 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.073525944 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.059850552 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074472891 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.083805603 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082546727 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084682988 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061033726 seconds)
    (228/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.059371687 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059849145 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073289751 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074790211 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126343595 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.075020101 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087418216 seconds)
    (235/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.060871591 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.082172425 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097564589 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.126885174 seconds)
    (239/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06374655 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075918897 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073331678 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.127996454 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073008168 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059493666 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082166136 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072058462 seconds)
    (247/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079862633 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05955167 seconds)
    (249/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154114037 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.059785819 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076237814 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14796835 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07413087 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149962492 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146485063 seconds)
    (256/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.061316951 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177137242 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073716315 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.059655817 seconds)
    (260/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078005634 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074675991 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.111261717 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08916048 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075125181 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129794058 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.059890476 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060481603 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 0.154547172 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075784028 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155368769 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081827195 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10258699 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.071078215 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079912769 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081969727 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061102992 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139865346 seconds)
    (278/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.072092076 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.060926645 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06076445 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073317101 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079166595 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070784118 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.072878357 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109900629 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.059399501 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060838768 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071362799 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074034243 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18529001 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099227901 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.059650766 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074569918 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07997095 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101011334 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07250371 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084875962 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078986768 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080311803 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185485626 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060617873 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093194074 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062506637 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071859795 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072709564 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078364768 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140264888 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059454942 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112246985 seconds)
  done (took 33.109074299 seconds)
done (took 34.454879903 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093831798 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103918035 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.086751936 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.103783448 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.091140716 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087724292 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.083045803 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088136918 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.091494481 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.092506657 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.088820656 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.065049707 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.084027464 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083920205 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084214781 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100924097 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.089179795 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08266209 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083196959 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.074277044 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.083411494 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07477417 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076354842 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.064540617 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.088032579 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.081259131 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083952011 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.083681214 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074520961 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074776847 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078888272 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.083241751 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074232 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.088940006 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.08248948 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082617623 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.084409861 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.086457241 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.076393964 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.074849031 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.084290874 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074964498 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.082358397 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.083217302 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080971672 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080076719 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082200008 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086046566 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099972142 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077522246 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.084316396 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084870257 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.086464346 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.082239468 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078824687 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082904666 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079849864 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100100386 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082602386 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076968066 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083754544 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082599925 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07997912 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.082207496 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.082512356 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084937766 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.086336866 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080267256 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.08416336 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080592265 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073682663 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.082505631 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078468425 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074086081 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.085262459 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.089627636 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072919456 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080767105 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.082006326 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.082946455 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073781215 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076959766 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.076022376 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080925261 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076578009 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063899575 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078523578 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.081281469 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.073338351 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082394254 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.08159901 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081936895 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075822956 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.086008067 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073122554 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079407171 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074029871 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073751521 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075180835 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078484492 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07351402 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076123241 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.084718803 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075182954 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080371996 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08706231 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073298312 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080677151 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072891044 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.073258427 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087089847 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.084217842 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073538506 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076496264 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072154597 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.0803303 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072348514 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07320771 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072504856 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072687591 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079549288 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072720629 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075963039 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.221435043 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0912989 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.075817732 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.079807838 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.078684187 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.075190871 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.081140513 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.075677781 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074145743 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076390947 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07193254 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077800725 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074219669 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082184236 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076955127 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082524567 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075706749 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.083106496 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07958772 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080468945 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080888289 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072582892 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.068814863 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077299936 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076651658 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075671362 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.074254786 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075365852 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07341625 seconds)
done (took 13.843762532 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072850793 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141718679 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10166344 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102429429 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092602738 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.075506738 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08326841 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103678126 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07615417 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106822598 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096320638 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094440751 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118359534 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.073289998 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07454644 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07883922 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.076178461 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089013189 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104882267 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.096015576 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120726943 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.074433683 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099471573 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097339773 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.098376921 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.110086619 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075476215 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.078447258 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.078254273 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099596826 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097636979 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.077998131 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.075782585 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103860627 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101939362 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090104801 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.075050254 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090289848 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074989294 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073738031 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075801228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10421432 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088111837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088166187 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078697923 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084307363 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075777712 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090385762 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096241594 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086009708 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092848986 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106334168 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076957811 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091533384 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.07276939 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092440602 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084429298 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.077166674 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074785983 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082385437 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074761262 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077816553 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087630894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08731386 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078925419 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091331816 seconds)
  done (took 7.263968008 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089855443 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102471854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091113027 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.094815371 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073989073 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074078408 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074021042 seconds)
  done (took 2.038393597 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072962315 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095453338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096492027 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096221542 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088859681 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098208546 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084484569 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074519399 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100600742 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.076091595 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09519595 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106694761 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078301081 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.088202735 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097220749 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074564861 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097816031 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074515711 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077573932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096991672 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081155902 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105020802 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082186512 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075453212 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088139143 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074919984 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12131566 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078800803 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077006494 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077880617 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076038372 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.115160837 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087808994 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.085086329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07529979 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08979708 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088426014 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.078314396 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085984623 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08413215 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087924077 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075410507 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076054106 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.076633702 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079227355 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08448894 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076076678 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.079476454 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077764688 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094081537 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073673631 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087639626 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077426594 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080703728 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07645975 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081670904 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085468589 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075839036 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094175773 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076803608 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090639094 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089837718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08769969 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090210543 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077424703 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087374818 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088109007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077790446 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076707071 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078455613 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089748847 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073696391 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076463249 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084524534 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076455036 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097437541 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097125781 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076621593 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088582321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075818934 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07534936 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074965355 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096933468 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080442407 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074916772 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079364141 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078806322 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.078145639 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073925153 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078447828 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072534976 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.080599791 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077631121 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078198664 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077522602 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089642307 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077826373 seconds)
  done (took 9.564186847 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076272149 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.077069494 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07828238 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076416544 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.076415228 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076212346 seconds)
  done (took 1.922478285 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095213447 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07740751 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087768326 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079191765 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111775991 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.093678727 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.094543564 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085311879 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091122672 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086773608 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093521439 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095304968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098759075 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080461099 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094038848 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079415784 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095275984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082462704 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086423419 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080658492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093877043 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.08026887 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080611503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08860855 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083755101 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.080156607 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.087042399 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086614068 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086326134 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085313072 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.080056657 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083510748 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078503139 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085177018 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094303772 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07857383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079871151 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084994243 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079522129 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.086315911 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.094740178 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080152528 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081994049 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085273472 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.084865507 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078898359 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085419674 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087228649 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094472245 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084823129 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.084675984 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078783658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083240604 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084861513 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078382785 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084920839 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084599459 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094121335 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080369117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078563094 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076707637 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083323345 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084419586 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083875892 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085374508 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084995129 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078239591 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079991454 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080372609 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079446361 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085253116 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076570776 seconds)
  done (took 7.572039998 seconds)
done (took 29.786417879 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545923216 seconds)
  done (took 1.96049443 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612426887 seconds)
  done (took 2.057152626 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.511167588 seconds)
  done (took 7.948725249 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.370235916 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480601894 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.727152394 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139129124 seconds)
  done (took 3.195610512 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728733998 seconds)
  done (took 2.176646727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241425251 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237417632 seconds)
  done (took 1.938131054 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383086418 seconds)
  done (took 1.824151691 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.131552138 seconds)
  done (took 2.574165782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242036387 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185295963 seconds)
  done (took 1.870857356 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45205917 seconds)
  done (took 1.896042586 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.924387935 seconds)
  done (took 6.37081378 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224458383 seconds)
  done (took 1.712677652 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242453688 seconds)
  done (took 1.68737384 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.742013874 seconds)
  done (took 3.18662103 seconds)
done (took 41.85572226 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089611962 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.094322923 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.094542906 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090061498 seconds)
  done (took 1.793730981 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083917329 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.08119986 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.084050067 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.080637107 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084157146 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080430719 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082159043 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083471832 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081763221 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081608462 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081504592 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081470613 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083535025 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082638448 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079755927 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083533243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083946647 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.08089986 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083848777 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.081106166 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.079182094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08330723 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083879727 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080707906 seconds)
  done (took 3.421111084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084690246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081016879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083682168 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080089536 seconds)
  done (took 1.780833555 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08415221 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098379874 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095919216 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087020116 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098734963 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.093897797 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.077245307 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077853498 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078715056 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086416832 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076569188 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103705086 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096205156 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086724148 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.089321037 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073354406 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075938444 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09524153 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087313384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087391115 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078981837 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.087263176 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076517942 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.097701668 seconds)
  done (took 3.538507552 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091475233 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109566216 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08904412 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.099104928 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100684239 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073929768 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095026177 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.101145553 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135629458 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.074103312 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079696133 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074610205 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082708238 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073598652 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089552342 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.119774906 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120591738 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077520959 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106601146 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07394586 seconds)
  done (took 3.32830071 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07832161 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077155709 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.078839196 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073425082 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085351801 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.080612193 seconds)
  done (took 1.925843838 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073887672 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07567608 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075471806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075221541 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080087833 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075403178 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074096081 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075516784 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075819353 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075661958 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075346068 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074722703 seconds)
  done (took 2.356168851 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189727402 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.077480116 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.078930266 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074274346 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078736299 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.075076918 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089820423 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07621798 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.102181752 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.075264328 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074980395 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07740921 seconds)
  done (took 2.520277575 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197897671 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083527597 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234953964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159174259 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115565663 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120502495 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119402645 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11868275 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144135218 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106282543 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167634255 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167748063 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114099438 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143177077 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097890339 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.111196142 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155342148 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168889536 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113249423 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169551561 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148163694 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133664081 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151565375 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109039346 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112551149 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125824817 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07957262 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088046485 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170224618 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1370238 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14728548 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118085607 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103601818 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175134658 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164881279 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143111282 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153073265 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091719694 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111268542 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138268846 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197854909 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09601015 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307931756 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11889644 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089381973 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139018076 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125277976 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127699779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111222886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097872301 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147978475 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18394561 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138586026 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094055532 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130286309 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118088147 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118312785 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120545214 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178812982 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161747047 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13390346 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079917091 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118088187 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153981011 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138551285 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114541745 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129534848 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10134159 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139126817 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158372252 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128188795 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146589265 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12436706 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095985367 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127280139 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142705759 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132752995 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164653882 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13042639 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081282437 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126763189 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105995851 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088513288 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152225281 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083060137 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174930811 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107147159 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111311347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129825002 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11437281 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114828974 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154198007 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291397691 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112769061 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.076966618 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11368084 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124158213 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150071908 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096535082 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11497353 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122603135 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085798145 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138099221 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.084503279 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127435726 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.086406334 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130404715 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135697187 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086339888 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128542328 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111273337 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109395445 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13592921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161095201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095895108 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089189678 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167131146 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128527762 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109824958 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145492409 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159277469 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.110918704 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106306493 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151148113 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171501442 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097962126 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166344356 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11211149 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092064401 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.096067952 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129233617 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11789137 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.130034967 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088740022 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123032336 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166810459 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082672742 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101650445 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139546806 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086640468 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088091792 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111986376 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110531801 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104688695 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.105398984 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107996565 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137777816 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277371436 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117151389 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131906865 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106788259 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168081941 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096461425 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.112217627 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112783133 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078542422 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136963292 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158222254 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088187643 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160204505 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128837905 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123571251 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126068338 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092011481 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141926469 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08725661 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078471801 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144471361 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117898862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1141365 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152324722 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122430593 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12940531 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124365474 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134366674 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133498957 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134261931 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113717543 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096810549 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119794502 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133164924 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081793842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097485906 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087770615 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112054275 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100781202 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091914506 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145377799 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127170319 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118546532 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118486703 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10326777 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148403491 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083758219 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130796354 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125458286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1028728 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154349359 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153474606 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135228836 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254474002 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142479102 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.080520711 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083899847 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095620226 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126887652 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091970921 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091975967 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120812886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149114611 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133326834 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139973705 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129175438 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124466742 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157722438 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.078538328 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12708811 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147252099 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127366372 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.112765011 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099012917 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.107040331 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145558061 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111667826 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177200194 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121632449 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131740429 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159860074 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.110809708 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088024638 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110672802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137188449 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10985461 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144984357 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106050481 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096331069 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115407368 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086794618 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104936102 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132250394 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124100178 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139330326 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118786422 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137138477 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086352029 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119277382 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127281442 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125885571 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.073414753 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12364131 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159379242 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102094825 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270941801 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156173244 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089053577 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.14480712 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172205292 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149114926 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09298627 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113521023 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126819027 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131427931 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125471203 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141090366 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112408116 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142109631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117684422 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.094271047 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09537557 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104541302 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111457059 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103032293 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108130371 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119587407 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104088324 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136633402 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111825367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118044807 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125097993 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10787147 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.101225332 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104651148 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177907763 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124971274 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171501324 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.108371985 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14610051 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163850671 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084048558 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087555799 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086560786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140560398 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092571177 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135397481 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117070141 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122694399 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1280956 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140510048 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099418131 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076889577 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114374094 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13645571 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129266437 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104770104 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108448807 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157414077 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.250758506 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088946326 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119479495 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124213339 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112315527 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168901229 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.071871547 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11480689 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085121067 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088496016 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130244271 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152588944 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088616612 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107376822 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12594677 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118509832 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130880252 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105476587 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119762753 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130799411 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149271962 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132296463 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.097771504 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116046891 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129955207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157200383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110025025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104903668 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174948332 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154713913 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160771887 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09402782 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120973881 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120949874 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11615298 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140034436 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092411066 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164200508 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090574556 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140072879 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108093182 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094991475 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132562032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117843791 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095276124 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147404834 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122283841 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090683493 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085515238 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121209408 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124039181 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10897562 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.231798332 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143930065 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.083846079 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138738365 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161057537 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089997505 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112768579 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103784496 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089508962 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112735661 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109683735 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094880478 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107986875 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169549102 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092983442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149808603 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137038913 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117437508 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138586695 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11008682 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647672914 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08537291 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15238519 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121377169 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171740305 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108245999 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124395821 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116084434 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126293355 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146825857 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109272965 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18633702 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136381059 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122307046 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087370267 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109905948 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111673514 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09501547 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115073288 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121139092 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121711983 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.099731347 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119207817 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127377585 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090498898 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103594661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156887457 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121002825 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147319923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141761338 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091979602 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270705452 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141922739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089130796 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124981294 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151697586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114089519 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107636123 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089246471 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106112279 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159719405 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082267315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159415927 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127331295 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116590657 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120499694 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114765362 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132993308 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111279115 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144826615 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09903524 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.114647846 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120041532 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089564985 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08570814 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113073806 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117088825 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.107044129 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104090205 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.108188192 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152871327 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.081241304 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106189387 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123021586 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146099736 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174603136 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.097549561 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091568333 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125953363 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1216602 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117503432 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127985742 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087646574 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089663467 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.089199546 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.090856772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115101367 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119335841 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120318463 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115591738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159519775 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090331606 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232520169 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102330413 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111105281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078909644 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08516008 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252384189 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106277664 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113691954 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120495338 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162025993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.104482123 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.098431343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099019502 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.084180264 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092000822 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131426197 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115233946 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124260513 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108169794 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.073051024 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112950352 seconds)
  done (took 61.642967785 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11619757 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087797848 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.106025237 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150440181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127133666 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205088414 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161873559 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194767312 seconds)
  done (took 2.697217407 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07649893 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104051897 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.112671708 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.09328527 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.075660824 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.078540174 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234776719 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.091635306 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075227714 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102307375 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.090178022 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.079683768 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426050745 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074557829 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.078105196 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073470879 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.076831448 seconds)
  done (took 3.480526258 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397365241 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.624950447 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351464849 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.087400409 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.96430754 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.101201463 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151063496 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.144869968 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085571017 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534301234 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.419703247 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136556112 seconds)
  done (took 18.546629801 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09191262 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.084870611 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.097792847 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.098076703 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087189987 seconds)
  done (took 2.007156283 seconds)
done (took 110.538145488 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.091167636 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432194778 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064034841 seconds)
  done (took 2.074594555 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094596908 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09380817 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093699849 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090928394 seconds)
  done (took 1.924456342 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082850563 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.085188718 seconds)
  done (took 1.712216371 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235131081 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177477366 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.106368851 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089091855 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.089124136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08897966 seconds)
  done (took 1.815593946 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077809138 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08355159 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.080903975 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084817922 seconds)
  done (took 1.871805267 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082516594 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060820815 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062685012 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065909063 seconds)
  done (took 1.818123648 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093091048 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.090992275 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087289119 seconds)
  done (took 1.817234394 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105109691 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095656531 seconds)
  done (took 1.745784659 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086598635 seconds)
  done (took 1.632911291 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100251798 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107595805 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136647003 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116956476 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144054888 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115150974 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.09240143 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092778758 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.085134865 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094038621 seconds)
  done (took 2.630234651 seconds)
done (took 21.203026927 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083966248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373249137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36891973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099198601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678792232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365241755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.979609878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102558433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150760901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07678418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094456198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.659077276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969443912 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333655296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957205268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333081706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.660064043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078213628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078206397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078017741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965801683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077774749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078160489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078773167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.658282514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.383021733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07828834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332558795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078040942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080387067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.366052729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097051705 seconds)
  done (took 16.320855156 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076340869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129108556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082659223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094341358 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.079826592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078607698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.080906762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078790531 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130966581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077730322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095671165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.078012566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.081405529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078571697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098025235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078487001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.079368842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078519659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.081136355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078615036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097943885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07801022 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078274229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078562587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078329181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090613423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.079473861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078560843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078716285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080674316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080564815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077322206 seconds)
  done (took 4.273186727 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123683464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.134616092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082455978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115160732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121880002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.079875409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154390046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103747312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138681844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078214826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095799377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.078316427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112105871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.079430129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098887657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078853059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07943121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078860446 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078973683 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078649395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.098188011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.078084323 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078649628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079638444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078644974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.092981662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078647331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078990327 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078487703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080551624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.081779987 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.079240095 seconds)
  done (took 4.534646716 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078613287 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.08360831 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090936522 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.092225376 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07815426 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080558809 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.082020335 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07830268 seconds)
  done (took 2.228737155 seconds)
done (took 28.911219058 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084694077 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077809708 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081619202 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.097059659 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082451387 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085949218 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075462172 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.085401506 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.083112019 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.083277722 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08431548 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.076697653 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.081427634 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.076283398 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.08349698 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.077027403 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087841638 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.081249654 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.088290231 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088143594 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.079822458 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.082211907 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084959878 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087286045 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087627349 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.087087657 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085759834 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.082335769 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07786372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.08001683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.086195078 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.094089132 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076971522 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086724129 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076346682 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076993497 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080518471 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076594611 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087413643 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085118352 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078474662 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.086049258 seconds)
  done (took 5.023381022 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094224731 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102324106 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094801256 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071734756 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0779086 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.074859515 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.099735709 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.070011719 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.069927846 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.099413148 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.066762694 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.069535005 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072897672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063915287 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.070487078 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.067639284 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.071722164 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.065611386 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.070055643 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06961376 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.099856942 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.064188784 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085839189 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.072964121 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.066228381 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.072159059 seconds)
  done (took 3.574252224 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081970077 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.09239373 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100125631 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15353625 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.120579104 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086640211 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087489361 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101662379 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103310281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075632763 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.080263958 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.105513582 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096926187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083294731 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076405323 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093477787 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.094117074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077819546 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.08204147 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100938573 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095054105 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.095184587 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100572454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.092879502 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075905479 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078924697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080270172 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090631207 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078888482 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085861315 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079158239 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.079835547 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078687569 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088165375 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078969847 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07800925 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103306475 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087209951 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.087610931 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07748178 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084482898 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077560731 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100777328 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133677078 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07559324 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.082151062 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079986626 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.087345789 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.076071106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103561202 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088419258 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.076331559 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079668831 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07515427 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.076094095 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079161075 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07795985 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078533253 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085111084 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081938826 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101145695 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081304665 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.093504871 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.076288489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.085341363 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075812757 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.077067669 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.075205901 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10166865 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078465654 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117797487 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077768493 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077063379 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085700557 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.087015405 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083214048 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.076291944 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092769909 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087104363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079777409 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085136522 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07965202 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079070547 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105788445 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07872045 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.078362946 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077214324 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081862848 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079005926 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.077421584 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089509702 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07596524 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079206458 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.093852887 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.076247281 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077703571 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082419894 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080559854 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075346868 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088023095 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07985269 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076794983 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08606004 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07583111 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078939445 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088529641 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082785901 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.075420068 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080411221 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081210889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076804259 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077607909 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078089774 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07764144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084882035 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082648578 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080274751 seconds)
  done (took 11.59110067 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173162049 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163872816 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080945533 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156620474 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.088069961 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.087914601 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158363618 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10313046 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.077166237 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.078661315 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077901111 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118098684 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112922944 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.125958435 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087495186 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076880884 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.099695694 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122249837 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1583489 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154383891 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.099952371 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085670822 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079071513 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078029937 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078937953 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.086817989 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09628784 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086389571 seconds)
  done (took 4.608589709 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087710437 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112378829 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.08382297 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100290595 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098510962 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.077240807 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078643395 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078576036 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.094399558 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086498058 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076521425 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081650075 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082871415 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07984782 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077712269 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083829582 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083708638 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07788773 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.080130337 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081694315 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087044688 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100066946 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080289177 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.078199309 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081919097 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075933093 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071785392 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091925659 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077108826 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102333602 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074351916 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081596547 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091817742 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077729497 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076855744 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076649376 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076675727 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076657762 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078590385 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075409656 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075454001 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06682536 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075680534 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087519319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.091018743 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065458849 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081763489 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081917567 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081882835 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.074182343 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079629254 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.079381809 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07962414 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084246103 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.08119058 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082136589 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078208316 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08608798 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.084716529 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.078132222 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073285874 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.075209161 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.081425877 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073260452 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.091996079 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081661751 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07542281 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076541057 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078564803 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.090086975 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076447411 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081994525 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074068856 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078882899 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081389991 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078339442 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.078040582 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075458844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076959083 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.077083367 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063967892 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076945672 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062153213 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079677019 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0747473 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.075278093 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076539156 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.08129334 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087388165 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07839343 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082394955 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077758414 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075783305 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079218954 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068914815 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079930659 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087494819 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090403675 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076868141 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074376083 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.09000392 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081515371 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075993377 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.066315558 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080582304 seconds)
  done (took 10.048064718 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098059237 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078901047 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091193534 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09900389 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095849295 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083811773 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087642915 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078031512 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093972402 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.083608195 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086489294 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077144877 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.088245997 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.087696597 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079101608 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087684331 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080910685 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092738453 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092296186 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.077873708 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.086050346 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089751179 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098971434 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0897736 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088368178 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090412487 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098617462 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086661843 seconds)
  done (took 4.083874041 seconds)
done (took 40.488714602 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.676393655 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.820202275 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.647494746 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.962456981 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.800325643 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.666962968 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.811329445 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.63943052 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.861736328 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.681535441 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.947513973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.710120713 seconds)
done (took 63.929351102 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.673041135 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.778946769 seconds)
    (2/2) benchmarking "String"...
    done (took 1.874359346 seconds)
  done (took 5.217193765 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.946540278 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.220773855 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.887714054 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.640303725 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.644181894 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.952876168 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.445223307 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.154908049 seconds)
  done (took 29.512674224 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.858664 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.87248903 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.362564844 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.394691727 seconds)
  done (took 15.108875305 seconds)
done (took 61.118521131 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.64718271 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.66938101 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.640522914 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.619151667 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.692385135 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.643645569 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.759935042 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.865975291 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.631229366 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.621883889 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.633040382 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.049005962 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.634473067 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.748836492 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.630422796 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.641319283 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.665012097 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.083921089 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.780986122 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.64389153 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.643113507 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.647870814 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.630901395 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.631673093 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.678525222 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.624897151 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.005854707 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.633728567 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.238486139 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.626096718 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.652301163 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.922875094 seconds)
  done (took 199.799727026 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.624417298 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.479815179 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.552352322 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.652631572 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.01838856 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.799131593 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.725575352 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.067504624 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.623688644 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.64797023 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.795838271 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.619436604 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.827522719 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.644590985 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.651241419 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.708808374 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.792429255 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.836543371 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.653134913 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.792452397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.630880048 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.623245905 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.591977772 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.779040773 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.626306933 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.688681055 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.790927291 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.657801148 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.819928755 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.761168249 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.655061811 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.626492878 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.851911991 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.497151491 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.651236136 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.650983468 seconds)
  done (took 163.96822834 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.816347706 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.627040234 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.626519177 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.623745294 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.637866715 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.624406657 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.748903696 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.75053461 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.266944015 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.106074192 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.680205582 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.624013644 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433366304 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.622542028 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.694605707 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.63408501 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.624671961 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.639692041 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.650592354 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.621985382 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.626007316 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.75183561 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.619288992 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.636936999 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.627574152 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.624227247 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.632853357 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.994280279 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.620456842 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.625205964 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.715474915 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.622239085 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.62954464 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.880041798 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.624397406 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.623587329 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.47229078 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.726741186 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.708387504 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.623194717 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.630578433 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.624235158 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.842606645 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.623076572 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.625443856 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.626595189 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.624681177 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.628855002 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.75852729 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.624133746 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.747624018 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.627522983 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.10234183 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.62277616 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.626033589 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.43601589 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.217307035 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.626614788 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.631190381 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.62630956 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.625797372 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.630492049 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.336390751 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.698347277 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.626630068 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.627990216 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.631548499 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.624789672 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.870306423 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.622388973 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.256606521 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.683609262 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.839032618 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.747284528 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.627639651 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.692217752 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.716672697 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.623884625 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.626923914 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.626287832 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.627038579 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.625255908 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.709025899 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.625642959 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.626182445 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.759598473 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.632751047 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.630313201 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.678262682 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.694400583 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.624973022 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.487528207 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.629076949 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.627745461 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885515263 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.690974552 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.626500326 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.626723497 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.753347736 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.748141804 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.342257809 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.628754246 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.282657484 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.765139033 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.626134643 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.773760525 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.631359745 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.708954345 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.631284312 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.630711278 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.660351227 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.629755353 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.683685151 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.629934127 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.002580327 seconds)
  done (took 385.731905534 seconds)
done (took 752.944639214 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.231061069 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.196696376 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.287535045 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.21048964 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.182766653 seconds)
  done (took 12.663017094 seconds)
done (took 14.215919881 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.717225651 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.720724841 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.651787721 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.721550511 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.647841053 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.719937607 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.701211223 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.652881427 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.685808205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.653699403 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.68796164 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.65440913 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.64040542 seconds)
  done (took 23.407132615 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.871064064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.862682617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.700956051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.868208578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.674372686 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.863430603 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.79129388 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782054083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.780012029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.647255032 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.641101601 seconds)
  done (took 21.035816024 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.868560841 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.876135454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.705853704 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.864247035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.678937907 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.878918066 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.796910819 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.782701681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.783660603 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.643344304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.642290931 seconds)
  done (took 21.074607518 seconds)
done (took 67.073495521 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.637195843 seconds)
  done (took 3.190748844 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.666484371 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.831736131 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.64406691 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.642706106 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.640724813 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.641036277 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.64385144 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.63959825 seconds)
  done (took 14.906377554 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.640089288 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.639072135 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.638701735 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.641637879 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.637589193 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.63674231 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.639010003 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.640182676 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.639298854 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.641160157 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.641264006 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.640705868 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.640891592 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.641196738 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.639083272 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.638301018 seconds)
  done (took 27.794830415 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.638715298 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.641808749 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.638427799 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.639063849 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.639869648 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.638803468 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.639944581 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.64115646 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.638011136 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.636971966 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.641640337 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.638569593 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.639886 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.639376182 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.637645349 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.640604399 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.639208485 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.639558083 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.645338566 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.639679354 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.638090677 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.63801969 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.639073969 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.639986978 seconds)
  done (took 40.91319321 seconds)
done (took 88.359718709 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.451010441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.375878858 seconds)
  done (took 9.388242161 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.640753642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.641629799 seconds)
  done (took 4.847098999 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.640487321 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.643782456 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.643201296 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.643831821 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.640215251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.640579655 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.640916999 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.640168761 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.641396059 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.642450783 seconds)
  done (took 17.979164915 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.639648421 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.641687875 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.640128676 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.641639784 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.643268202 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.636914146 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.641035491 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.642110145 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.641714695 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.639486578 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.641365981 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.639624691 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.641839928 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.638163966 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.640967146 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.636932239 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.639024503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.639344001 seconds)
  done (took 31.083132693 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.642311888 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.641650561 seconds)
  done (took 4.843272888 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.638097185 seconds)
    (2/7) benchmarking "second"...
    done (took 1.640485435 seconds)
    (3/7) benchmarking "month"...
    done (took 1.638106812 seconds)
    (4/7) benchmarking "year"...
    done (took 1.6385745 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.638497086 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.63806168 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.640987126 seconds)
  done (took 13.031400947 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.643294777 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.780628768 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.844017957 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.28400898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.643366584 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.647639036 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.613834595 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.64601079 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.647165743 seconds)
  done (took 18.308936315 seconds)
done (took 101.043757962 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.501052777 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.635602136 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.882614943 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.693551865 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.674938203 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.935726069 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.678416991 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.906785546 seconds)
done (took 41.470419385 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.707462559 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.328706141 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.559749901 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.669337511 seconds)
  done (took 15.117152798 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.623358312 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.044078273 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.645232638 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.489289365 seconds)
  done (took 21.367131531 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.005339612 seconds)
    (2/2) benchmarking "read"...
    done (took 1.993393773 seconds)
  done (took 5.563491873 seconds)
done (took 50.318629693 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.643834813 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.643616132 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.646845955 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.641465415 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.644939697 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.64069187 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.640370286 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.647004246 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.645309457 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.644439768 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.646058777 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.646243121 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.640976182 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.642910373 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.642367436 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.646474923 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.643543039 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.640736407 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.643301845 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.64643095 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.643909807 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.644982408 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.6443752 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.643251754 seconds)
  done (took 41.012636222 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.64311394 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.644321561 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.646974813 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.648645435 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.64168268 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.644675203 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.645116168 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.642902803 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.64608813 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.64962044 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.643848651 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.646387867 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.646157295 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.646653726 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.646384429 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.64669556 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.648281667 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.64449571 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.647334052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.643966 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.649640816 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.645041088 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.645796132 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.646413008 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.644853914 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.645939364 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.646816541 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.646509576 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.647088987 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.645365515 seconds)
  done (took 50.941297439 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.653065646 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.656874425 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.649424055 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.648021252 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.650101828 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.649066813 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.648626799 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.649465779 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.648627061 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.649274558 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.647433378 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.647853589 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.64949951 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.649591158 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.64800554 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.647155172 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.649369297 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.649132887 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.647846101 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.648637263 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.65023768 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.649032081 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.649710871 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.650378697 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.650071108 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.650669465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.650262082 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.649870863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.650248885 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.648529727 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.6506184 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.64719308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.646689485 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.650845129 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.651942325 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.650525251 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.653472211 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.657837461 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.648102775 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.65252375 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.652887485 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.648924478 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.64909053 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.64784826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.650245183 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.651987434 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.65104994 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.651597655 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.650964083 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.651722705 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.650874479 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.649322787 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.650180352 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.650213819 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.651027943 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.649308968 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.648386523 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.649046568 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.651199438 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.649222244 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.651803041 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.648646321 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.649336614 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.652073749 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.65020291 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.651556808 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.651896824 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.650785254 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.649586248 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.651106882 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.648773601 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.650152519 seconds)
  done (took 120.374594172 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.650080222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.651453504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.648734488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.646463092 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.650524796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.650414788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.647012291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.650498779 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.649304125 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.652109427 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.653814819 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.650146 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.650022667 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.649841705 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.652916728 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.649424861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.651900419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.650488522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.653952221 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.654575001 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.651854577 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.650509492 seconds)
  done (took 37.886274732 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.651382207 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.653907535 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.649003287 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.65363829 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.650491393 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.653508528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.651962841 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.654027364 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.653321345 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.65175825 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.650197494 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.650792086 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.649690421 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.648016722 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.650770441 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.650845102 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.654881526 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.649605001 seconds)
  done (took 31.297557027 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.651289762 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.650818917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.653444952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.652055778 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.649728536 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.653499858 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.651591512 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.653968053 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.654045747 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.651640793 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.65281967 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.652326736 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.653900987 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.653467714 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.654104529 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.651096375 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.65392875 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.652535455 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.654512112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.651974377 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.650816986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.657426444 seconds)
  done (took 37.930404994 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.653781813 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.655435642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.653270527 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.652464903 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.652617601 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.6560706 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.655484003 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.65146587 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.654586063 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.65561076 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.654103669 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.65551886 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.6526402 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.652912321 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.653584246 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.652672884 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.655035734 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.654369262 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.654855811 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.653512461 seconds)
  done (took 34.653070239 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.657142357 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.658831295 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.657420441 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.657137582 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.656697268 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.655647039 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.658059766 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.658972798 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.65539154 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.65808138 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.653611406 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.657789973 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.65684906 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.654648874 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.659588367 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.659131799 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.656566565 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.656968098 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.656663732 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.657361354 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.658345021 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.655964514 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.655687305 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.658171979 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.656879425 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.65658298 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.658112752 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.658135981 seconds)
  done (took 47.97474916 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.655968174 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.656606696 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.655442857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.65295106 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.653956735 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.653288439 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.653369292 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.653913744 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.65678308 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.657772162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.65736298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.65508536 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.655867722 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.657208215 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.655892029 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.658547111 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656361907 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.654282477 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.655287308 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656097456 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.656061066 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.657351183 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.656189364 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.655290532 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.654669401 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.655304431 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.656051897 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.655731199 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.656788991 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.655774917 seconds)
  done (took 51.245888549 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.676899058 seconds)
    (2/2) benchmarking "in"...
    done (took 1.677940233 seconds)
  done (took 4.929172156 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.654237608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.655991368 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.65819705 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.652972411 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.656275439 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.657433532 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.656138001 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.655725337 seconds)
  done (took 14.821915404 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.655988994 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.656276225 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.661461712 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.65795038 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.657197357 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.655420968 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.664793783 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.657968695 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.660507799 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.659031898 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.665953393 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.667860908 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.659424145 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.658558971 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.659593382 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.65948032 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.6585967 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.659536909 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.658494001 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.658619204 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.659675659 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.660348308 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.663418528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.655614447 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.660326102 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.667766006 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.665152939 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.660531301 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.662654093 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.660830476 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.659702307 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.654685066 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.662745634 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.660191071 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.657716448 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.662541773 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.668584917 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.661374688 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.666620448 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.661819543 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.660190521 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.656409259 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.662073843 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.6616593 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.665355341 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.659886064 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.660959026 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.656774321 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.659632203 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.664039661 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.66574293 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.660531835 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.658372703 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.666080025 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.662249122 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.668989626 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.662864075 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.663357189 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.67150998 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.671785662 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.6746204 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.669554579 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.663101831 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.662702368 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.670655781 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.686999162 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.670808986 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.657725171 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.65999646 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.659879617 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.669676115 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.674094947 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.672576061 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.663487971 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.664949047 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.660476731 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.663524291 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.661581394 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.669038306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.665042374 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.664544527 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.663153827 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.670747288 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.686814361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.662657408 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.660459262 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.663646637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.662697649 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.662357443 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.674938775 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.666747947 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.662724932 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.66267743 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.663564004 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.663647423 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.664303014 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.663786794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.663967005 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.660619569 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.663535688 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.664977009 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.668483053 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.674406595 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.665416502 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.666187401 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.671686649 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.664957229 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.664371162 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.672568808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.662456733 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.666434013 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.666076869 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.671718877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.661928581 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.665620389 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.673789434 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.666849193 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.665579884 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.665134403 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.66427471 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.675130484 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.691271952 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.665291323 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.66488232 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.670509223 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.675467886 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.666598506 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.665265102 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.66644143 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.659451688 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.661539102 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.666276031 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.663989732 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.665058653 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.665558504 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.667542313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.663317864 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.664560397 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.665518189 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.666974466 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.667353336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.666173007 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.666029412 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.666715744 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.666535743 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.666474101 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.672194192 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.66556571 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.667487258 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.663227923 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.661006901 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.661991925 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.666085919 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.666787108 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.665269672 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.666775253 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.665928569 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.666715691 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.666088376 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.664947133 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.667243977 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.667838669 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.669805502 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.665925012 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.670192441 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.664974607 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.66171226 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.665776339 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.664414987 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.665784159 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.66737387 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.66388241 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.669794162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.675232519 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.664394423 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.667437618 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.668744126 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.666089764 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.666970151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.666375343 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.669434363 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.674966948 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.66674431 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.673465855 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.666982295 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.666441062 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.665100586 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.664590935 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.665814972 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.666133134 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.667077571 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.672585571 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.678459396 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.677085217 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.667399705 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.670159121 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.669216808 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.670712482 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.671301264 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.668694304 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.667381054 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.668472605 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.665054208 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.666764939 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.668351564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.667928813 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.667969376 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.667053538 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.669006628 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.666781679 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.66829255 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.667950647 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.66920413 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.664106669 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.667763032 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.667655058 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.667996225 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.665746611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.669546353 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.669509158 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.668076657 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.671427706 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.675468785 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.665045223 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.669906963 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.66993279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.668977496 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.666842638 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.669660895 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.671038915 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.670533812 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.675693901 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.668501567 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.671417574 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.678966595 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.671014366 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.670110607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.672555524 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.669061918 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.665517617 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.672805034 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.676819632 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.670635203 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.670788458 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.670110836 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.670449837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.671487091 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.673869705 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.66789778 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.669922014 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.667357944 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.672186133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.6681695 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.669889253 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.670583574 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.670627383 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.672692972 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.669272174 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.672282716 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.672199399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.671476434 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.670893127 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.668397089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.674638185 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.677462835 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.675864579 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.671623553 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.673305313 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.671420356 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.675505878 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.670858018 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.671394898 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.672461953 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.683697818 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.67917086 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.677501038 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.674402472 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.67014795 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.67597081 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.674655018 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.674467448 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.67130655 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.673491944 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.672218154 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.668932725 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.666909395 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.673914722 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.672616961 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.673097502 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.672435301 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.673900069 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.67278157 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.671028697 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.674966053 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.672617302 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.669444142 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.670918516 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.67171532 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.67303371 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.674683223 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.671608277 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.67068809 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.678812497 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.673176356 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.673105491 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.671558571 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.670476043 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.672408601 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.674335478 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.671915079 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.675897771 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.682359976 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.674955528 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.682026632 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.674175108 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.681892596 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.672469746 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.674885296 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.680631695 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.669204748 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.673853416 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.673875487 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.672718521 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.681947075 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.675164256 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.674118398 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.67754314 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.673588256 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.674404835 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.673490583 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.67546618 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.674754092 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.671894947 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.681638739 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.673477305 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.680222495 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.674690422 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.672353331 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.675359946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.673255858 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.67288141 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.678182893 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.676050283 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.675310705 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.674283301 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.673248307 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.674540171 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.674194794 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.675630982 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.670849671 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.674930309 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.680615975 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.677936241 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.68026371 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.672743893 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.683008171 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.674360575 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.682104887 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.677915891 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.673534072 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.676390286 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.676132724 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.675273959 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.674032465 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.676333112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.677214328 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.678291047 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.67943875 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.678464069 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.678779799 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.676050281 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.676439345 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.676047764 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.685941508 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.700524807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.679170868 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.680582103 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.67287335 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.679025632 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.682014873 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.678048396 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.673999217 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.676019504 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.689090511 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.684429265 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.67573595 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.674076322 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.676565772 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.677421859 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.675959932 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.675509048 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.677568711 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.675604794 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.67583307 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.678192002 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.680462073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.67489333 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.675803796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.678457197 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.677665796 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.690162744 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.67613362 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.678576341 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.677771555 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.677465088 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.679511682 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.677528701 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.679020793 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.678008925 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.678394612 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.678610766 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.685893819 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.686037608 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.681712509 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.678972294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.678538763 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.680161091 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.680335916 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.678639007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.679678066 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.677983542 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.676967682 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.677728609 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.676347815 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.677855601 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.676437102 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.678680485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.679617191 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.683148752 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.686260356 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.678409109 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.673038307 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.675082392 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.676532472 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.678849906 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.679869166 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.6867774 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.682924205 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.690133056 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.68706173 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.684252437 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.681306417 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.683163809 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.688799251 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.677882355 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.680384345 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.679093964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.680356285 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.680237302 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.683084875 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.680440935 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.68569933 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.679986312 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.678301742 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.687802955 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.680978693 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.680126089 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.68313838 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.685514893 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.681676464 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.677268954 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.680599464 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.681355031 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.687059115 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.683147447 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.681648027 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.682069471 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.680791543 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.681664844 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.685695834 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.68015892 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.680399329 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.676293233 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.684009757 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.68126235 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.681027136 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.676250833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.681834499 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.680398943 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.683140641 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.689854317 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.679509962 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.683149927 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.680329334 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.682143114 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.682378475 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.678514731 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.678977125 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.677831101 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.680408998 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.679352155 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.681580911 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.68433955 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.680221559 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.683286289 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.684127556 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.68304801 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.684402929 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.69352059 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.690150119 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.678700867 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.684224441 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.684176689 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.684869732 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.685101796 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.683968197 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.682102294 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.685894006 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.682800558 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.681288491 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.68226249 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.685704275 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.700631665 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.684193974 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.682616567 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.684492177 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.689067194 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.682455093 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.680896857 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.682585779 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.687407167 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.685683776 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.691652214 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.684968571 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.691759673 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.684766489 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.685240994 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.686941416 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.686880119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.694318217 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.688498439 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.683319574 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.685492393 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.68871104 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.70267268 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.683635172 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.694417361 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.7146523 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.685761985 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.686921973 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.686454279 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.682727204 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.683295376 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.685347512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.684728503 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.683153985 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.685472135 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.686154192 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.686376856 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.692086725 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.688194681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.683011752 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.685202938 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.686320679 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.685598313 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.678969756 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.685067802 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.685049966 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.687668209 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.684705074 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.686455227 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.685857677 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.697583209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.695208815 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.682302722 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.68601249 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.680641735 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.689039326 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.690148626 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.697041992 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.692622292 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.686305043 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.686929363 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.685588771 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.684809215 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.682845657 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.686659651 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.686649058 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.687351906 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.68358624 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.699212213 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.695270312 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.691686315 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.688755832 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.688347124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.687545878 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.686399498 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.68823089 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.686559755 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.68796387 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.687786815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.691817162 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.686323895 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.686776128 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.690374521 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.694538977 seconds)
  done (took 999.536825507 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.680247744 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683027109 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.686236904 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.682001731 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.685106397 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683627436 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.685170448 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.680480401 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.685568607 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.683557294 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.685501053 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684153749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.685138966 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.685016028 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.684774611 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.683593314 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.681437822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.685344072 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.685733364 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.682881517 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.686456955 seconds)
  done (took 36.96463783 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.687486145 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.684173325 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.683837867 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.687075212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.685500426 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.688519623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.682557854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688284667 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.686050579 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686302218 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.687661211 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68659218 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.683918695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.684761575 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684572487 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686457607 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.684612517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685579588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.687862322 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.685098073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.689510163 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.68795317 seconds)
  done (took 38.696995585 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.687908622 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.687269554 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.689368676 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.685818878 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.691276335 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.686149076 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.691174112 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.688970739 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.688227342 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.690677478 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.688404777 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.691997108 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.697665791 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.694345959 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.691163515 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.687661293 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.833761767 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.691054586 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.692134942 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.687943955 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.684316915 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.695926269 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.685721751 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.686146511 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.690355091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.692093847 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.686846915 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.689756515 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.691743379 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.692788293 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.696720179 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.688240068 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.690660159 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.690339632 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.689716604 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.690419724 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.694641581 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.692985162 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.686262274 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.689059851 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.702684852 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.714915006 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.693505993 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.696280708 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.691581384 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.692990104 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.696304423 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.700169363 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.68593415 seconds)
  done (took 84.628534011 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.690254003 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.690943761 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.688667842 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.692599316 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.69294601 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.688811714 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.690999547 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.691829554 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.687808104 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.689077848 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.691210194 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.688430297 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.69040453 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.693076473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.692288123 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.687477134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.689563942 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.687538399 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.688626283 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.68956358 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.689283422 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.691670996 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.690534017 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.690550841 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.690711064 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.688202205 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.688103526 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.692936878 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.691056232 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.690382893 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.691645265 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.691668358 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.688967447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.691862877 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.689773047 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.693523944 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.693338078 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.688065195 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.693198966 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.690310062 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.692584052 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.69240649 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.69235228 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.694899601 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.689506759 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.691576632 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.691796575 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.69104683 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.689591631 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.693675532 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.693436204 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.692672169 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.691397297 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.689347847 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.693959333 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.692707235 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.69121809 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.689827932 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.694773948 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.691405103 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.688346554 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.690743306 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.691584438 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.695760265 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.694959798 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.692905669 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.692086573 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.692877623 seconds)
  done (took 116.605025741 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.695047223 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.695742058 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69460972 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695190362 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693998315 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.69732165 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.695165564 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.694633086 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.695506839 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.696290557 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.695862198 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.695124916 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.694329359 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.695691185 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.696959182 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.696369538 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.693993015 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.694460093 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.696115522 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.697966527 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.694173154 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.695068514 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.695699701 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.694168348 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.696680015 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.69596823 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.694629236 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.695008781 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.69691394 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.694221195 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.69568393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.697036498 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.694299529 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.697006491 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.695208313 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.696348446 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.69719162 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.695501134 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.696785991 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.694268129 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.696420803 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697643938 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.696410274 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.696650324 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.698218093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.695739209 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.697845689 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.695345545 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.698223971 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.698285322 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.698137292 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.698727029 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699382526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.699628815 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.696352445 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.696278396 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698052162 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.697100614 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698537644 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.697558079 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698762465 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.697632778 seconds)
  done (took 106.779859104 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69923278 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.697800722 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.694985367 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.695651773 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.697382279 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.694703466 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.696200482 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.696706787 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696339454 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.697786796 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69791602 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69506503 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696071109 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697410736 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.693522488 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69529233 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695461862 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.69469435 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697115097 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.694551491 seconds)
  done (took 35.535992465 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.693954275 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.698449423 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.695263986 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.697695468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.695923401 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.6952166 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.698895705 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69842066 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696314362 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694302565 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697433456 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.699980423 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693859527 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.694416207 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.699079701 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.696325443 seconds)
  done (took 28.759619598 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.695915787 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.697698165 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.699221367 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.700337914 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.694829485 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.694944855 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.698997639 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.695053315 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.695041664 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.701241553 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.699619062 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.700617159 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.700367831 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.697401944 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.696007405 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.698233246 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.694099344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.694551264 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.698548615 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.698495976 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.693851932 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.697418817 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.699422209 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.698460319 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.696949354 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.695544181 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.698161735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.698592242 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.696787978 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.698616251 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.697055498 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.697350303 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.698453445 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.69418596 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.702326513 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.697261349 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.698960128 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.700463776 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.700805101 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.700781092 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.702035929 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.697040503 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.699946707 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.699436878 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.699903061 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.69794695 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.698970653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.698314836 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.70051238 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.699002977 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.702778932 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.70148434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.700367059 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.70054449 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.69804871 seconds)
  done (took 95.024171111 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70059961 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.700791513 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.698318329 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.700821965 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.700766975 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.697723846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.702083 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.697495406 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698310268 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.699519528 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.698541428 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.700132869 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700670407 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.700847365 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.699972508 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701986082 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.70027206 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.697554119 seconds)
  done (took 32.212363876 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.697779291 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.70131688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.701247929 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.698398676 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.698981942 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.701982385 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.698942179 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.701510946 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701853891 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.700590255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698711244 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.700723344 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702343267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.702382317 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.699286375 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699761472 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.705278152 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702025975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.700013144 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.698882787 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.704058663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.699546219 seconds)
  done (took 39.033972462 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.701831443 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.703631181 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.718902249 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.724900187 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.727140863 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.741196145 seconds)
  done (took 11.932517739 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700090063 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704889986 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.699682691 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702115188 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703818986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702305491 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701493869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701307838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701530464 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702435401 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70257004 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704583916 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704049536 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701141044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705320107 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704181119 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704657248 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701781198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699160547 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703870301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702438879 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702973749 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70217766 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699776123 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702379897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703557981 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704208548 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702985869 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702167579 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706527776 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705225312 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702481012 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703873186 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701443712 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706007386 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704892114 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702433989 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705103876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704956391 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703350313 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.705745666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70387806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705324661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703358711 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707053131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702202704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701956208 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701968306 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703785168 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703447625 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705468282 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703340441 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707146699 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705789414 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707704601 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706613564 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703310584 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704442226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705673617 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704756978 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703646339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706884207 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703968127 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707080169 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704856739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703978291 seconds)
  done (took 114.061451515 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705057178 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.704838567 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705133342 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704921235 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704634161 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70344207 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702535671 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704695579 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704948775 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702922129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708384862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703002074 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705294007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702118248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703829538 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703967057 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705704323 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703285696 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706686784 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707581526 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705406844 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706045391 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705199751 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703879195 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706267624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708762413 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703269894 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705222557 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705847091 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703150547 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707731099 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708046723 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70650073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.70845104 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705992074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705344247 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705916882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707607632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708243371 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709645638 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705709901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710860587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708063872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706355707 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705805168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704646561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705852445 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707890137 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709488821 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708775667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705120276 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706368177 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706956813 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706788402 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707704221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704901988 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707516924 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704433802 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707576862 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710353308 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708788123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704905186 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709126987 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706507563 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705172415 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708052131 seconds)
  done (took 114.224767088 seconds)
done (took 2328.630712375 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.755142508 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.708476068 seconds)
  done (took 15.086576239 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.87300544 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.824226658 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.709255763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.711939358 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.706556118 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.734615692 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.726315792 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.704447521 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.708635848 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.710074719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.711274835 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.895733008 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.712486074 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.70533657 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.710696726 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.805272005 seconds)
  done (took 49.576497281 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.713988119 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.713822474 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.726027621 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.717160712 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.713890579 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.726013089 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.74805628 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.716640658 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.744908055 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.727991193 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.780906114 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.719583747 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.709696476 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.761681537 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.726535976 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.727851879 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.803404976 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.78944955 seconds)
  done (took 32.893299797 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.792058112 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.731060453 seconds)
  done (took 10.155487973 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.716582709 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.706300581 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.716234003 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.729860208 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.728523298 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.712882456 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.728923038 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.720128382 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.746479242 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.747144899 seconds)
  done (took 68.88063679 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.715257882 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.708670258 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.715244171 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.710272014 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.706592761 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.706525812 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.710335522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.708120065 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.366984229 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.74558066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.719673016 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.7190737 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.709417206 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.716781284 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.710472195 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.736137911 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.809796486 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.710780053 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.709626754 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.719129468 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.713922466 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.760600835 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.729008069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.716735089 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.743523701 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.373927714 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.719353716 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.717161583 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.814338019 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.710857227 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.711676928 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.713037251 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.713132715 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.104684219 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.977008693 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.709368927 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.724411189 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.716259534 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.70991036 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.818084937 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.714163445 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.721748702 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.438227871 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.951195847 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.813521553 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.756702827 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.034730269 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.727753941 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.714834427 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.743258543 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.714044248 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.715858846 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.728847831 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.201103821 seconds)
  done (took 123.558904093 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.711371927 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.05697877 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882035974 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.711247058 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994616401 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921037984 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.710121489 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758283506 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.712236634 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941370857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.96774086 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819801846 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.711894885 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.711111304 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.703364159 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705387239 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.869351141 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.784132447 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.710901199 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.705696742 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741525907 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957100544 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.832612677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.713665003 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.736064848 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924711141 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.833928223 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818125788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.58014407 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.708697005 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776735757 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711856927 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.71166991 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.705098083 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.870266621 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.807288107 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798933184 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.713781566 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708620734 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.709024652 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.474369073 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913091518 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807454788 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.851995751 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.86205759 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.915029402 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.495691494 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.711161104 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456092266 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.876163564 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.945899173 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.950731144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.832154739 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710831088 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.049202463 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.708731512 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.708437681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959625623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.855820028 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.807881182 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.711836655 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.712596985 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.708483797 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013226595 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.711612378 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.808124822 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713683593 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.707421076 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.81132766 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81167566 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.850849411 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92491721 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.742810291 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.436559094 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.924766496 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961139237 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.778204497 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961482787 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.712404525 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.70811999 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794870509 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.552523353 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.97000084 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002264971 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965880941 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74836767 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.4441846 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.709644113 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.941281436 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.933137796 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.973983616 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.862149644 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.952055807 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.048258642 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.711501356 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.711516206 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.930002987 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.848890828 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.713737782 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.067361921 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943761613 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.259587602 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.734284567 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023728251 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.848712924 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.716263753 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.370076829 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.713990226 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943656691 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.757139643 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.715402336 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.712419524 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.932448592 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.70700512 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.715203155 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.596294778 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.775138964 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.717693428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945313662 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.715523358 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982866596 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.718440364 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960016717 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.715113411 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.745743685 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.892160213 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.864505681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.716638447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.961223012 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964193733 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.834526124 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.990476197 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.603508999 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.713717512 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00514435 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.718539578 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.712916477 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.890380765 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.71362929 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.860884927 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.718954873 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.012475166 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741999436 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949364392 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719893252 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.975479214 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.752335026 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769541413 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.720515449 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.839656978 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.717783049 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.64028565 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.875748975 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71811657 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.710600466 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.266699636 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.714280221 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863422273 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.950648554 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741904321 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793304003 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.388143774 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.716785276 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802731628 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.74320802 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.116491574 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.719208018 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.97082492 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.718725483 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.716296041 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.71564023 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.015394405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.955644691 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.720743037 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.71185336 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.629047071 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.716671327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.714970085 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.901682276 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.068893775 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712340988 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922784531 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720802711 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.843058011 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.722255025 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.791616601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.056467061 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711435039 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.715038307 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.718430871 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.719342238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.717152088 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93284157 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.747053607 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.236610266 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.856376096 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997667178 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.031922673 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974022446 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.760425338 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.720785631 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979646477 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.717446563 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.780523876 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.717875881 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.741281201 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.95469508 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.719840868 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.984464322 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004561833 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.666246296 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.76841009 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.72271083 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714526443 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.713728821 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.868706074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80742326 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.720940781 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.721099241 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.835498486 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841764597 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.930442086 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.721648333 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.752476674 seconds)
  done (took 868.214139865 seconds)
done (took 1169.9928119 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.717261595 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.718918347 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.704725687 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.722356425 seconds)
  done (took 28.499149414 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.172738014 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.726407465 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.730210107 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.726483887 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.729752107 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.730154769 seconds)
  done (took 12.455103169 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.775966356 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.721893047 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.721501659 seconds)
  done (took 20.862023665 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.795305195 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.106628313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.831286979 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.152051017 seconds)
  done (took 9.524654724 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.72646105 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.730594655 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.730476079 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.732133043 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.732208897 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.732261738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.729979646 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.731315653 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.732220511 seconds)
  done (took 17.220313417 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.800086452 seconds)
done (took 93.999833785 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.358171196 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.735798911 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.72026323 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.528627008 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.800099455 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.705735045 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.289871589 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.856725348 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.035851633 seconds)
    (10/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.813871858 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.736002082 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.115225822 seconds)
    (13/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.800475036 seconds)
    (14/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.991652232 seconds)
    (15/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.029483675 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.90138636 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.889450509 seconds)
    (18/309) benchmarking ("sort", BigInt, false)...
    done (took 6.720257797 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.849279448 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.052112102 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.856671511 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.743915312 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.045817329 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.951537319 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.809618318 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.008421627 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.066966767 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.732175215 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.922173101 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.177148199 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.010978709 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.79002563 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.887749018 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.912166997 seconds)
    (35/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.703457688 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.539575204 seconds)
    (37/309) benchmarking ("sort", Float32, false)...
    done (took 5.472042088 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.897355196 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.960612915 seconds)
    (40/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.707827077 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.826136588 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.709452367 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.203280578 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.280628758 seconds)
    (45/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.763312393 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.726006838 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.030597127 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.135845476 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.859457362 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.087480184 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.389968582 seconds)
    (52/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.804174202 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.96615885 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.523201331 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.882782713 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.744472141 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.418415011 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.824541088 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.675547583 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.969361262 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.627500285 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.722105766 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.349320097 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.03536378 seconds)
    (65/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.748461621 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.012740241 seconds)
    (67/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.7277283 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.045707431 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.723234779 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.810658766 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.869927281 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.859621154 seconds)
    (73/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.269541317 seconds)
    (74/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.273253564 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.873107844 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.713793129 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.056259384 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.662307272 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.13861973 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.883037476 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.993302874 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.857394395 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.415029108 seconds)
    (84/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.735868516 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.714174134 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.969200767 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.174016528 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.726927261 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.905019075 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.819766258 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.422746601 seconds)
    (92/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.742073569 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.99500247 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.119291151 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.910927679 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.748609799 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.836538224 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.419938169 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.871846864 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.29228944 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.031101821 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.710325601 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.748499509 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.186475652 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.091611998 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.931062372 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.749233289 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.711391954 seconds)
    (109/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.808242451 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.045915963 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.821410223 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.026073751 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.842851192 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.977720196 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.663952487 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.798036911 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.08476313 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.144833093 seconds)
    (119/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.761843805 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.068173521 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.757746188 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.727913881 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.574060807 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.669577319 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.060910189 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.854837557 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.038982038 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.984001628 seconds)
    (129/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.588060403 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.914318137 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.751533918 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.405097466 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.728140361 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.437173316 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.7312875 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.890686631 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.982011978 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.744976961 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.798328784 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.98507919 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.968982291 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.071557479 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.829392806 seconds)
    (144/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.747842773 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.753147599 seconds)
    (146/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.788996079 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.115898614 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.711463508 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.875764371 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.179538854 seconds)
    (151/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.903068614 seconds)
    (152/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.838796822 seconds)
    (153/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.890089183 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.000597005 seconds)
    (155/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.961509316 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.76356093 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.728253398 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.787085236 seconds)
    (159/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.719126026 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.660529007 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.755467403 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.728843247 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.943254988 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.847338457 seconds)
    (165/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.736072561 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.838609019 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.82551743 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.453990117 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 5.528586302 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.816600691 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.074431309 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.73235161 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.728391218 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.920103435 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.110277912 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.76185896 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.731522674 seconds)
    (178/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.960659305 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.816373413 seconds)
    (180/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.865851505 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.010888963 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.759896145 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.832982143 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.090547493 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.717960441 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.736729896 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.848162571 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.728203352 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.840157358 seconds)
    (190/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.24767299 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.916376953 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.802869984 seconds)
    (193/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.96909376 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.698932852 seconds)
    (195/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.97162303 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.805662151 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.776838395 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.844235281 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.71806107 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.139032121 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.126849614 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.804347491 seconds)
    (203/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.931151761 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.967406164 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.742194102 seconds)
    (206/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.886705816 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.865153069 seconds)
    (208/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.848268591 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.918973724 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.874562329 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.960137023 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.580968834 seconds)
    (213/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.716446679 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.925555226 seconds)
    (215/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.834027087 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.832285094 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.843669475 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.705799148 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.690424415 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.767524602 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.077971243 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.861421489 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.892963338 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.814415126 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.869807029 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.748378423 seconds)
    (227/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.146088623 seconds)
    (228/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.840317207 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.921065985 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.019488291 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.855279935 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.792235645 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.014459475 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.749205645 seconds)
    (235/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.166041436 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.760009242 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.681104804 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.752552117 seconds)
    (239/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.833407272 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.028890631 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.911425154 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.718062937 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.481606401 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.895733522 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.748168629 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.836147481 seconds)
    (247/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.826958 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.349696188 seconds)
    (249/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.820369287 seconds)
    (250/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047802631 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.874053668 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.735209966 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.732387263 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.838372328 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.740824042 seconds)
    (256/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.72457661 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.886218577 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.141014814 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.171498721 seconds)
    (260/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.878613049 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.742103329 seconds)
    (262/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.800308761 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.596713564 seconds)
    (264/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.734237737 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.897672158 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.972043088 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.802793009 seconds)
    (268/309) benchmarking ("sort", Int8, false)...
    done (took 4.617592522 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.818410803 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.734783144 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.065921247 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.849856064 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.864651517 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.762036676 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.749065105 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.156576701 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.868863247 seconds)
    (278/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.720469173 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.209433782 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.719279245 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.033869923 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.760100232 seconds)
    (283/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.860842636 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.433419667 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.924796888 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.680312318 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.295949948 seconds)
    (288/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.434454512 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.735026154 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.815368381 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.396535236 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.668230903 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.899994662 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.526532904 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.7619489 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.005205517 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.248811085 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.779577992 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.760835323 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.737636323 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.720405454 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.788560963 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.720125738 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.994728685 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.955846426 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.757505384 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.829149318 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.914573696 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.856427442 seconds)
  done (took 966.425138615 seconds)
done (took 968.130691138 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.770985337 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.762486432 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.746613688 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.767651078 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.86059665 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.774649513 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.757980318 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.748327617 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.794336772 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.797932154 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.744346312 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.772606717 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.750152637 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.748585544 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.748321387 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762405971 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.06560803 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.775616127 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.76331877 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.758140879 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.764402023 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.74303845 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.798876213 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.773038818 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.750786216 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.750512042 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.751309032 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.765503248 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.858700552 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.752662564 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.750572599 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.756506994 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.061363645 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.773541452 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.742722514 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.768533287 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.758883027 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.75646721 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.754817323 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.780041246 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.150270438 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.784886616 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.751770089 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.74671888 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.749133305 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.753343266 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.750253126 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.753130942 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.762728007 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.762587276 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.141365335 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.803467291 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.752833611 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.749646719 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.760519429 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.74804216 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.752469402 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765760432 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.769110574 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764191738 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.047561481 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.778499079 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.747637363 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.766759304 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.757456065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.179282047 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.785209385 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.754037542 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.150636221 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.794752168 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.177891329 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.797605922 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.751262511 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.762451383 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.781745363 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.064665912 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.772985444 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.750715455 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.756970396 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.746795816 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.75872038 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764371407 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.754739663 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.75217869 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764790432 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.777465813 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.761906066 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.751689311 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.759046304 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.770319007 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.757455951 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.763274724 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.756270765 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.745890917 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.759963851 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.756502699 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.752727358 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.754156502 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.757318248 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.76260248 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.149446068 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807818371 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.748790714 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.748241402 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.752032041 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.76731351 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.150081505 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.793320621 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.773306942 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.799912895 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.755353775 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.050320958 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.783071671 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770021818 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.760792229 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.75460726 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.748261557 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.051386235 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.174323395 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.809294496 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.755944606 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.749142921 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767121641 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.75656491 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.748486241 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.070129541 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.783362473 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765805536 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.876262299 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.764481359 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.786769145 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.751059632 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.758374186 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.785990352 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770557327 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.78644595 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.756643864 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770507126 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.770064748 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.752348969 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.764761502 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.765862337 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.754541917 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.758788534 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.750217932 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.786653146 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767085488 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767713682 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.776774547 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.877247824 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.753790005 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.050452481 seconds)
done (took 275.671530238 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.825053134 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.752624128 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.852790086 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.753958906 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.83326891 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.835919623 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.74912276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.749121833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.748610229 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.127746342 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.750120171 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.749580289 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.750778207 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.7487998 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.833024077 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.750867798 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.746849364 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.090089734 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.752921686 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.823748206 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.753167909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.748567809 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.752325018 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.123377978 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.746232751 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.749774383 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.823931627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.753772635 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.087627761 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.751467549 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.751350888 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.088279347 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.846088498 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.770476165 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.763013538 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.760100466 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.833852213 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.757023514 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.833333753 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.834375558 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.853249896 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.794347464 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.748068865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.753135397 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.756293205 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.755782807 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.75050227 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.781792721 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.752474254 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.751120416 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.092192389 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.763677438 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.752317892 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.751518254 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.749548656 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.785117659 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.750855349 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.756439775 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.844291083 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.755108784 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.815128112 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.123337043 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.129378267 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.754415591 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.75609543 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.752177931 seconds)
  done (took 176.444737058 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.822802217 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.83398492 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.819977194 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.759901499 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.805859125 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.822981259 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.761870217 seconds)
  done (took 14.293382171 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.760967423 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.754647981 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.805474967 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.807030397 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.75598382 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.910486591 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754630434 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.765422561 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.752088222 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.808233138 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.75626192 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.755080731 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.762836783 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.756568558 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.80607163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.766922973 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872132996 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.758744759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.756428832 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.905478846 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754332313 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.763032503 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.789876253 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.768056691 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.756971553 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.761644894 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.348778927 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.756809678 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75245094 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.75570767 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753150089 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.798838803 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.757581676 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.752841552 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753516695 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870947397 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.757715231 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753099634 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.754962259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.749143555 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.754984093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.755183279 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.755143678 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.754494173 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.757762676 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.780813032 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.758061482 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.755645984 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.755833424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.756774647 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.790364131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.755932093 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.755115756 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.752753336 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.811967889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762188151 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.75757964 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.750524296 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.756033661 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.754085437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.908880936 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.806109843 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.757823289 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.807719408 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757907531 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758497954 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.757335819 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.757347897 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852711269 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.759204414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.808132636 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.753238105 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.917884329 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.782638418 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.758493344 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.76015581 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.760599849 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.75863274 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.760988557 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.762536464 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.753340549 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.757712034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.759498919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754029302 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755640148 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869340406 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.862904512 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.751139873 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.768383778 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.766387093 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.755560459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.794053107 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.754880672 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.752142815 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815594988 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.872772731 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.809927618 seconds)
  done (took 194.682928623 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.761119021 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.765070318 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.758146562 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.776030704 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.759384479 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.758326391 seconds)
  done (took 12.24644359 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.761690605 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.761745239 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.760092931 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.757334542 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.761077305 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.760046338 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.75891999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762423665 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.765387504 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.759954527 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.760985968 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.761411793 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.761379499 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.759646661 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.761600441 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.7602047 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.763182446 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.75612683 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.760097503 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759684921 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.916931734 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.761817023 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.759946932 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.7622426 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.766546698 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.761320754 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.767532894 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.759149737 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.761434645 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.769454761 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.764608664 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.761222722 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.763281939 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.767893501 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.766605654 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.762336468 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765544189 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.761915137 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.758774874 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.761220819 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.76348933 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761441034 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.761892716 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.763149239 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.763537681 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.767748068 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.767791546 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.76947356 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.762908314 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.765390445 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.764137434 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.761833149 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.76127131 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.761733605 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.764448011 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769002585 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.767392639 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.760467713 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.762783265 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.760922143 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.761839602 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.75923349 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.76207067 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.766528571 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.753883853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.759618832 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.75994013 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.76289132 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75807551 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.753749931 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.760790841 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.754362279 seconds)
  done (took 129.698881783 seconds)
done (took 529.051889715 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.834093038 seconds)
  done (took 8.504762062 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.953270033 seconds)
  done (took 8.661125307 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.257109922 seconds)
  done (took 9.932112363 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.777930595 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.768834547 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.766082725 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.754504752 seconds)
  done (took 28.768748502 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.141620433 seconds)
  done (took 8.813265269 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.783343344 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.753668435 seconds)
  done (took 15.28109157 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.858579529 seconds)
  done (took 8.532014865 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.832569325 seconds)
  done (took 8.533360132 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.770015832 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.785169188 seconds)
  done (took 15.241347386 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.736692285 seconds)
  done (took 8.409105492 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.437532526 seconds)
  done (took 11.194664336 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.768264045 seconds)
  done (took 8.534071392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.782317098 seconds)
  done (took 8.44546133 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.799682711 seconds)
  done (took 8.460470086 seconds)
done (took 158.984661465 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.748962329 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.741000955 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.739975061 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.737919806 seconds)
  done (took 28.624477583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.773369529 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.775877657 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.772799353 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.781363925 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.773154604 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.770884995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.76451459 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.767006277 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.781625236 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.772185955 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.771958616 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.773356044 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.770211953 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.764778112 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.772845516 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.77048472 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.78024256 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.771318546 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.758336315 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.773003568 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.735816525 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.77865106 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.771522912 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.735069624 seconds)
  done (took 44.112828269 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.933699651 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.807130295 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.887912231 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.78821422 seconds)
  done (took 9.064837388 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.785825554 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.788222504 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.79939316 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.839577689 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.863190491 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.798602701 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.763282407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.758489706 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.742151072 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.788828359 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.865426358 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.784832202 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.87599894 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.735953439 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.91850154 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.735918344 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.738855957 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.787407914 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.839007429 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.852151158 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.738711336 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.787425432 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.79100966 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.785221001 seconds)
  done (took 44.812528291 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.735957235 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.743988518 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.740083202 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.735290564 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.732283846 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.735080701 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.742034469 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.736357612 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.755948144 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.73788016 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.738737849 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.734066264 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.736097354 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.734188029 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.735375207 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.750212452 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.75070613 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.737534953 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.73950073 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.743485904 seconds)
  done (took 36.444471762 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.732881405 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.585279233 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.080671439 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.987278711 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.733947568 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.732689769 seconds)
  done (took 30.502778551 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.753166077 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.746444174 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.737368429 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.796996082 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.882146387 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.743952213 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.738023887 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.750804379 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.789660532 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.803984414 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.757511214 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.769978023 seconds)
  done (took 22.921880531 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.736410539 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.739261987 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.734396316 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.760706988 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.751016866 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.74638855 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.745168035 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.732660876 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.750434278 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.759333552 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.747988406 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.750608217 seconds)
  done (took 42.608789296 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823084876 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.620243804 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37522232 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519086544 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266445807 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941556889 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325491407 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909345709 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.733201136 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002810864 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.251266358 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002427987 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015327726 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760005114 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832251076 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.237215601 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054966903 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994842133 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790804463 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477079943 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878423924 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354070818 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.466652625 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885191489 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973270255 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.895157604 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.022015681 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.720969338 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893659767 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797594985 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772423769 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.763189742 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03528221 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979966223 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889796098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771666394 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.418316816 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.477500042 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.757866133 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.443861594 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.416360162 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889875516 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771359666 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763942889 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69743671 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35403311 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948831434 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.76450062 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.462863063 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.76570971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774245402 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854302754 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.765894336 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.576432844 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719858605 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036833705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.76279853 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766203158 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330336643 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841948372 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461227538 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.71032032 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.854585664 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.479713069 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235397983 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.921263014 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.763560304 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766693122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696309025 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.422560768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884850717 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908683636 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.780325011 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414686186 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072529658 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.361950264 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839193216 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055581251 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.639262331 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.704682577 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981932885 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.707520777 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687167349 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.601514966 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.690930746 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029071076 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793640047 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.421332454 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796855258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932683843 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.76276385 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774695453 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760419717 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977341211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.634961829 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753983253 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.222207876 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041485299 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781719759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.930269373 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691199316 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.759622944 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014353034 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.964949842 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.056979758 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.233673437 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915679623 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755653222 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.843293461 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.752889117 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.775128073 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.026309109 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816390922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825296212 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889669273 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.722442005 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067692846 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790158448 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.931934941 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.32359984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026578269 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.090989036 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014103878 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841815447 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.764579721 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.759233159 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.495418584 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384993203 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.982110963 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.759689651 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314856392 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.779234214 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.761422312 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692630843 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.378882552 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.332598013 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.872356628 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98552861 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.758411756 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.034439725 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691959035 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900509642 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.874146262 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.976518744 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.403992949 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.834702145 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012930412 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305109976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.072370103 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77274749 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771902101 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867079593 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772483616 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.267242877 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013521565 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.74954628 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.749503383 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.500336904 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.843244041 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761522327 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.766398718 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561661843 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064955758 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.79282858 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.756216745 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.694115359 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.772515252 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838823725 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761572566 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762250447 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.285181086 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.514331079 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.768298283 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.414306255 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984774001 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762429298 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.449438645 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953618333 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.849146638 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061093875 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832034793 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.695264219 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.464730815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.466065136 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764475679 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69797609 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.764452328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772249519 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773904662 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.960608504 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050144229 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813867629 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.528865285 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.88339436 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775033846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.768434082 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769564859 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.287572546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874503558 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469253317 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.783639266 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900511353 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.777205946 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696922065 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.767659486 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769258153 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766547271 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.718950446 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817790478 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.511515998 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100921471 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026570312 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.414125305 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787103548 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.489937729 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.899177488 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.788537592 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.29774537 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919392373 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.770905185 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846803383 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.77534142 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.516310966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53792481 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332608948 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092985227 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122617418 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221251718 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.357010339 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.994157701 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939502381 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003525997 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292694986 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827302689 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945069504 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713324336 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854143015 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.422993502 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130263767 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784544429 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991801347 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161053084 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.374238654 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934125112 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975817243 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799078759 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.760619593 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.695441688 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.284774436 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915363857 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.361858447 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999493486 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934617578 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.316296833 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.877103523 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.760860356 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245836769 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849480727 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.471951635 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121200535 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400842677 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.366994152 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138331256 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.767445624 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.206403592 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124069599 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.168147865 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.863312956 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697822095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.772357726 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77174524 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.762045804 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.743051495 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.663625707 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.034040207 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774589764 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996225752 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.112562136 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050395508 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.671587475 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.767296639 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76406611 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073708863 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.621950646 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905722243 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.297645904 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.24041227 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769773908 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69599775 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694970472 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.465519846 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771585173 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736246063 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004583169 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.873022954 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725660641 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33898145 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97784948 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016031856 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.777241178 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066264793 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045742035 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.503724856 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798094301 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.862457038 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.287693166 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.527689084 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.984483148 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997618378 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566963512 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994402721 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427003782 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.745877379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.764566899 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982455544 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.986057798 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.353509641 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024688475 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.48921024 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.781215429 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165790463 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840083768 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.359519525 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997418063 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.863619974 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781044243 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850927943 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780273621 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.781285811 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.781758319 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816143643 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.370776829 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913438226 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.785689208 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861361979 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869239516 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.359760266 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.782009792 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075961128 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162662417 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12146442 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839981526 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771054866 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773689733 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704776953 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90883437 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.216577276 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044564988 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.900766718 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.943679458 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797628424 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.296467692 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257977018 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982756338 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046045225 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.665988818 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773509823 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.865520216 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.995771283 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78202517 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.982027074 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033313783 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13204661 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247763948 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.960494684 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072373565 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050852874 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141065933 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.773879374 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362730925 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.780224786 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330300856 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.822184177 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.371069791 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07520284 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785357865 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995419514 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.79719654 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.970529869 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.22739332 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.472546596 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144334584 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.777382333 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839048392 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081383007 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202950751 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094870412 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856316633 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786214895 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.47209525 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914085934 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.712910344 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.030827845 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775233443 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985525434 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.485394077 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.782639697 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059440027 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091446224 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.773164495 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.740892248 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829142188 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.783630297 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997458482 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056583312 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029655109 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784096132 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.783669148 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.588313174 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061145585 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840860149 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708078079 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.779950586 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873824672 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020482885 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792479358 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.29079872 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.479678703 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083786786 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.695004237 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796385177 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227867964 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234114226 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121566125 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.299027999 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011141363 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331077557 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.681805735 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152929454 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.771973384 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.225923805 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15649162 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.772279651 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.332837212 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890572288 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.071664398 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098975175 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.775887546 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556005254 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.818080829 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990632691 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361220907 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707008671 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770631714 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.825726189 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.764257609 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.893055306 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774649154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.762774606 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.697505899 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.614008199 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253901824 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.767942525 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.754279798 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.268986181 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377994221 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880445975 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918143021 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777891069 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.473279594 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.053088588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.016924763 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.308784338 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.846939714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.767479049 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764134916 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.690243028 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958246735 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.960039209 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089062441 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.173450375 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.884365491 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767161795 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.9796078 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974765411 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.329006871 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927782172 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.188577445 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88675831 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.692075254 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.475942385 seconds)
  done (took 1629.268573484 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.780815959 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.777018971 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.771796038 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.824441479 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.789681195 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.785689701 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.836515238 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.771151543 seconds)
  done (took 56.024959189 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.765138878 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.941374954 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.773413314 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.765336207 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.781090384 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.765800346 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.95968963 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.779578636 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.80419578 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.774457317 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.763959944 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.787046837 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.080221068 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.788533306 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.76275823 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.758491069 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.246212252 seconds)
  done (took 72.992895634 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.76454173 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.232558683 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.784576048 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.787447636 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.751936508 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.762253493 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.878888005 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.820220208 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.76394311 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.936171783 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.098138002 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.769355552 seconds)
  done (took 89.035509292 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.776236441 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.765377024 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.766402432 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.765903895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.765998447 seconds)
  done (took 10.52977409 seconds)
done (took 2118.62859812 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.025020007 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.945490467 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.981392745 seconds)
  done (took 5.609972597 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.907163478 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.956465228 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.076328229 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.080201635 seconds)
  done (took 9.706317656 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.054602084 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.151234199 seconds)
  done (took 5.889115026 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.095625867 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.789299455 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.147415407 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.757839099 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.762050207 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.758957972 seconds)
  done (took 21.966843651 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.757373585 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.759136571 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.756531524 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.759602566 seconds)
  done (took 8.70750321 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.73554974 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.426756953 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.735026092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.751089352 seconds)
  done (took 20.324952872 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.501216946 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.876535497 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.495523773 seconds)
  done (took 8.54532557 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.309976732 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.67084486 seconds)
  done (took 8.652048327 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.9090516 seconds)
  done (took 3.580854464 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.779828082 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.023137217 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.275972559 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.282385199 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.386006036 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.591106715 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.081022395 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.986967396 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.213448921 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.22176121 seconds)
  done (took 23.514340961 seconds)
done (took 131.237836852 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.10499227 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.784806176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950635629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.113520917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.991125922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.950839403 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.969308759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.111625193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.804829654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.790729269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.124192804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.98494957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.914984346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.771502914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924724064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.770353927 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.98142753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.133743703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.800817465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.019290733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.981226152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.762275937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.95660551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.777105256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.988300945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.903890792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.305649839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.779826045 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.934488485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.318314811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.906724377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.155795628 seconds)
  done (took 164.442388948 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.753494369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.752953452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.752521406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.753703962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.329974868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.754962504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.753793548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.753889392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.228417378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.224208947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.754777818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.305203124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.754547504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.753640476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.754825677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.75317548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.390030356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.75409333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.754226406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.752551102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.75240039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.135166947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.755311746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.145494711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.384121999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.754164684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.754157902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.754406028 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.754311298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.753962897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.754733531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.754183115 seconds)
  done (took 205.914189025 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.706828548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.757407346 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.755005421 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.75433496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.756239937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.755475543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.756592133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.755079872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.505785576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.496487231 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.756182197 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.755751989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.753870131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.755853151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.754935863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.756173206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.754952873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.746124243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.756323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.75687733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.756053875 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.36932188 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.756975014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.35653152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.756108959 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.757233993 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.756094227 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.755793428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.755786774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.757090922 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.756722617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.756750283 seconds)
  done (took 216.5127112 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.009789274 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.759652904 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.76225156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.668869948 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.761855696 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.759832301 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.770772515 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.006720599 seconds)
  done (took 18.17811929 seconds)
done (took 606.72913227 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.212388583 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.062323857 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.935679548 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.785008382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.034436593 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.817978614 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.780175885 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.849437715 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.408337105 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.852431482 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.425421886 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.804194791 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.515976381 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.8094835 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.902999714 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.842498854 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.326788329 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.418984546 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.959496816 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.830994078 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.951204676 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.712938931 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.867375538 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.442939164 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.532833623 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.763011554 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.855025338 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.335332558 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.792515638 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.943150101 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.507531658 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.106554868 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.797186828 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.78023895 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.8386471 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.815341298 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.059439476 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.795901003 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.90305499 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.513818577 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.846627361 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.312868849 seconds)
  done (took 97.726688727 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.75237214 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.750209248 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.748140781 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.750977359 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.749290796 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.749879431 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.749233247 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.749362115 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.749858769 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.750316112 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.749573097 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.749905131 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.750005823 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.750437251 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.750448642 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.750003137 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.7508515 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.751135786 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.749689562 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.750336531 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.750714347 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.750472372 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.764347091 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.750592873 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.752066813 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.751519795 seconds)
  done (took 47.210330329 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.763989994 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.913266214 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.002629018 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.785755771 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.764000886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.76753437 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.781679927 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.768856256 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.766632313 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.766875036 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.870486578 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.77060851 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.782557901 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.000494567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.782400282 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.764541328 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.764754439 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.76488851 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.920929408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.781736269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.784498106 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.769689059 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.783825517 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.778275793 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.766889031 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.765317484 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.768835891 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.25565683 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.775655013 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.869097716 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.812245107 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.791716531 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.167870541 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.013213035 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.824198805 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.776323517 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.765439456 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.874150914 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.772631764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.766584742 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.784269938 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.772241756 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.00265475 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.265830234 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.78219348 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.767078491 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.265890173 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.885197565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.809473186 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.780469451 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.006170239 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.783840078 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.768167508 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.766886176 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.804246064 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.774311425 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.766649903 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.11624045 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.779334098 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.785620448 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.772781774 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.768399046 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.924848111 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.776301956 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.9160042 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.777707191 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.772898228 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.768243933 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.005190413 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.785276263 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.266446714 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.781515949 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.766227843 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.870817542 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.920718285 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.293269349 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.781441551 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.926202926 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.184290435 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.793057256 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.774458573 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.24445264 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.796282156 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.775327859 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.76825479 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.768781561 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.767157442 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.811935363 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.78402729 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.204156185 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.272224518 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.133436769 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.794577131 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.781468351 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.768068403 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.114154658 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.776502359 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.768410842 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.998844902 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.275430318 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.783631996 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.77589242 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.253296358 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.785446399 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.787516 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.777201154 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.009529831 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.785686918 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.813362536 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.767945629 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.774395578 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.771208818 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.786347916 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.775808095 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.767882611 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.245516645 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.895633142 seconds)
  done (took 220.103688441 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.764574921 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.768105612 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.763642451 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.768325934 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.7630085 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.768175599 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.762222761 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.763576661 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.769068659 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.76389148 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.763041422 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.762817786 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.766037529 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.770049506 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.772876525 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.769776755 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.367621322 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.763830918 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.762541074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.764289551 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.420456548 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.772245632 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.76359239 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.763757285 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.764637458 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.766742433 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.775072297 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.768669723 seconds)
  done (took 164.401196576 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.769521614 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.88580218 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.789936247 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.799033114 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.778624154 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.768081482 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.793229883 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.786073393 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.776193981 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.766951172 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.768003506 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.831770042 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.781533194 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.866189499 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.802906952 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.80219959 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.872448422 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.778434391 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.768072305 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.767956101 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.799671824 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.763715138 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.832258241 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898991036 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.789978843 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.888004818 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.775621527 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.771709523 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.770890123 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.889346156 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.786524116 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.830281691 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.801539987 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.788668933 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.893323704 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.887044048 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.875870609 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.800371001 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.775653185 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.769308827 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.768960381 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.757777283 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.888594517 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.789521462 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.771905262 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.875133203 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.79108193 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.77290964 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.78094853 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.76967284 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.785701564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.790694006 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.839260544 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.904447576 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.805904589 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.797177234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.79730626 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.05362381 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.780798131 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.869959448 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.765048511 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.888502993 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.794989362 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.759563773 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.772097357 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.776417738 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.800048943 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.803851314 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.874403917 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.78143634 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.869638607 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.807397196 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.779448821 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.771457535 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.774208603 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.889832376 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.889036834 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.808135759 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.810454988 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.804695573 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.768058128 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.77273179 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.759866334 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.790228208 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.776473126 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.890149947 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.890331282 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.780830058 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.772929001 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.774013806 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.77464818 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.79930852 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.898619988 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.810085225 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.866170409 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.843213078 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.849718524 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.787825447 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.785307869 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.777598797 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.837528171 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.788660348 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.784264032 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.100428553 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.844271141 seconds)
  done (took 192.16736047 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.258655929 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.829711153 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.831390545 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.088404339 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.13258808 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.870516567 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.819706928 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.822870915 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.846880639 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.015604098 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.895829295 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.840661472 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.80974415 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.796253997 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.823944397 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.842491742 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.830577752 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.154777537 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.923389903 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.009420965 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.806483704 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.103640119 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.099742887 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.217640405 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.857503746 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.151406348 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.488862004 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.971055998 seconds)
  done (took 58.838535321 seconds)
done (took 782.127471677 seconds)
SAVING RESULT...
DONE!
