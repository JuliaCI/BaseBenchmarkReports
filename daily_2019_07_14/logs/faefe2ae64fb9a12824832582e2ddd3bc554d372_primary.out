cset: moving following pidspec: 20683
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.278468984 seconds)
loading group "string"... done (took 0.538451806 seconds)
loading group "linalg"... done (took 6.897025082 seconds)
loading group "parallel"... done (took 0.15683986 seconds)
loading group "find"... done (took 1.204927202 seconds)
loading group "tuple"... done (took 1.727402764 seconds)
loading group "dates"... done (took 1.188059904 seconds)
loading group "micro"... done (took 0.221852383 seconds)
loading group "io"... done (took 0.990241146 seconds)
loading group "scalar"... done (took 39.093251957 seconds)
loading group "sparse"... done (took 13.34548029 seconds)
loading group "broadcast"... done (took 1.017687613 seconds)
loading group "union"... done (took 13.124965282 seconds)
loading group "simd"... done (took 4.332435198 seconds)
loading group "random"... done (took 8.871851227 seconds)
loading group "problem"... done (took 2.040174625 seconds)
loading group "array"... done (took 20.879497122 seconds)
loading group "misc"... done (took 1.775037677 seconds)
loading group "sort"... done (took 3.267947874 seconds)
loading group "collection"... done (took 17.270064201 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524546956 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144898085 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135961031 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139580189 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.175075344 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132088924 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143968373 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101706264 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.090727159 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163627919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13635845 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.468318754 seconds)
done (took 5.255993451 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.208436084 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085890627 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096768054 seconds)
  done (took 1.027538504 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065908578 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122930958 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066238814 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065933719 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.0660618 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06525901 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085158891 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066937988 seconds)
  done (took 1.387564233 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075152736 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068145882 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085004933 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06879017 seconds)
  done (took 1.149035247 seconds)
done (took 4.700446269 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.848517304 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.254452503 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184129157 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460388764 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.156982687 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187723024 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679457076 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.357272569 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.202096089 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083465633 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.124949818 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.367846226 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128020894 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665546754 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078895557 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106900987 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161971886 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436125828 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082509944 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08262582 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104494451 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129239873 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.106020943 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095100017 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16172044 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083365678 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147373946 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081431724 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08378159 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.228031338 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188767589 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676858464 seconds)
  done (took 10.628275564 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098402743 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113970535 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069259244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141036094 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098542625 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069169591 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069919755 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066801064 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107992314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145521311 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088692773 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118792483 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065168158 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086306654 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085063398 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222929092 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080021155 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099667895 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071084026 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091922147 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10727259 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094349634 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079415214 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094207625 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12923791 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210296682 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097351233 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112557535 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068419806 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097670967 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130936067 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129593753 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06628698 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083946553 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12533479 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112476452 seconds)
  done (took 4.591182451 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.060972884 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.156458761 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091237488 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.181892716 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067626446 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127309307 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082888931 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09969349 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219498007 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.090519162 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.465426576 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130355734 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101626761 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067942414 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.127562111 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06804573 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.085792524 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.57312775 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14390023 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111953575 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102745764 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074586572 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086997478 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065757106 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066550144 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085150702 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068219283 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.119604464 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.317974199 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13015489 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085609208 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.153104512 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089033357 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068021514 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121918198 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193474728 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090707592 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153887611 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065275165 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084114727 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166749844 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07455921 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082658911 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084179413 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121647711 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103293405 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08497283 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06828374 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177218837 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066747699 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101408022 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.861171546 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168847737 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080116571 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067978462 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283352097 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085523721 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084861681 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064895974 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261228353 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152877593 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067728932 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084243961 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06709027 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068369397 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389759661 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084677985 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.795819196 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069715447 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077303635 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06826664 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06605776 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092213161 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074134773 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102614819 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068038583 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068316571 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084532484 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067254903 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067867411 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083629365 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209140019 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066579039 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086127162 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065330988 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103340702 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09760088 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088351501 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065547829 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115756005 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07006479 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067724385 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081578252 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102354207 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084924184 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086015321 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087817963 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129513253 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069693818 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.142413538 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072048806 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115503446 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072254745 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115898173 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096259562 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069579782 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.241533351 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064112494 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064059616 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066461587 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083935701 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066469106 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067944004 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086087702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080096766 seconds)
  done (took 21.201015921 seconds)
done (took 38.332158439 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.304786452 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098562738 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078827857 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097354372 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095231408 seconds)
  done (took 1.607157117 seconds)
done (took 2.510739363 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120786474 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118319462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063981488 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115684385 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063785927 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118779548 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098302448 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099636196 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116340759 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065745223 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095153847 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083140044 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064776009 seconds)
  done (took 2.155474823 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085947499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083521059 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086914199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082097911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063155595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099606533 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080823708 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106063147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081821731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072387959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083389304 seconds)
  done (took 1.820397813 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084989837 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084782625 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087973438 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081565184 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063199081 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099404505 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080397312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103088217 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081738165 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090103696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065121652 seconds)
  done (took 1.817334232 seconds)
done (took 6.68147921 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080835936 seconds)
  done (took 0.969466353 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.67793705 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.003510212 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080147331 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134190885 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.201339054 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139266175 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.324544728 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087904209 seconds)
  done (took 9.73813724 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091210441 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100896723 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071587849 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089768958 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06966844 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068934497 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091407733 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07138117 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088057657 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069940932 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06860775 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090374636 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069972369 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086182283 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069775316 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08760885 seconds)
  done (took 2.245456733 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094166673 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109632131 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073387698 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073478981 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071095837 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.093810872 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074155288 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093497266 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070809755 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09066428 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075739525 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092619622 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072532944 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082117722 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075584883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093082075 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072597452 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091321231 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07654205 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092248357 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076421367 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064111449 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090710111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074650753 seconds)
  done (took 2.962915977 seconds)
done (took 16.812217203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115391232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.091143223 seconds)
  done (took 1.09988526 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085257943 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103073998 seconds)
  done (took 1.089624155 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086670159 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083439808 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091375356 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096499524 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066256924 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08387555 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106344004 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067254959 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066155516 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084634948 seconds)
  done (took 1.735218724 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071766998 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097111291 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073213719 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098604769 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074924428 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082095363 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074807164 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084456262 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080125342 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062780392 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069818352 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101488021 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072859033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103168882 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073710836 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087084654 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071846556 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067184024 seconds)
  done (took 2.344355233 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069132727 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068997566 seconds)
  done (took 1.038445039 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070524032 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065085136 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085482217 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066953754 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080994583 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06383222 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080397907 seconds)
  done (took 1.41250809 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.425084247 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110707171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332825982 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072327775 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102307232 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.289279435 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067242204 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070938257 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090944483 seconds)
  done (took 2.501311262 seconds)
done (took 12.122932924 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082265167 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085852356 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112913585 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.379612108 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093424686 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084159388 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133280469 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.229688919 seconds)
done (took 2.10364056 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130011443 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.629090249 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40798185 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212616005 seconds)
  done (took 2.156994458 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344013843 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112234102 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061885866 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087907924 seconds)
  done (took 1.516128189 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069362088 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070921646 seconds)
  done (took 1.047653413 seconds)
done (took 5.76015791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069640598 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084672411 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065625534 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063094831 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086464888 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065086244 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063980348 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085836943 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067043822 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06582829 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083616719 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070007948 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065920293 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08187257 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064465548 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065794441 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084165714 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064666762 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063477914 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081469052 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067741569 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063257215 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081980453 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063830388 seconds)
  done (took 2.668272501 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087042357 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084676577 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073617177 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071160401 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088886575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074038705 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090529536 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067696655 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089752936 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069458916 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087246298 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071678198 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068603984 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088681294 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068753115 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088851812 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072429379 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085250745 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069910053 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088095791 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073638168 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066662197 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089808911 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071929854 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08806133 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0701826 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086701102 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068017185 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088547495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072197148 seconds)
  done (took 3.275748163 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072609539 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063885528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081843658 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071971551 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063776728 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083541719 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064383809 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064159767 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083331851 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064292862 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064863327 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083265409 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064289634 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082318283 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066218079 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067133637 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097408798 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064114578 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063374964 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083668238 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068015165 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063428396 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083750489 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064075267 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081294434 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0652383 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0649388 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081509026 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065365425 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063839855 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085247996 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068267645 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.0638152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088630665 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068251622 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063726291 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086229131 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064322449 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065288012 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082248342 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063999431 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063130565 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063393139 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069269728 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084296547 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066517029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063470977 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084158098 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065623117 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065974801 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081885819 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064370833 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082971586 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066719828 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068595275 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081813693 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065805483 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063663301 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083418673 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06474393 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064392453 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082041408 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067321767 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064255835 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097881604 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071269002 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08213007 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066879409 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064817066 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085186948 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06693517 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076583132 seconds)
  done (took 6.107201397 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094722476 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107712672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06526798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084794316 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063227398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082985789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069420626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064537035 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08489854 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071835899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082672288 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066448575 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065199535 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095510081 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065117075 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083404201 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07181884 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062159189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083195398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.17755863 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082448407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069991087 seconds)
  done (took 2.71814891 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179718446 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071988839 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.126543785 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092026705 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07039285 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092436537 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072385166 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070392919 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090140705 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069088948 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087459585 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070434828 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086711278 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068993656 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086857871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069445788 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087422606 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07007142 seconds)
  done (took 2.487572958 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081720181 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067852189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108075099 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066051905 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085486973 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069727601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089915268 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075834818 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086247484 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06789486 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074191482 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087703747 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068608829 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084802856 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069173129 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065590954 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088165869 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066411535 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093688087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071279573 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090030937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075296407 seconds)
  done (took 2.661416786 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083359837 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069852532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104629877 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068699399 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081685814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065750692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089450664 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068033308 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069713225 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088795408 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066954374 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064777339 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068891073 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065018305 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090921224 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066928104 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086784746 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067744872 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068138774 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081157106 seconds)
  done (took 2.445591492 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091143353 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088521842 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071048655 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095630891 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06897431 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085297155 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078032217 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085701627 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06932841 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107020942 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069193293 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067626902 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074097634 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092416409 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069125045 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095119185 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077451893 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094914025 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067963279 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087179647 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088797116 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067106352 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075033894 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088344353 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068812657 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086476877 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068540381 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09176444 seconds)
  done (took 3.197681991 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069395832 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06833598 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084617431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065795908 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063478451 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081546014 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064606098 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063913666 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085924879 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065261261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066430859 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084257106 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067214093 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065774694 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084966718 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067749981 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067439002 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085833586 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066341805 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06585476 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087644849 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0688541 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067658689 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086233084 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066908106 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086212893 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067098107 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066211036 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086317266 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066780179 seconds)
  done (took 3.114159005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079608416 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074349104 seconds)
  done (took 1.0863613 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067565618 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082906643 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085461191 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072235287 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09108724 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06896873 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073462307 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068842653 seconds)
  done (took 1.543248081 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085361833 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078737892 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087623666 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080213898 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096989191 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083826797 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156119094 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086782448 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074432628 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063874629 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.100458465 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065834042 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092361659 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067738503 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072344502 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092293593 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065011264 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091655715 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069691825 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082732859 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069504963 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075348887 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087957436 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063042621 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086278956 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090323253 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096084897 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06743875 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069530171 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094643167 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072284597 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079445341 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068250396 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067280084 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083982617 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076693284 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100765242 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070066274 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093373179 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06891056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096352165 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063021217 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07076749 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093124012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077270443 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085640523 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068294062 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061990481 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084544949 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07050151 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062274636 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087047604 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061682069 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09269499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071689072 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098150789 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067460507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068972266 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088235079 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070729473 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073467273 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088845748 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069858978 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085110816 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077233182 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071388169 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096031857 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06249939 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080222706 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065549356 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094255388 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090709837 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072557211 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066010144 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066082783 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085827919 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071312471 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086077202 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074167274 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072768008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086219805 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072672638 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092487149 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068216921 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068584265 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095506965 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064390879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08942746 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065368017 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10244187 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065950698 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065009388 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063745543 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076098249 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091029881 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067418988 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06381414 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094071729 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061020174 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085657595 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069272694 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066754292 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096625027 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070988596 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091165936 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074266121 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093435712 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067200697 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087677585 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064653541 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068209451 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085723108 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074488922 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061105459 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088835209 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068124911 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085625995 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075998556 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064093726 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065859476 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073799867 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093660766 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065758197 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062675444 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089529236 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06648785 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089405465 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075496773 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06455574 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06088888 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060619188 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091425915 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06779364 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069949216 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092388216 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069467795 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080734748 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065046316 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09048172 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076927588 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066564823 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087729306 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073048316 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087249163 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066669521 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072305871 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089672671 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066046631 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091440032 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068908424 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061438374 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089947709 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069889528 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084078054 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071699638 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069563382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088851941 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067322531 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084648314 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075460777 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086307312 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067160859 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06605876 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084395778 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077473668 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0870468 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063468018 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064173243 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095972041 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065226899 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085073104 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067465681 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068568476 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08704941 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066120411 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065939944 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088625131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077736109 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090841945 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068214218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09178801 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078587277 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085587437 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070649202 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066499831 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088050614 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069125287 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094333428 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07338319 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089722182 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071391931 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064279755 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091650504 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074752463 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065838005 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085639281 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06640285 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090285098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073736596 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089833546 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068822154 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06470991 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086828815 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070558979 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08786621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067770231 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065843173 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093675931 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064941672 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093830784 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06787637 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096304664 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070904667 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062013744 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090698597 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064814564 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091789877 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062775051 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064482969 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065289523 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066738085 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064862059 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091500867 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061506122 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093189721 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075415437 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06613555 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086095386 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067200831 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091998555 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06940369 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071018619 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090240853 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073647964 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096602009 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066756353 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069509569 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097506299 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06722106 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080209497 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07256331 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084409183 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067787582 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0661921 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083622392 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071015573 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095028704 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075097048 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061393819 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089643186 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065747529 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084427406 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063674481 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071487404 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089227778 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068887807 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092010356 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069437224 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068012652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090126736 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067369606 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086501757 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069704118 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070094782 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087532925 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069587319 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065500953 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090874974 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066093356 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083497554 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070589419 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066535609 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066175499 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070732055 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086628593 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068423703 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069191747 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087703477 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068860464 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085643099 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067834523 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069528003 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087127006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068103213 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068868022 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082044663 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074339559 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086665623 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074860286 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066973926 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083779248 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075047162 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088531284 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073025835 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086939244 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069045846 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067364619 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086147301 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070031955 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093343164 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065467328 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0774977 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095907042 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06769947 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089937333 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067671895 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068187284 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08660282 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068058929 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086583694 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068295898 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066629942 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091524224 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069558134 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085900885 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069666302 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067700072 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088004557 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068790768 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061409716 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087558669 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067342924 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086608144 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077826199 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086657066 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068548952 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066892597 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087585501 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066746293 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064316636 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096271474 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096386181 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06899322 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074107482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086935878 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069211761 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097473215 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063361842 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065191148 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085960786 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066099449 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074419956 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088795228 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076389217 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087025347 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067270664 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064632969 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088008302 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065320136 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080583449 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066154177 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070410905 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086155197 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067375451 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067095813 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089794862 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068665066 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095553097 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066683273 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086682101 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068954973 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063448244 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085827823 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06623092 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06895736 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087382204 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065059338 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082989797 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068876517 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068417816 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088531532 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067635579 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068493238 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09423058 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066668456 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089578229 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071283451 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06455227 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089682601 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067347874 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086286374 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067755599 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070409065 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090102278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068721921 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095573346 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068060462 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06779251 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087628254 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065402157 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086337908 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067714997 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066580616 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086600737 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068822682 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094630627 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066310616 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069627284 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086935949 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068866558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093554688 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069802348 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069408359 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094192675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067595082 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088529681 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075061064 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090692738 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07155003 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067649834 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088558611 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072782498 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085617361 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074451659 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066505688 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087231848 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068554393 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064665359 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06518405 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06539691 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087889224 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074109595 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067405348 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064909878 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065381876 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086479157 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069227344 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069233421 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096000586 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069441185 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089595628 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063495258 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063894994 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088551928 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065342338 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088164877 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071716924 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072326785 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068135692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06674703 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064901185 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099244196 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072480209 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090511127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064888637 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089213954 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069171016 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068780248 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088207997 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06801241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086899472 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072727129 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068768099 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086734864 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074794322 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089143207 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069335962 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.0687 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087968332 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067637711 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062573551 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088141873 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069420248 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092011451 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070409093 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06706933 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098704361 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065700627 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087843302 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071366757 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066037856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092881555 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062945647 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067237426 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066759311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066446977 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084978388 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066686075 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083664664 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07052032 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065961886 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082614487 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078339355 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096075494 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071241087 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066245131 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086607894 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06269656 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081430661 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068481418 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068909028 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089004149 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078000701 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085059398 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067215878 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062942721 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086740262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070555837 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069654187 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084685742 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062578491 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084723187 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071318392 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072657049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086413478 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067337802 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088959732 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070528169 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064841842 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090343836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064879434 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07023667 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078179635 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066611383 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089990531 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073547679 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094073322 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068250237 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062329211 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088054933 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070203103 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087138257 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068840167 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067085603 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102774211 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069778174 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086867491 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066145553 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088970847 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067401722 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075195276 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088320837 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068046943 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091739456 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069971535 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094745347 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070722055 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0744425 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090756369 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07036462 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085646479 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068332852 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064963513 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064918058 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066573038 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066397431 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095577882 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094666581 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067470879 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077140165 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096633409 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068907748 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083592493 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067645206 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066186446 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08297915 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068445916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064898723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085417665 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066512369 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085212443 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070073614 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071721488 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088810285 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068586442 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085503202 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062812533 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068555957 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089093133 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06926049 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063113511 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087517695 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067994354 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090403871 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07162488 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064264288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089190002 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06942072 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067061807 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083248568 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073469152 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08549206 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070315214 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066175828 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087696396 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06839239 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090121657 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073251052 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06692429 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09049457 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070792597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090014163 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064458285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064046366 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092208188 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065353796 seconds)
  done (took 46.671983394 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103996811 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085778476 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063438539 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062114524 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095551658 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063508145 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08395089 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064380536 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063257706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064401036 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061221907 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084552397 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073244095 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100209222 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075033171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088345439 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06194681 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083556798 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063499654 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063648245 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070629255 seconds)
  done (took 2.555717338 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078398381 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070912546 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07173476 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098702565 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068177493 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092058873 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074927847 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092173528 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076914831 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087924282 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077043216 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092372095 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067851307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088513928 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067807223 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092133265 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075794434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089753901 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071841712 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094348705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070972861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094228029 seconds)
  done (took 2.771339819 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070492914 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066544136 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087434968 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062425154 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066047966 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.090321022 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070963899 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063970936 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068745947 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064482876 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088109138 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065868014 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067644325 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083054439 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06731612 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063988453 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131153775 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090207574 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066756811 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087543319 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063410297 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068044014 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083074489 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063108804 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065942096 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090808747 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067846153 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084360204 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067411501 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064421128 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087031409 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065163192 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067691941 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087341245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066259309 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065264325 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08728439 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066357108 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082057196 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065131027 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06629858 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082507654 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067291438 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067127658 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085447507 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064715996 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08753179 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067059673 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06131936 seconds)
  done (took 4.609535357 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083889453 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13037083 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067771593 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08662887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10427251 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073243686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092594679 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110913974 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065114795 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064651505 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104665853 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105256017 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067019623 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092474831 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071538913 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085357919 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069999511 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064744204 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091031777 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066231212 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091322166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072472165 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102377297 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0997344 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071313036 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085316897 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067279322 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07020167 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100349616 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091494032 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072875054 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091678673 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083210043 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09234242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06679063 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088243072 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084027008 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087574908 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069827684 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083621972 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069830233 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07032494 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0943954 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103144525 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068058053 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091134617 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067514448 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063737439 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100607113 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068176701 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095241422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101201309 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071532208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08616245 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072164506 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102088732 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067748371 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084118205 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071648696 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099475022 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065722673 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070767534 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102146887 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087979956 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074954271 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101932713 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072633976 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090844732 seconds)
  done (took 6.797152486 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078603209 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093719737 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082501804 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103237589 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073078901 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096340219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092721149 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075066094 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093727648 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079748966 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093818542 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115041946 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070627765 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095867316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075040052 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094173377 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074929565 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093801756 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074604188 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093863001 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073831983 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079076749 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071988523 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078782703 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12418949 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069520744 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095190817 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073629785 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10333117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093701685 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082638085 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094034557 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07406052 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102861657 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080324914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071836726 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06558413 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096346011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073847228 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09529961 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067826254 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10318868 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093759488 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069402315 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093884775 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074361383 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079923442 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079697691 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099366663 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098731102 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074115984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103096875 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073606109 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095329403 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10182286 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106448282 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102535606 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102040091 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074040258 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1024939 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101784935 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087375294 seconds)
  done (took 6.422160734 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086293797 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096206585 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078440205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.08380596 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065401731 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09152463 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065724948 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064566348 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09635002 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074943365 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099298096 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090460154 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075138716 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099430728 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071124947 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095577551 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071258677 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092104997 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076115782 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092787759 seconds)
  done (took 2.658756059 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077238639 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083917649 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089890164 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072151722 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091591688 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072638953 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091277199 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070983653 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08778356 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072075416 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078010693 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099584014 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068444971 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095165226 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097258658 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0749832 seconds)
  done (took 2.315313789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077797878 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094156835 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081667395 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087430118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067206268 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063764787 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088850169 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062953902 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063144573 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100460294 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066648601 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091579845 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067535499 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086159093 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065433462 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069807772 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085180201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064991965 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086893634 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07994016 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098161241 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067631892 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067711502 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088750747 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067683784 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094245593 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067240352 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085602846 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06633688 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0671971 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088541067 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07187822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085057434 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066058169 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065297859 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086106978 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067374746 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088882005 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070654367 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067124258 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086906496 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067756293 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088316252 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068568486 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062779848 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089163247 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063888929 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090320172 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066188683 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087930095 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068646256 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069450547 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089172995 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073686518 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091102941 seconds)
  done (took 5.238696437 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082757068 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070524254 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084158791 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065671485 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069684921 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067159083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069499073 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092465874 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069728875 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08600528 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070330845 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070011228 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090317208 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071138184 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089687177 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072189327 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063060806 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089697338 seconds)
  done (took 2.369343443 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074789979 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06704815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095556232 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068186987 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066442664 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091964783 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063369374 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08694945 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066902734 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06697815 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088179299 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069518608 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085418914 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071074799 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06702117 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088121111 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069904899 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065072482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088358956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063565898 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089922741 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066885264 seconds)
  done (took 2.656289944 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076547163 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092540095 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161763248 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106283348 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083150261 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079115049 seconds)
  done (took 1.598960534 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096149779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10152266 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068505011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088252033 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097732955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068075651 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091116528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068028532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099919933 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098529685 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069621192 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098529519 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077839571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098047485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095159478 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07599188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088988929 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070067105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067448751 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107727943 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090255575 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078116898 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089781708 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069173745 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090110999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078092281 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098731553 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07724833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067074861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098940161 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075436862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089842354 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079247597 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100030719 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070059193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099019087 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069376508 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107938463 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095439009 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078807929 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090907775 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0759694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098394733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073804873 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099890527 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069178579 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09549768 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06813354 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091234101 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110189929 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075033018 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098363541 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075108857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099667614 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098070404 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089487317 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099853221 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098572308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076190031 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099275908 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077225689 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096532132 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097254584 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079501378 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096043619 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080367769 seconds)
  done (took 6.745633384 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085952488 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108797583 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069781491 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075967643 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074825548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093138511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069411525 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09187606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069157975 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089685545 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132076858 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070309398 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098290966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07806628 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091306354 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069087514 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09092738 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077318422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090621166 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108737387 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069997287 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097778414 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07747871 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098729611 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09873836 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076509351 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090788869 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070080148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08950653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07026093 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095014539 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069182438 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098793564 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068908028 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074976716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067440464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092063305 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073724163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091914016 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074877979 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099991261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108205603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068587308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090867365 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077477433 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068099032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067550402 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092497879 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068983471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090079821 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078678529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100572716 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098056472 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079300907 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090504309 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070072045 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090311905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070074717 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090102574 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075519378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098572682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06941504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110426352 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06873056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068637357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075501155 seconds)
  done (took 6.557245032 seconds)
done (took 132.183818858 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20567126 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187805979 seconds)
  done (took 1.39358272 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07281676 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097282099 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100186383 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129413931 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089308612 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101868068 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099069517 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101634949 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067436488 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089150705 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068894441 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068598566 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153837987 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06817895 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066982166 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09111475 seconds)
  done (took 2.47325825 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102736219 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197821839 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099682924 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088077654 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098707621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097006348 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066246663 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097739101 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073162096 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066066586 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096097074 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071363518 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087474236 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072443642 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093081565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075702451 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065342035 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09560491 seconds)
  done (took 2.654263327 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106286394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146049722 seconds)
  done (took 1.260667915 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.187316881 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139533601 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208309608 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.387321504 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20799013 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284809841 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179426348 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.178006665 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162026803 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175995407 seconds)
  done (took 3.115402581 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104682274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172852996 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282172844 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115196082 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.098901908 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116332793 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119239742 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.101918238 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080807841 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101599095 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100972294 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079744275 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11920259 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076198044 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096438372 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078981674 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122392438 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074819268 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098253583 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076276555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119602606 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067929877 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074971919 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096516007 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076512396 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098615069 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066565677 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087706246 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076327693 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096004807 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080070568 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11509982 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076708269 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129864176 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092918632 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130653652 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077960273 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094514477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075254656 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093967477 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078300876 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076645692 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071820299 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099829372 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067513342 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076962658 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08986488 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066794882 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101857253 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068489039 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100607099 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079305418 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130596857 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088586793 seconds)
  done (took 6.251423748 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.716858842 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127499125 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070614116 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131644183 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117516768 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075594815 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.740363396 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113072655 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199627448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09450039 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110329977 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071919135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102459178 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085663209 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.132124977 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102912647 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11752099 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072239738 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124787254 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122689706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070188398 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115921755 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091676614 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430419475 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068007562 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092201901 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069492185 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069858689 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157624613 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080666884 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070523642 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168906868 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087036081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.146489462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090134717 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069426092 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068742244 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1037115 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208186983 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18390531 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153739944 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068612749 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068986507 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091995726 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090117986 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089856032 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135563609 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081865333 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.143425803 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093036807 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071395324 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089771592 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070794898 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102526831 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080075143 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08106228 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256981725 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091378856 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0708736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072576497 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230438294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080337641 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10324177 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092969966 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.179920624 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070220671 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742545703 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088005845 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068993433 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093290229 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069516531 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092621291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070588626 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140808376 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.366603183 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072028134 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070794855 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090886698 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202032473 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078545188 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091392011 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137079983 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067967519 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090986979 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070926539 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069518122 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163940398 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082507248 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070295251 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091422017 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070181046 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090267052 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068113588 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187055744 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102634093 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08177771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18284521 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090881914 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.137649685 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080647301 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092000209 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080900181 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089205987 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072299041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069030002 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102672218 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119128114 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081224424 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092431051 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06940044 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121904324 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081601207 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090541209 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07935449 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.450069543 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103714012 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068825287 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104001228 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069394748 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137143445 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092639603 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206296403 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069260603 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103369575 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068802669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091201689 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069277519 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136692217 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093104536 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070481204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06950741 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093443583 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081079856 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.182811434 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071125818 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186397299 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158278309 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092441896 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145244162 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069850927 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142401605 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091639052 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071455593 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07076675 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760833321 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070056331 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068307798 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093031391 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17441892 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070568559 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102009881 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079633639 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068356859 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74877747 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08063058 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100702773 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080439691 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092214977 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069246577 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089963519 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071327124 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134849336 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194290223 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071987142 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068563047 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101015699 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13588906 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067501103 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100780402 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077946203 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101685028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069027674 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09232644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081643593 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14238214 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.101708051 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.161882862 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569916595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068973133 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099477889 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.17036187 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089471837 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08625839 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068297821 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105268163 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137596035 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099085976 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255611246 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.139297673 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172884309 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079992184 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106722465 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067793642 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091597367 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080654746 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090997661 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071273257 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.101012996 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070962357 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069499088 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108145548 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068776956 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20001906 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090540127 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080197915 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090072005 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072036696 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106372284 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070362637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069960657 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104425388 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07062247 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10156632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6651585 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078279531 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068200079 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092865211 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.166740679 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.138386427 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068428507 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091782929 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071313161 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.134277403 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.182056498 seconds)
  done (took 31.043322543 seconds)
done (took 49.201086666 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261363186 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176476217 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.253077955 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142736695 seconds)
  done (took 1.941724767 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.151536431 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102069733 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118860224 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065071525 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126738712 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087498532 seconds)
  done (took 1.684078899 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.417499702 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.239834811 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232388166 seconds)
  done (took 1.922366591 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221417185 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236576609 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414938429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.303503517 seconds)
  done (took 2.32345457 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.168619273 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11490891 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067755223 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107793433 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16654074 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211095271 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126744501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175904262 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078635693 seconds)
  done (took 2.302580816 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194459731 seconds)
done (took 11.396854269 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.203797908 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.202899746 seconds)
    (3/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.264532098 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.198064126 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.165210658 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09606547 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.217072675 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107040718 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073681434 seconds)
    (10/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077145894 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.215206108 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102442548 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137719942 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.180383129 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.104392857 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074232879 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.198530856 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192778695 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075031998 seconds)
    (20/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09965415 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073979588 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.133715602 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074859892 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13321848 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202580928 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073906995 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066068319 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.219428561 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098525469 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158958147 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.101523246 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081645474 seconds)
    (33/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.178310482 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072948956 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169124075 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118965296 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103579043 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.153745046 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053651095 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11887123 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147148274 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097076784 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148258258 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13249995 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072907693 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122837763 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.137637323 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205597954 seconds)
    (49/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066813907 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187650632 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051219984 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065877397 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090253404 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.170473642 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.124350647 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194571466 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097804836 seconds)
    (58/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054788646 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073914177 seconds)
    (60/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.214615731 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.206223821 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09960936 seconds)
    (63/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.126701913 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066429304 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.204141737 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092018409 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121254455 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052355755 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101359053 seconds)
    (70/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193001193 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051851107 seconds)
    (72/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.116912324 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 0.067234961 seconds)
    (74/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133288099 seconds)
    (75/309) benchmarking ("sort", Float64, false)...
    done (took 0.127322449 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162920759 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169485585 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.102693147 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066343498 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.204355528 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095658924 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12492455 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069789096 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095925733 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184732013 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.13828077 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165469039 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173006617 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175587846 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167744415 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134933047 seconds)
    (92/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.147346929 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100201256 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086652901 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106287983 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090014998 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114221131 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.181178962 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053598515 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073849211 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0975497 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053156911 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052790145 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10149281 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068035846 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07826344 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094322794 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144491762 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.086187852 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078163372 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053042917 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091202798 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072636816 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05276312 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052230441 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119384649 seconds)
    (117/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.187492819 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071284455 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.133336603 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101803353 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052466383 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116338752 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070313781 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073321834 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090238494 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072975625 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073362774 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.229352205 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090165516 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.271405862 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102289057 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076155494 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.162927162 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077824063 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115610213 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052292282 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097222613 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06422926 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174881632 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073207068 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112209004 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.090710951 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089084491 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169647832 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097476563 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066505271 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17153629 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066785369 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076780381 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098529824 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052189403 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051273813 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098025913 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052420679 seconds)
    (155/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067333865 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188852978 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08855546 seconds)
    (158/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090480049 seconds)
    (159/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068103881 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090665965 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067982307 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069405154 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092698657 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066840533 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051418315 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090725474 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110360874 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07822659 seconds)
    (169/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07708846 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170734797 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053354581 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066345143 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091994989 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076784548 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096821493 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076642333 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06100014 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094680289 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076791533 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073461154 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064901998 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.135998064 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136854739 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069208017 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090559021 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073564516 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05192753 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094290054 seconds)
    (189/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.10109065 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109124344 seconds)
    (191/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079308099 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075400357 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115621346 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.138435626 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10386507 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.164241172 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077585697 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.160327178 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09421404 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077936443 seconds)
    (201/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.090972037 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088705652 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088031919 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052529841 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114909388 seconds)
    (206/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133142814 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090362809 seconds)
    (208/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210296938 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099502484 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073726822 seconds)
    (211/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091003942 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089435858 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.0515154 seconds)
    (214/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.074932047 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054044345 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114837268 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114228837 seconds)
    (218/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070230276 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095160752 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067981166 seconds)
    (221/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061406412 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087402366 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091389731 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079753292 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075827989 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080998984 seconds)
    (227/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.085032888 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053878334 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138174315 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076715209 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067935225 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051026982 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146161127 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069253901 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.077951418 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052973644 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072950474 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051508777 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158890661 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051496631 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114198426 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062761835 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067979117 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08986201 seconds)
    (245/309) benchmarking ("sort", Int8, false)...
    done (took 0.164356388 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097837802 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.150756233 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051918149 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111746505 seconds)
    (250/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111598852 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066672659 seconds)
    (252/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133311625 seconds)
    (253/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06147688 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07273709 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096322366 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.0741248 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094995045 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078208994 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067332519 seconds)
    (260/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.085464749 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07496154 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066442956 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091626633 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052746166 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065955539 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169626617 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051276988 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205631953 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054632214 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078647129 seconds)
    (271/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053624815 seconds)
    (272/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072115973 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075124652 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05451067 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08181673 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051208664 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115245442 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073657045 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077325856 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066048822 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066847189 seconds)
    (282/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113845297 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065166495 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053116402 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122205079 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052013858 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097913886 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075218993 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073022244 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118222206 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142427906 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077717467 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06895012 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066229242 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09838275 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 0.129290182 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090187119 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073644781 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065665142 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077815426 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067562858 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086699467 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097454363 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066622285 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105717454 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053098226 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053585585 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095676958 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05647685 seconds)
  done (took 33.207682753 seconds)
done (took 34.246831239 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083727728 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115300083 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076290802 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092278409 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105237133 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076638534 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.097365124 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078225215 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105221115 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082487119 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102862442 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055927656 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074306043 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098440888 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07563125 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115936466 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078642706 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097096874 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075346513 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065387171 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09763818 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066782297 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067176329 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079177693 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079219003 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071790884 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097582479 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074695462 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089575262 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067258011 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069271143 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097547194 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066492313 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078124068 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096657293 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074122305 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09814617 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077970114 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067635564 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090098173 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074784112 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065683812 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097554138 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074528506 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071330327 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096319092 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073703921 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102586098 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093269385 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092145408 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075500493 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076511557 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102337595 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072731204 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09380933 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074991676 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070948873 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116760174 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074461587 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092028312 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075088844 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074221518 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096469444 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073964027 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072480106 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074871266 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074605822 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098458384 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075906673 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071279505 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091175741 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074286754 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068945175 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065732414 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075641275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103364336 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066845698 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071754411 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098219824 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073091411 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065023893 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093710397 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068536846 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072696796 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093311153 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055612524 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069978334 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096849306 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066291688 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096679739 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074194401 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07311853 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091827321 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078035471 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065183749 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095289796 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067879728 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066140786 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092518763 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070906657 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065606978 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092423967 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076386739 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067805354 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09670492 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080320765 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090689605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07339735 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065473583 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089667885 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081072459 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09937082 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067501524 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068272568 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089488678 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074262685 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065636108 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090394251 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066952106 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066414061 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096566952 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067178767 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068470602 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098191621 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079006444 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089466237 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07061925 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068105335 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090624468 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072757164 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066050415 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.09049688 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069482096 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062324348 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092175851 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067531196 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073308806 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09261998 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075274482 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067544417 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099022813 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071004884 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094808566 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07315446 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065659806 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082303632 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070419283 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068156316 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091341762 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067917116 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067899843 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089988316 seconds)
done (took 13.348765994 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069810533 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170234238 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.123861244 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096943112 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111063396 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067597267 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076647 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128645624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091865232 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104827667 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112052637 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08583488 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.139183817 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066324639 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065677519 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069336583 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06679518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115215251 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125628576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088306051 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136056684 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065233846 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121364549 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090544044 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113646448 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126806327 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06817957 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070538821 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069535004 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09103207 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114002659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071138918 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066557784 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124499092 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117826292 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086003815 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090449863 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085397575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066701743 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091463152 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088877006 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124914994 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105287911 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082777542 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096129654 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071038022 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068544119 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109643512 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090848256 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07884868 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086051158 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102425562 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.098388543 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082219176 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089292065 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088426546 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106458771 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069945516 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066695446 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093583449 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066855281 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069683349 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113684454 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115100729 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071515316 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106104576 seconds)
  done (took 7.276044248 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087367371 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090672639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.109850695 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083812899 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.091264171 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06727025 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067097181 seconds)
  done (took 1.699477327 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071331804 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088646931 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114661253 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090298127 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110685509 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088369787 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101748253 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068636647 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083255899 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094267528 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087851062 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128288196 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069233641 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098662016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092458598 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067350531 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116371627 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067541317 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094991699 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091979573 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093570187 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088512082 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068824323 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092548864 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081420765 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091369918 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11622577 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096575673 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070181478 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070556837 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090513691 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108990882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106258982 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075847312 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066629081 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107736317 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08182173 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090355446 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084562559 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096338592 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083148248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068037864 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093788779 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067033357 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072248693 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102616317 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069288708 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067976565 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096182451 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087080671 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092695951 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082858317 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067208405 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097220155 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069210221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096165433 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079104863 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068187226 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112043328 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069766429 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108859106 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085356352 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081198295 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110532678 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069973848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106273905 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081752605 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093954764 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070942227 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070767389 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1088439 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066667247 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069256362 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104200436 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069920619 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115079291 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091149825 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068555846 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104664756 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068338273 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092218613 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069114641 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090037212 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096109531 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067944438 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095202447 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071997797 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065268924 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091501913 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072796037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06576032 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093897468 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071563065 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068215635 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095384817 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08460561 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092453799 seconds)
  done (took 9.48908261 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072705482 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068870151 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094241528 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069536527 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069112392 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093659424 seconds)
  done (took 1.580064735 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097872297 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094299139 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082682141 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072433406 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.131096057 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081219152 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108788207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104255111 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085836072 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079694409 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108054877 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082212142 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114716866 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073755241 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107298859 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072764315 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107410475 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07737391 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.104211835 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075621376 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113034503 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074471712 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073886217 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107750437 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070964207 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097698367 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078157729 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104055709 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08071236 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104810194 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075526094 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071352824 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096630999 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079451414 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108020018 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071177075 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098554077 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07289128 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101331609 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072138507 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081831882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072449679 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073865059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099952495 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079923494 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096938458 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072679438 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102098895 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082602368 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096291263 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073689515 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072658591 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096591096 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072729114 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095607401 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080907163 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095868736 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083782326 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07355042 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097229569 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070708193 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096988228 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080909873 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096631844 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081847732 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096732432 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072893913 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073937428 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099322226 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073149212 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096554458 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071694602 seconds)
  done (took 7.440428108 seconds)
done (took 28.580533759 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.682456851 seconds)
  done (took 1.792557637 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.772370577 seconds)
  done (took 1.887521188 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.254538731 seconds)
  done (took 17.372926316 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.60581726 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.779866983 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.853558857 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159718727 seconds)
  done (took 3.512045612 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.913111463 seconds)
  done (took 2.045260481 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240979476 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226590538 seconds)
  done (took 1.585461572 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784109166 seconds)
  done (took 1.912679255 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.263675778 seconds)
  done (took 2.381839533 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.296455248 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18034051 seconds)
  done (took 1.609953327 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.49465614 seconds)
  done (took 1.62499912 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.278005069 seconds)
  done (took 8.414755481 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211298955 seconds)
  done (took 1.35495303 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270304236 seconds)
  done (took 1.408124511 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.366798797 seconds)
  done (took 4.498500335 seconds)
done (took 52.526191521 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081536228 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082009302 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107211265 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078884421 seconds)
  done (took 1.475977121 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080422433 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072390663 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102193458 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072957047 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102059124 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073817776 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074063454 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075800504 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071625076 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100908787 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074270241 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072261871 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101982558 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07519081 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096649293 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076808704 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100915642 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074436264 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076101783 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098754845 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072067066 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099176691 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076850223 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071947137 seconds)
  done (took 3.133416749 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081456834 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074055663 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101065652 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073124351 seconds)
  done (took 1.469494522 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081168762 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091501211 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116596078 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077691336 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.120192453 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111900735 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070506073 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068678174 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096876978 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078187624 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068355204 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.123601904 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113662822 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078792074 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078685643 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092288097 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069419177 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086072459 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076295185 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07694104 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101173211 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077644552 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093598016 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090458452 seconds)
  done (took 3.280578655 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081052846 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105202457 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104887616 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087032575 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117091889 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066269078 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101204751 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089873948 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150812564 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065673055 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095961862 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067334793 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072812932 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091007238 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078323448 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131638649 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111072947 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069068886 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123335171 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065651986 seconds)
  done (took 3.018597033 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07590714 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070019872 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090832056 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070704171 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077837028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098566955 seconds)
  done (took 1.631223389 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072032521 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06925731 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093679215 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068832642 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071954611 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093023251 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067753817 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067141995 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092350993 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068314777 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066543695 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091980617 seconds)
  done (took 2.063162075 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.40997338 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096438578 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069765248 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091378941 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072080339 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091715087 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082032734 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069170024 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117419895 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067749146 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067107777 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09556347 seconds)
  done (took 2.470901447 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265770715 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077927237 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29560446 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134629169 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143177831 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144987788 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133079935 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140543609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173762541 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131436026 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224459013 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199262103 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134567959 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167255421 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116590489 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099865491 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215178926 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192771203 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132305859 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221322879 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175396599 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153128849 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175542161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129178831 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135089726 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152072499 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072217866 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10827545 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230037044 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16159297 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176523252 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138553393 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122171291 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233309065 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22843505 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172191712 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162474201 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085517739 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156287493 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163297127 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23007736 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117667301 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196145244 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135985095 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107638523 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140719969 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116146788 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150202273 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135719596 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090732544 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201966742 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2388811 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169164042 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087042663 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13865197 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143191708 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143893815 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101304257 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239802804 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19069588 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154312185 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097067164 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099661383 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207668139 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15994144 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136248657 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155707215 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120211613 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162810271 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152777288 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148663194 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199398331 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.160180506 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114111636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146256535 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170028701 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157668544 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197677881 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176580155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074374949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153068745 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131372746 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081694661 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167812857 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074938166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232141367 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125857479 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107580123 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141800751 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135946489 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136748074 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221324174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175525962 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130083705 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06665282 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130900609 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148590836 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178088504 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115378192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135534075 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145692295 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079645597 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167787273 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101821184 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15078279 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076166066 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152462957 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157688727 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104419336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153295496 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127880564 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101523348 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161061426 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187393721 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115432597 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084820813 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196166367 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175720878 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107129265 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200389902 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187715904 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126161225 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130590285 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181404707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238000714 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089416208 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221240113 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136325947 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08412127 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115447489 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152630299 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141211536 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151158675 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082302355 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147517764 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226047584 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101268503 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097770838 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162444004 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107331621 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081496914 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132411013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130074348 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12130407 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102870973 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133338315 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196801939 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153244201 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107951195 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180909482 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101091555 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229939878 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116264307 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101488462 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132297708 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070422075 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165241084 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189810853 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10748216 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195731887 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151354223 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13364629 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146235872 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108580052 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169648665 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080022798 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096016071 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177481364 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138520155 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137874826 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.180503442 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132056328 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157130032 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148975924 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165042334 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160520876 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156713028 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135075027 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114298263 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113676612 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182318624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074122098 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120128254 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081405063 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131813809 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124991675 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082903649 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199750706 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155246965 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126453093 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113691606 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124503331 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176197445 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104842823 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158134009 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146553009 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121611888 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183039109 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208540395 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162740184 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10152405 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204473278 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070801682 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073866233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088550806 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154237592 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111922863 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083740963 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173089014 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178789061 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158830237 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168318782 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110520879 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151910208 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184722788 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097553634 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117094314 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205587353 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151268932 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131206893 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092697971 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098028858 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200398338 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109529746 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239799205 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142505452 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152421756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213711602 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126989884 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082371092 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135573002 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166804161 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134215128 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17437228 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12792704 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116857058 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138525267 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07602607 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130243939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157447904 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150488331 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192639951 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116015641 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190950372 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078166601 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146324065 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154932777 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152279697 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091061521 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149163144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193742075 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123100634 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146962664 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211963616 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081218921 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153481301 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237148958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175952467 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112861488 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139396438 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147522165 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129881212 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148705503 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171749661 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138970225 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134352897 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137686939 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087044931 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117023638 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099022239 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133350134 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12365584 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138203113 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114353378 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12305228 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164450765 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132416542 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112240732 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147143857 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125491035 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090771051 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125976894 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23385948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148977663 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202669522 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127336833 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20303845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19759417 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101818414 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08188594 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105281938 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171387734 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084472062 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160144891 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126520976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133811029 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154354623 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17300644 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123770544 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070233958 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137685914 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163830946 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140532311 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097717247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133334998 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197143825 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129922282 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080005541 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142894902 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133741116 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103326662 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23228145 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089068053 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099787284 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104123447 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082822598 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157555034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182973092 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08161842 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153752901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149952257 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110375901 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158627329 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131923706 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10090167 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143890543 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180951765 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158130055 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090713358 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142030256 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187051382 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18864771 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134884133 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123605761 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204497208 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209744931 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19239853 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117915282 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143157449 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143697593 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13702568 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172464231 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11061048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196070891 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110495868 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166983481 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133981835 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136051263 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161050509 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126327335 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093256326 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206440833 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148033862 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084456225 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105833471 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148752335 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150433371 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136739455 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077229946 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170005453 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101359916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162219933 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228318259 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083838584 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134958899 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123074 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082410362 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13819655 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13251073 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087816835 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148921071 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235378408 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088949762 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210068942 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170711217 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143379167 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196165448 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100891171 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664055194 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107194253 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18524493 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147379243 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232705852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126719941 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147543987 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13767219 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154802945 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176328188 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1341433 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203854712 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163500857 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14752572 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080047178 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131852755 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133267401 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117352275 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106319927 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14285117 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146628082 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123084977 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145672554 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154107687 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081772402 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093977974 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217366275 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146760634 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177197394 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170684524 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114112017 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14712355 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170893475 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108396873 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153363252 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18437349 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136557374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12814737 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108927525 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104248733 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229025328 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074194064 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222639607 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149939345 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138326202 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142363925 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145404056 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161519581 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138052573 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152142182 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121822623 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140136294 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142506917 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083445414 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106727212 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13237439 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143943579 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099720742 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127868106 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.1239567 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210364031 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072297275 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12626001 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132512399 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178406008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236171067 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0879874 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112665013 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148780876 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144178968 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142887367 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150705688 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080931719 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112556808 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082728792 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131855681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110069981 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142301911 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1343878 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141532338 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194914756 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082258107 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252622755 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095764802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135414924 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097643676 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08145478 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125292354 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126290001 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138282119 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103110783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230602512 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096147665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120414182 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122156692 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074759908 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082299387 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157954465 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141005128 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148867178 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099885151 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091503328 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139572416 seconds)
  done (took 70.087980901 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137538352 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108523148 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124839849 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176973792 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150881013 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242042376 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184798952 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228275973 seconds)
  done (took 2.571739621 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072394155 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121862308 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100711813 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.110998522 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068381628 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.096250449 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.251765448 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079715977 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096963141 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089985961 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.108164445 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095934758 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.494757973 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067006551 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09374795 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065213844 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094635268 seconds)
  done (took 3.32214893 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.439186332 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.671892941 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.42393972 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074717478 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.055999408 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113882985 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.608580824 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170414425 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095464322 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.449753003 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.734090778 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160966459 seconds)
  done (took 18.215196715 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079152581 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072283593 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113532743 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084097641 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072316543 seconds)
  done (took 1.644283064 seconds)
done (took 115.517383606 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084628771 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.365740598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054070036 seconds)
  done (took 1.680891242 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08660028 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08513105 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113228388 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082742204 seconds)
  done (took 1.602291894 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078436263 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077598334 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112165229 seconds)
  done (took 1.498258821 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.286139891 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139632434 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.11696095 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085671565 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078058431 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105375919 seconds)
  done (took 1.501201524 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074864697 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074548565 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100296726 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077281139 seconds)
  done (took 1.555183661 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079328248 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054347337 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054955323 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083947237 seconds)
  done (took 1.508840551 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090460544 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078455148 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107090724 seconds)
  done (took 1.504807984 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110141106 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11340286 seconds)
  done (took 1.455401326 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085581228 seconds)
  done (took 1.315514801 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10341887 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142659252 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158184174 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139115324 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167190813 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137805309 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086857176 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116892455 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105605107 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089063771 seconds)
  done (took 2.484221819 seconds)
done (took 17.963124512 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081393048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393416297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362175212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090658041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.698981147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356104105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.056735889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091663954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150033289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09484729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085900159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647081089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008968089 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324018311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995322469 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325736757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675923381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070510637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067649752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09543458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014331824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06707495 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096013934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068362406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67545295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372679451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068475344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.348199059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068547399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095866065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356565433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068765535 seconds)
  done (took 16.197271038 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073785838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144999968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075169877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083753242 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099439076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069616052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098594219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070433942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123971955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066828627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11331383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069101355 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07199731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097456212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088152641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067988945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067778014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067719442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098511049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069455879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087168364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096697696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068853634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096160845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070340767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079782374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097775924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068960687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068124006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099236929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071180684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068097208 seconds)
  done (took 3.932875805 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119254537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153834511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074726521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130303867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113111811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098374327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142664817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122820153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15622399 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068121677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112500902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069754199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128438058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070461156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087299783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096895035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069213547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095873513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069980679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069235959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115245273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068439184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094175256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070850416 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068882055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109682538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069528781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067779914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096677031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06993993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099507015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069927063 seconds)
  done (took 4.292850253 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076200359 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07633118 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11141323 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084160561 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068752535 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100611574 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072566508 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096400709 seconds)
  done (took 1.931128796 seconds)
done (took 27.593881898 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082499792 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070323881 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101681482 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081817466 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073068767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.107333933 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068340276 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101826342 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073971 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072561359 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103923766 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068672341 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070996656 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095858004 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074980786 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067593027 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.108640744 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071236108 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108206966 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08046968 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097904457 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074820028 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073814193 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107786682 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079563474 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.106851752 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079099434 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071979647 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097973096 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07100914 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.10364331 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085603623 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069088046 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.108378655 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068351561 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068383357 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101361027 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068160552 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.10795026 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077788674 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069076631 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106002437 seconds)
  done (took 4.811249034 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092315996 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094545719 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11583016 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06255561 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066352773 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063991672 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087138265 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089917759 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060602153 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087537218 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.085441639 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061071615 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062730754 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053960442 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.088608729 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057549811 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06145855 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084609604 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06041817 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059575497 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057629436 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.082449582 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061161788 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062525739 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084804829 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063320662 seconds)
  done (took 3.153985353 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078811925 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085750459 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117213299 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127710005 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134351313 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077200552 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107778263 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089073748 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113382987 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069130782 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071242025 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122640106 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089638562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102414563 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072081864 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084422421 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110917515 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069976583 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101368656 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092516333 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084293201 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106790689 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093579545 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109297785 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068537043 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069808416 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100797563 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082553827 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099953661 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078660624 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071636003 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099921483 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070037901 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077943158 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070539858 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068114631 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12046069 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077410254 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105926898 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069388521 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070825561 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096742411 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090483697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15092751 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068621526 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074386982 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104239878 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077451826 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095465412 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087433529 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078548548 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096071546 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.0715044 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066585473 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096659409 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080938612 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097367175 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071969177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076089451 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099042683 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080596191 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070464328 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112515799 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068039334 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10281557 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068129899 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068828247 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095320032 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1026387 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096939965 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109520375 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097185623 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070294638 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076108611 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104125448 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074270599 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068074112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112027186 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07746761 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099389802 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077411385 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070567837 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099784252 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08828531 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097248128 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07075456 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06891695 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101937323 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071789976 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069007347 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109423605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068336145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070633973 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082795361 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066514943 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099337488 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074188829 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072245334 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097253584 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079860598 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101919478 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0698777 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077167027 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097492918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071631026 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106577328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075605363 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066327581 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101502887 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074768464 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068531443 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06837768 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069536145 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099281506 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078453132 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075006661 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102189307 seconds)
  done (took 11.445666559 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190975549 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154551028 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.100719333 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176002983 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077813365 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079467997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1776986 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124163913 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068387039 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067825105 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099660626 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115152413 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137088835 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.151039142 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078933505 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097714396 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083972177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146643835 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.177882735 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142392537 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114852568 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076856392 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099852219 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069737647 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074257297 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.112386428 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090910702 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106388855 seconds)
  done (took 4.450496877 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083859961 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12880155 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074659188 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.0894314 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12058184 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068201445 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099550951 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070370402 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080013659 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109955788 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068077973 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103354701 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075057338 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102186423 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070050257 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074302802 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.104597307 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070278846 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071063681 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.103257282 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078696252 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.111293159 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072395238 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066892231 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104127396 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067258595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.094151229 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085237627 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097615054 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090919577 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065280885 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105385214 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081413816 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098005684 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06869661 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068956117 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097226085 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068389368 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070027094 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095720226 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067200055 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057690094 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096458942 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081348484 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103930226 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057879559 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073220834 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102554367 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073656859 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065219182 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100678699 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071476536 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070932556 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105192794 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073136265 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102156055 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071236957 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066688441 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074450426 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066924089 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063977217 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097184775 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073395913 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066337747 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106404761 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073230689 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094760828 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069219617 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069235759 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102569692 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069017254 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070935794 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.0944489 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070585626 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071913526 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099280502 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069520094 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066317534 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097673952 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068780504 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055551888 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098366311 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054680732 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070761976 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096104136 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067076243 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095437274 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074678783 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079706036 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068886557 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072768388 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09922691 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068640128 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07065909 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089878529 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07232756 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083199943 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11305831 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067616962 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095624374 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082707663 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100436616 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068744496 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05702363 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103144706 seconds)
  done (took 9.905118753 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096941761 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087779012 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099552644 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083649928 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.11995215 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088785167 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074280918 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106537095 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069660834 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.08131835 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072583604 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075438056 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.099733455 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078284509 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094333895 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108304015 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06986605 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106046567 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073822046 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100673364 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112862007 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082349549 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10487436 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06975832 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075692802 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110132275 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091246112 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109470503 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079252841 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075280767 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10964907 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090421347 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.10390838 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073081834 seconds)
  done (took 4.341217083 seconds)
done (took 39.349006671 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.325278098 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.554146465 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.316245827 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.333039335 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.371810464 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.348385985 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.334698214 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.329482414 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.819473817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.321835335 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.563421666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.114046284 seconds)
done (took 60.994783485 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.369852858 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.472943411 seconds)
    (2/2) benchmarking "String"...
    done (took 1.607260166 seconds)
  done (took 4.344082856 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.696218338 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.265038534 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.582758277 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.324183392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.321043016 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.626543829 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.052876505 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224616421 seconds)
  done (took 28.659153028 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.323755881 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.712587432 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.998091939 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.006041687 seconds)
  done (took 19.305118008 seconds)
done (took 62.634872472 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.312063644 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.33798576 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.356566142 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.323009846 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.43771017 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.343352198 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.718845186 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.358625821 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.327588413 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.310871117 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.335879156 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.325011427 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.324601882 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.74427383 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.321480372 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.325874362 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.370237406 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.861392498 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.727541697 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.323833443 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.323982228 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.344771266 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.349491448 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.326296552 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.37996802 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.325094894 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.325506781 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.323505619 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.810537608 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.328503214 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.324868644 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.33054679 seconds)
  done (took 194.242028125 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.325300423 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.45854005 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.589721431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.359556951 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.885360619 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.521277154 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.461071606 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.963359037 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.342734099 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.339770568 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.466349506 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.323336501 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.51064594 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.29026523 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.335467597 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.330557112 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.650067758 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.548891514 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.340228858 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.556467546 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.33702254 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.30775194 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.24286168 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.452807905 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.367944178 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.396862236 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.352837308 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.362597975 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.516856458 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.57916684 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.352513193 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.359867599 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.942951812 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.184468449 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.333329672 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.366108344 seconds)
  done (took 154.320386185 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.886363561 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.32595975 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.3261609 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.327070829 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.358977283 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.327217706 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898155185 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896780616 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.836936286 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.557328468 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.386729822 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563229108 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.324604025 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.420176502 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.324949477 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.339496873 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.326219539 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342453543 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.35171611 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.325957789 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.327041978 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89793298 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.340122032 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.324754985 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.333310929 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.328389821 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359820678 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.725547234 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.461091266 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.32563945 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36026259 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.651095288 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.375111508 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.326130866 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683740664 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.453019988 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.437064728 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.326736943 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362089536 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.328579498 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.600926167 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.327232895 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.328635634 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.331505485 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930649684 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.327125895 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.901483239 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.330045104 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252044182 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.327000442 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.328114312 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.954676361 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.903225602 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.325738393 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.328073493 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.331680432 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.329203944 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.329073056 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.362147431 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.999157056 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.430013614 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.327845545 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.33354061 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362022749 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.330324691 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.35731406 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.331950388 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.528126722 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.38684121 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444479295 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.902879269 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.3302385 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.424396313 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.447789004 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.327368763 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.329599434 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.329218928 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.330379596 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.437091346 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.32878382 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.74789243 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334316939 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.331918917 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.392654417 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.424558241 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.329867262 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.691413925 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.331093871 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.329428536 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058067532 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.42203046 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.32851428 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.330094143 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.329656032 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330508892 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.751746511 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901679676 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550655395 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.332115976 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.993057136 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.331457349 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.761423627 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.874598668 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.93526255 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.330548052 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.439226815 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.333274067 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.332967739 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.329747627 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.360239214 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.331149359 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.331889717 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.332596326 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.393974762 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.726914894 seconds)
  done (took 360.813249226 seconds)
done (took 712.525433627 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.018292145 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.013053078 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.127297921 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.008319152 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.97153857 seconds)
  done (took 11.407774357 seconds)
done (took 12.677966537 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527987461 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527200813 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.393885389 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528949457 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361489449 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551795077 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507377447 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.35084446 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.440715793 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.41627584 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439432889 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.386720742 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.362691751 seconds)
  done (took 20.064933005 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.677401731 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.663461859 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394029676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.665094513 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.371073545 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.658548022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.541944307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.545515652 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.54434201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.345274813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347314399 seconds)
  done (took 18.024433074 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.669679721 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.657432002 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399104149 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.670730027 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.373800328 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.666575808 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.534252249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.545523765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.530238386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346370004 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348126577 seconds)
  done (took 18.013871375 seconds)
done (took 57.374189091 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.342612408 seconds)
  done (took 2.61443316 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.375468554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.542429131 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.357467529 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.349293392 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.343153121 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.342063658 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.348061795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.345067508 seconds)
  done (took 12.276417276 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.339338907 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.341512706 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.341588883 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.341939023 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.339567561 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.340228402 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.342441703 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.34261655 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.342020252 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.339320708 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.339944056 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.342809727 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.340445067 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.339948355 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.3393806 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.341869543 seconds)
  done (took 22.729216198 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.341427339 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.338933025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.340290215 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.340748981 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.340542301 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.340671904 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.34102244 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.33937882 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.340676405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.339350823 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.340467924 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.340453363 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.340588891 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.340529033 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.34093685 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.341200712 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.34022618 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.34157479 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.344972 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.341051656 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.342741905 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.33904223 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.341764285 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.341820601 seconds)
  done (took 33.456825585 seconds)
done (took 72.347393536 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.444800649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.999924595 seconds)
  done (took 9.718326513 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.344301856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.344620155 seconds)
  done (took 3.965685155 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.343478232 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.34523417 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.34400408 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.344088739 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.345578001 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.346231708 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.345485681 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.344888375 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.344670428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.344416764 seconds)
  done (took 14.723554465 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.34466059 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.344525874 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.342179004 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.344800391 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.344995645 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.341272776 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.34459894 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.34400117 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.345457661 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.341540559 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.345561742 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.341959837 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.345784658 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.342682183 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.346759153 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.343224867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.342235015 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.342229754 seconds)
  done (took 25.465282392 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.344954361 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.345242669 seconds)
  done (took 3.965810403 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.342662436 seconds)
    (2/7) benchmarking "second"...
    done (took 1.343597338 seconds)
    (3/7) benchmarking "month"...
    done (took 1.342323901 seconds)
    (4/7) benchmarking "year"...
    done (took 1.343510663 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.344886141 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.343021525 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.342450701 seconds)
  done (took 10.67941225 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.346578025 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.527267992 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.609512679 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.043560939 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.348292586 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.349811687 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.272732305 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.349439843 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.351395807 seconds)
  done (took 15.476154576 seconds)
done (took 85.268359706 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.353249831 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.336736181 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.46803155 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.3573503 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.35178454 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.680534305 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.393141672 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.599915319 seconds)
done (took 39.818066626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.33806773 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.095773833 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.140107352 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.340069378 seconds)
  done (took 11.852862105 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.326966845 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.291274887 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.32959095 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.391172385 seconds)
  done (took 18.620530678 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.990266845 seconds)
    (2/2) benchmarking "read"...
    done (took 1.674678523 seconds)
  done (took 4.945226443 seconds)
done (took 43.033860638 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350364867 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.348098036 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.348040685 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.34469655 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.349351698 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.345323111 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.345216538 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.348065917 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.349162396 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.346525932 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.344428567 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.348113246 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346857612 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345416469 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346909446 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34917432 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.346456934 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.345330603 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344172651 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34382503 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347463919 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.342396463 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.34647787 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.345379564 seconds)
  done (took 33.597043242 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.349036124 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.346908173 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.348217472 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.348054925 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.346419343 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.34997629 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.347598117 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.345582547 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.348358656 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.347179428 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.344827596 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.344883521 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.348075796 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.344556138 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347334216 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.344395322 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.34793861 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344898686 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347840164 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.345972884 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.348063929 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343479601 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.344701107 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347010472 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.34484146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345335053 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.347065547 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.346069094 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346390935 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.342668184 seconds)
  done (took 41.676240092 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.352415756 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.356297816 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.348568643 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.348044875 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.347202567 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.346623065 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.346983562 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.348034848 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.348437498 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.348176234 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.347187141 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.350188427 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.347357326 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.347533701 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.34742353 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.346733073 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.348660002 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.347139104 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.348400362 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.346272644 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.347104153 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.349240339 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.347493853 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.349026511 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.348883345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.347401085 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.348036803 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.349071495 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.348724841 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.349494578 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.34955832 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.347453238 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.349913796 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.348942129 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.348673453 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.35006542 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.354720324 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.357473781 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.348727912 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.349064857 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.349841429 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.350366847 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.349385312 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.349384337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.348525925 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.348408384 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.349769916 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.351010082 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.349557018 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.350552439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.350034463 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.350059297 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.350740591 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.349481641 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.350541616 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.350732896 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.351913457 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.350959045 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.350776969 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.348426513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.350622745 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.35169283 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.349119654 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.352336643 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.350843108 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.349857182 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.348255958 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.347160877 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.35139513 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.351247884 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.350326913 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.34911131 seconds)
  done (took 98.443355635 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.350455093 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.347695332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.346330545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.34895928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349253384 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.353265154 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.348674765 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351072292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348069818 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351713008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351182616 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.347300605 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350871378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354021646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.350710863 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34753382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.349981702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347801496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.349167958 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35243582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352450404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.347723813 seconds)
  done (took 30.978030927 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348899078 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349353002 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.348391085 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350111232 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.34756238 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351575411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.350054952 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350850517 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350668733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350428119 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347773598 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348757115 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.350574837 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347768245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348609451 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.347391751 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352527001 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348833487 seconds)
  done (took 25.570169892 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.349211398 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.350851771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.351479597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348583531 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.349591053 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.351152882 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349413838 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350813509 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.348988056 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.348350148 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.35028219 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352318374 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.350424647 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347518778 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351236257 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.347976822 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.350708718 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346979321 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349888892 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346689126 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347983718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349957155 seconds)
  done (took 30.97718268 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349097359 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349860145 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.347040157 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346607259 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.345762574 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348350698 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.348729963 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.34735756 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.349624781 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.349630872 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345479515 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.350016132 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.347457419 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348171865 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.348786096 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348127291 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352356957 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34906821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349748116 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349035738 seconds)
  done (took 28.253421305 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352340166 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352480116 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.34997692 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352476708 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354040855 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.354261204 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.356532635 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.35284098 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354406448 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.352874475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.354201876 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.353095702 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352293184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351748042 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349560974 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354837324 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355480636 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355322962 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351155035 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354040762 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.3540163 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.353130625 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354932355 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.353469877 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355050458 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351752322 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353130345 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.352900276 seconds)
  done (took 39.174366834 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35074988 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.35140953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.3498647 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.346778582 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.348019477 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.347638296 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.347705445 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.348665031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34984519 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.348573967 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.351409278 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.352639212 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351894571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.349555104 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352701131 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.353203452 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353760078 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.349109283 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351537961 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349440294 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.353061231 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352620219 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.35392854 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34990442 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348820489 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.351161407 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35150122 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351506983 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353090608 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351063267 seconds)
  done (took 41.80479341 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.371870571 seconds)
    (2/2) benchmarking "in"...
    done (took 1.372830273 seconds)
  done (took 4.029849439 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.349445386 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353614648 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.353576428 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.351561474 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.351536683 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.351942612 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350891054 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349080376 seconds)
  done (took 12.097781861 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.351601742 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.351090799 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.350931192 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.35333707 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.352741567 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.353670841 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361374849 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.368357853 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.353942593 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.351216702 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.360795991 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.360012891 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.356553234 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353558184 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.351669339 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353350513 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.352586835 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.353159962 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.352793534 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.350202973 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.352767163 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35367135 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35585751 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.34937497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.35421378 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.36772205 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.360582378 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.352177689 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.352228495 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.35780606 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.352721025 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.349092074 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.355056338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.353090828 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.351843777 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.35229145 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361613712 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.371514108 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.360587327 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.352004665 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351311187 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.349498898 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.353344313 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.355105411 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352466271 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.352240022 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.350903297 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.348560829 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.35181495 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.354132463 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.358060564 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351065725 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.349448969 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360581847 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.35513464 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.360354672 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.367893906 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.355639892 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.362948032 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364929823 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.366604049 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.361001775 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353401189 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.352055876 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361185934 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.37847986 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361904355 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.365284496 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.349726463 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.350879794 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.362764055 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368079773 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.365500202 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.352981829 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.352531604 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.352266187 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353795456 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351913613 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363151957 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.371307043 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.353655615 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351801394 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361047247 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.376368639 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.352709269 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.351499359 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.351913005 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.35209961 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.353159353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366212029 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.368340459 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.352627964 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.353712246 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.352772758 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.355374976 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.352879502 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.351406932 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354899857 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.350395758 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.353367394 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352949544 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355829931 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.364268836 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.353702562 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.353099642 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.362170126 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.354378698 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352972116 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.365101715 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.353810007 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354250263 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.355587187 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.362313656 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.351308678 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356010077 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.364067858 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.355446666 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.356426574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.354456806 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.354347496 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363379145 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.384176689 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.355047554 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.352563083 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.359782045 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.367269571 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353751197 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.357144613 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.358674704 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.350933761 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.349701286 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.355156573 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.353534206 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.356391894 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.353468611 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356803579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.349119374 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.352150912 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.354372356 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.354261767 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.354611945 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.354862556 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.354913812 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.357213113 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.353819364 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.354501886 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.361787513 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.356341478 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.353295996 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.3552273 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.351611087 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353998402 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.355447983 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.353682775 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.35317083 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354254345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.350970444 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.35362951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354994228 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.354857099 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35237621 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.354286812 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357874143 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.35367214 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.35809441 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.353196992 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.350566941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.353058961 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.352913319 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.352952344 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.352063139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.351682606 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.357484296 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.361400273 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.354016993 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.354091184 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.3567684 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354362069 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.353455784 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.354027743 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.357394326 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.364322964 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.353708906 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.362734843 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.354385514 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353829507 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.352710265 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.355982063 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.35273891 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.354036198 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.356565845 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.360668308 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368224296 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364725401 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.355438415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.357127573 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.35394611 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.357419551 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.359305502 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.353107275 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.35320444 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354129768 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.352924106 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352845379 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.356216402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.35302981 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.352860096 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.352760656 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.352203467 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.355391528 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352032453 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.354494473 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.355200912 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.349494041 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352519103 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354246242 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.353096139 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.35153488 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.351075841 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.352563632 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.352920915 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.353244496 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.363770619 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.349748832 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355611018 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354819564 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.353923828 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.35075793 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.352234406 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.355865779 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.354197103 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363258263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.368825453 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.354148845 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361372008 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.368046889 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.352636891 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.356096657 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.353458835 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.352160588 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.35524286 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.360993159 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.352528134 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.352375357 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.353780471 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353838444 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.354314985 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.362885817 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.349740499 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.352101357 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.351713966 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.356346758 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.349262753 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.354619673 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.35306113 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.354308982 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.354932121 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353355732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.352923214 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356488779 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.354221927 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.354462193 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.352753035 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.356198347 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.361836846 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.360473034 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.354457222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.357337157 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.35528312 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.356572702 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.355370768 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.354093436 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.354660656 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366796151 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.362098512 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363351727 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.357817791 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.353961597 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362431304 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.354416075 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.35968453 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354867455 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.355723529 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.355259363 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.353881513 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351257909 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355313244 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.354903661 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354689064 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.355135324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.35954811 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.354567309 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.353697648 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.354523977 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.354893103 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.354059765 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.355896878 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.355757872 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.360582638 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357542983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.355245805 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.354489544 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363711501 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370748299 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.358289264 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.355702485 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.355381424 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.354772708 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.356981824 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.354842798 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.356793108 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.36169994 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.358880754 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.364875549 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.356639211 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366396607 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.356612287 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.357909605 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.36259543 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.353087011 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.354385992 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.356715709 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.355706411 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365373996 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.370280537 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.356333525 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.359232431 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357943072 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.356111071 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.35559365 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.356891929 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356458068 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.356265765 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366659427 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.375597001 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.360560179 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358039117 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.353461654 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.356554454 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.35563555 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.356226568 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362771307 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.357389119 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.358579342 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.357494581 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.356573547 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.356318745 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.355955837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.356745867 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.354761252 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.357859511 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.365335789 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.371499852 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361309454 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.357579307 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.369465372 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357455637 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366608205 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.373171698 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.358596886 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.357784451 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.357718151 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.361723164 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.358066609 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.362735722 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.359373509 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.359387208 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.361496733 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.360041167 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.361080039 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.359749047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.359917937 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.36009718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36748311 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380717938 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.358661779 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361827456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.356447013 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.359307171 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.363344273 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.358375487 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.357098439 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.361257291 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369218927 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36512452 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.358916555 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.358504477 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362258094 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.358651794 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.358532786 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.358892032 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.358843325 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.358925323 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.363434641 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.359974807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365475922 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.359579822 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.360501585 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.362797728 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.359997649 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.37134111 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.359986784 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.361400488 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359203413 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.359608768 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.360754907 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.360453153 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.360180451 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361007273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359395368 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.360937782 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366240856 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.366140933 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.363909489 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.360189867 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.361328717 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.361619257 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.363145574 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359552506 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.360171818 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361629145 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.361818234 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.361810498 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.363520451 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.360319239 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.359778837 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.362538993 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.361123313 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36287725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.367678473 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.362804321 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.358136418 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.360721774 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361545311 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.36012401 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.362612033 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.373326727 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364035679 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.36940495 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.369790026 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.366357467 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.361710419 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366076233 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.369840299 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.359855191 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.363123023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.361337798 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.365023006 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.363769494 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.366194947 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363920407 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.370460834 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.363892917 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.363472731 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.374269411 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.383298632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362057398 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.3641276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.366951127 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.364572852 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.360379997 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.363217584 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.362610194 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.372287766 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.381516346 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364317498 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363883747 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.361637031 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.363800242 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367907606 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.361850614 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.366044633 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.360860801 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.363793384 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363315981 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.362302931 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.362223943 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.363470141 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.364390394 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.367371594 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.372866222 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.362585215 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.366159828 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.365392853 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.366270681 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363137894 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365046493 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.36153145 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.361233552 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.364611824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364597883 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.367351914 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.367193074 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.364135345 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.365783629 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.364694226 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365536646 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366566777 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.373781812 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.371092832 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.362283419 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.364762911 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.365025937 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.36792584 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.364064085 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.365340343 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366692519 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.368295622 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.364542092 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.364348007 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.364483642 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.368495461 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.383986465 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.383348566 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367589403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.36737703 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373259982 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.365799863 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.363744422 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.366493673 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.368391946 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.369538416 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.374880992 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.364819911 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.37382363 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.380977562 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.368300014 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.369756756 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.368902415 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.374736042 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.36992603 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.367345016 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.367230668 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.372416037 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.383547433 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366283331 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.374754409 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.395902269 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.382587262 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.368297858 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.367817325 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368074926 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.366222357 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.369320445 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.367762819 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.366900172 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365941326 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.367129234 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.367867013 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.374998452 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.3703871 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.367406905 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.366734533 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.368081253 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.370296848 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.363905128 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.367587497 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.367121474 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.368752225 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.367891733 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.367496812 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.368792989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.381893803 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.383074664 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.368565397 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.368199253 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.365694093 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.374422738 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.37009046 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.377671131 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.376116256 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.367745137 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.370097355 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.369648161 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369707054 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.366815124 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.370710001 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.369632465 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.368756268 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.365934095 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.38220135 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377093707 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.375160451 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.370460023 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368893586 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.36944298 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371403496 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369717752 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369062335 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.372507807 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.370447039 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372515418 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.369817594 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.369269177 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.37264843 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.37774765 seconds)
  done (took 812.080912077 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367675545 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367612979 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368145115 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367055589 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368517426 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.366602883 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367362311 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367025199 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.369044438 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.367466385 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.36810628 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367266958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.366704528 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368649327 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366337219 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.366507368 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367044676 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.369618772 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36698994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.366635997 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.369314209 seconds)
  done (took 30.020883368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.369865157 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.369343394 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.367943267 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.370954226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366681175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370321256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.36835325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371071383 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.371516143 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.368714743 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.371094892 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372001845 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.367782308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.368230105 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367407201 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.371117068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.372203875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367965403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.372681192 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.370252364 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.373429525 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.36867606 seconds)
  done (took 31.439944765 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.372518212 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.372805371 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.370535515 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.369955685 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.37301771 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.371111581 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.371193535 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.372112308 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.371726444 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.374163784 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.372130756 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.37552283 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.378597869 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.377573176 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.376111621 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.371412772 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.517700017 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.373357797 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.372582539 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.374683501 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.370015042 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.380874347 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.371689049 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.371386554 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.372308051 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.373044292 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.374369777 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.372715117 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.375320767 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.373315245 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.377831195 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.373968564 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.373957723 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.378501488 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.373815121 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.375943967 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.376861962 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.372889872 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.371494935 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.37399668 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.384258606 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.395079189 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.373617979 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.38317295 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.374534446 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.373977664 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.378044311 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.38214313 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.371248462 seconds)
  done (took 68.814093591 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.374088698 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.374973004 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.373466028 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.374481605 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.374633707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.374834672 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.373110407 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.374999181 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.373304881 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.371553338 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.376577698 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.374556246 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.371970001 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.374520068 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.376574937 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.372351222 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.36550784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.364980086 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.365831925 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.367108021 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.365709995 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.369213555 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.369382791 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.362247038 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.361643593 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.358958951 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.359262754 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.362721634 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.359159923 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.358549679 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.36426003 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.359639652 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.359049364 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.356888833 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.355923243 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.360088327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.360395154 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.357855282 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.358816894 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.355980401 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.358246125 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.358334543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.358484694 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.359381197 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.355307684 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.357187288 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.353300224 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.353515686 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.353670741 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.356836452 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.354910489 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.353014298 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.355382374 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.350363024 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.351566701 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.351480634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.34906208 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.34952729 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.352353397 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.352992607 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.352775871 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.354691533 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.350187512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.352818193 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.353905443 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.350740588 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.350359338 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.35249514 seconds)
  done (took 93.873895465 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.349659575 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.349981053 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350162852 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350039365 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350296215 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.349744989 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347259687 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.348823926 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.346925234 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.347335828 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346740929 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.346456843 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.346527764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.346591793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.344581608 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345336383 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.346658531 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.344830497 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.345226503 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345121387 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.345841516 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.342373837 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.341982818 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342065226 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.342850893 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.343218918 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.344043045 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.342690312 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3418695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.33821145 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.339619839 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.33899628 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.338856445 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.339194025 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.340426279 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.339104193 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336100673 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334722996 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.334341299 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.335875995 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.335286087 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336186941 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.335633763 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.333161671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331980197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.331663408 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.331281664 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.333527489 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.331813205 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331840163 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.331567989 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329309259 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328705825 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.328753643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.32861785 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.32827704 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330016984 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.324661994 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323126636 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.321741679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322168202 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.322351688 seconds)
  done (took 84.290348577 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321770316 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.322101268 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.320377761 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.318756426 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322352865 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.319177783 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.321780578 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.322449578 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321952886 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.321738595 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322298874 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31942847 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319459473 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322653868 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.320048824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319325774 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319652572 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.319031951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322225512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.320118779 seconds)
  done (took 27.675343363 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.319325999 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322668716 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.320419893 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.320622792 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.322662881 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.32058338 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.32211557 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322328621 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32107637 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323334409 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323083891 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.323455996 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320316229 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321850773 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.32333181 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.321126452 seconds)
  done (took 22.408288946 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.321668445 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.323703035 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.324306202 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.323347676 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.321772829 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.320983577 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.323827912 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.32142616 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.32068859 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.323424256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.324293725 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.322946495 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.324064089 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.32460754 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.321508985 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.323977514 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.321858107 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.321534225 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.323674096 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.324984487 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.32297152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.321162849 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.324156729 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.325022958 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.321831891 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.322441529 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.323006842 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.321754237 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.32222507 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.325287282 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.322560654 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.3225592 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.322252853 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.322055704 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.326413052 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.322891432 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.325431499 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.324604368 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.325967833 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.325105849 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.324590599 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.322633316 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.325208497 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.325980584 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.322916231 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.325977317 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.323086153 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.323651212 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.322673262 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.32268429 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.325705305 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.325524276 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.325690965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.326013671 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.326375119 seconds)
  done (took 74.058880601 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326341543 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325627837 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.323603732 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.325698039 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.325654192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.323852368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.326113412 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322924127 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323263408 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.326683544 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.324693409 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326597079 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324553826 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.326802776 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.325472643 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327815677 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.324113901 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.324805672 seconds)
  done (took 25.117512673 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.324997845 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.324921401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.327009797 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324635954 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.324180157 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327730743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324675477 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.327572608 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327066856 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325069534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32566571 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.329061863 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328179837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.328352333 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.325554199 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325270825 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.328086846 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327142965 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324831414 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324800749 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327859227 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328072721 seconds)
  done (took 30.445105419 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.327282361 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.327134622 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.34483578 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.369401958 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.354334702 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.327889046 seconds)
  done (took 9.315042523 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326171232 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328009868 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324985492 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329207541 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328253707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325635667 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32624065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325790528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328666126 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3266895 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325312919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328950683 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328603853 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325943247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329309599 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328268115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326917255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326268167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327276307 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329247038 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326523839 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328227798 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326440479 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326767417 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327090785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327190801 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329876771 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327233159 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327200732 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329705584 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329489155 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326859807 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329850879 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32732913 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331009026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330328575 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327295442 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330727961 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329739237 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327227512 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330501071 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33027356 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330840658 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328001296 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330736546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328071554 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328350702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327809874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328550275 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331172148 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331084636 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328785539 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330374282 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330684212 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331483035 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331569959 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329198142 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328536234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331975363 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329279097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328573691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330764397 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328737337 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32903733 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330630377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329187258 seconds)
  done (took 88.952867032 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328751164 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329305829 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328910605 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330535443 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32928567 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329411791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328751554 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329112029 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328902356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329933284 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332298006 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32950121 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329249339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329342019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330371786 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329685711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329326943 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329918211 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329045341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332081527 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330237547 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330543194 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329240054 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329590886 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329765237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333325136 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330293964 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330279245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330156999 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331492505 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329400187 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329967633 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331229693 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32993934 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330278914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330373654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331018757 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329874603 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330271146 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33339174 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330744782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334215524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331894637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330885356 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331098182 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330915047 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330655292 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331070462 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331369168 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330805377 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331732755 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331323482 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331300582 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331234062 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33103264 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331078373 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331566226 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33142708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330892352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335016312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331238704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331424335 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334116668 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331938852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332301467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332450626 seconds)
  done (took 89.098524684 seconds)
done (took 1875.473345367 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.354391457 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.409124334 seconds)
  done (took 14.034643324 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.496859003 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.450046865 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.333658168 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.360311804 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.333939618 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.330389387 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.343460457 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.336241656 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.335437658 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.335652897 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.335776174 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.524949925 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.339665315 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.336657773 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.336132291 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.429252494 seconds)
  done (took 43.23222211 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337870915 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.343717538 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.373119635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344105726 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.343500482 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.383043009 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.407428328 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.345321662 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.503578602 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.388951942 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.707108532 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.345608362 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.343411563 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.602926221 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.376222356 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.383417095 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.596953245 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.706743757 seconds)
  done (took 27.106803651 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.7519311 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.364074437 seconds)
  done (took 9.394374966 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.342565493 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.396860303 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.362503104 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.370824955 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.347782775 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.393999892 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.399290022 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.384462852 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.333456912 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.388187484 seconds)
  done (took 64.999381213 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.35270382 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.334898388 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.333646288 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.332912311 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.326841526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.325848054 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.330960086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.327045305 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.632184708 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445481376 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349565311 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.336080101 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329629213 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.33222361 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.326807911 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.363834308 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.479863124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326425886 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326036211 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334039022 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.329270122 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.421047319 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366394114 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.326272285 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.444124769 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.646886687 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329490622 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.333600168 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.488439092 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.324110841 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32615742 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32780122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329736528 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.882657941 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.851241489 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.332266645 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349789505 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33435231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322711843 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.449033901 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.327226025 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.331120918 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.327080809 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.817071148 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.475064297 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.431698858 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.458830882 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326336334 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.326387367 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.382936953 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.325577114 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326596707 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35498435 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.05765379 seconds)
  done (took 110.300825018 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.359068642 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.806470141 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486654086 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33642521 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817607363 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757638601 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317494755 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574150871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.379537668 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.782476965 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.595450062 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.657365482 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31742485 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.315223583 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.318687816 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.315484058 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.570247169 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.608428393 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.316443851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.317501111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.365636261 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.811095851 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.543369583 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.382650161 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.353130636 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7507582 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.541670622 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.651533926 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313440334 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.313897278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.590812805 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313652581 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.31650675 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.316029383 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.581329488 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.642922644 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.623065217 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.313947508 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.321785632 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312441578 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.343102077 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747127736 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.63077827 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.549852994 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.674282227 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760419429 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.313076428 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.312819526 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.315761194 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519956285 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.557267086 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.800062076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.543561679 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326344327 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.574696137 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.313919112 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357487219 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.779676515 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.643108844 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.650276465 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316425438 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313761846 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314429961 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.845783229 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.317911848 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637446801 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71566798 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315894282 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.638076913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.643361301 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.645734789 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.779364341 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.35912742 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332708755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.356160515 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.81701132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.60121973 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782109676 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.363469812 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315411236 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624102845 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318005477 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590243101 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.857470748 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.792970456 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.364142577 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.330059679 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.309826617 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.773949253 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.77396998 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.557190831 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.66776619 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.584440099 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.368117892 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307176259 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306297845 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.327105227 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.542047414 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318970934 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.669286326 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.769231032 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.084019705 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.353226222 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.836841457 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.546242475 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319356602 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.307429338 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307752078 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526461705 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.378948573 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.327180066 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308518458 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.773185359 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.179169266 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.613489441 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.028860683 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.589950577 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310333664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.79379546 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312725755 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772780983 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313292599 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.838062982 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.579113 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366008809 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.528141859 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.669075484 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.320907447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.79027807 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.837908603 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.534027059 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.783799635 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.070382944 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310317679 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818053421 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324820696 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316922558 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.49223478 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.326422023 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.567159186 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323128452 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.796290152 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.348857992 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.580846273 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.617488657 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.799941608 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.366410689 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.588327938 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.315083598 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457135811 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327537715 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.341109612 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505520383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.648953844 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308647511 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.865207892 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31088528 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471593737 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.835890214 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.346271169 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.593324596 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.309469602 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3173268 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.617144746 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349905236 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.967366884 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309541442 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.587418982 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.306964894 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.757548559 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310823627 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.834805816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.532217175 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32983548 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316307345 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.112895868 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.310739167 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.47008295 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483898451 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.630172658 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315692889 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742722123 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312580902 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.546439198 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324040607 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314103348 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663391871 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.35809456 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317158566 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.324401238 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.312712834 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312673043 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755521546 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.354301126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.031191633 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464055348 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793689504 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.624732919 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.799970822 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.37439497 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.328745827 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794085303 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.315207114 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.595338057 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.314686784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350830435 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774726915 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314259871 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803921875 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.824772522 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334212658 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.575864849 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.314916765 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.364577362 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.312359065 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556572853 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641464104 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.315651634 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316082337 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.534234868 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.551199013 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529926888 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329795949 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.313250494 seconds)
  done (took 845.364956586 seconds)
done (took 1115.704162467 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.31237531 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315085731 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.302956309 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314981091 seconds)
  done (took 26.501622565 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.322170845 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319583019 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320622683 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.319633517 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320824037 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.319508348 seconds)
  done (took 9.17861796 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.355722087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313515858 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315281581 seconds)
  done (took 19.240930674 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532706474 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.514604945 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.67220912 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.326104637 seconds)
  done (took 10.30250315 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321376033 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320818885 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.32144752 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323436802 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326383436 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325060744 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322983132 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.3228357 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.32499604 seconds)
  done (took 13.165291319 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.930423592 seconds)
done (took 84.575446304 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.900520846 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.831525699 seconds)
    (3/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.776267938 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.880917864 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.3155318 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.314821886 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.342252774 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.551425052 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.025278494 seconds)
    (10/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.429330242 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.303459859 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.358859646 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.707754077 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.748652072 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.333231405 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.342805338 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.336627063 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.315550796 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.399737327 seconds)
    (20/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330539004 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.110725537 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.92896591 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444553381 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.30045754 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.807476588 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.344287431 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.8830921 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.782431284 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.341855839 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.446046976 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.401684172 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.439045896 seconds)
    (33/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.662377569 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.449383098 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.848729531 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.658867535 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.329263177 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.3192458 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.199535297 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.715517818 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.32952233 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.430110636 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.59594797 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.083140425 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578919132 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.366122711 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.584216733 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.304091044 seconds)
    (49/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.374943112 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.923055783 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.668997028 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.31598063 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.097070456 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.416683933 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.363092142 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.337204106 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416141413 seconds)
    (58/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.304708619 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.382963502 seconds)
    (60/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.840912937 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.305385535 seconds)
    (62/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.089433595 seconds)
    (63/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.885565524 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043538145 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.750827913 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.601224618 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.171702975 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.14688141 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.968792153 seconds)
    (70/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315181516 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.470031115 seconds)
    (72/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.016512297 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 5.487391751 seconds)
    (74/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.496558504 seconds)
    (75/309) benchmarking ("sort", Float64, false)...
    done (took 5.5840208 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.496720558 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.308930346 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.36155034 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.122272191 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.304035356 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.204393662 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.318404909 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.385360387 seconds)
    (84/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42112626 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.575156228 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.526091765 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.42663725 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.319063736 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.320423681 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.280468297 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.319389464 seconds)
    (92/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.557087051 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.766417585 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.660726943 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.398883316 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.507817612 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.338428788 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.916138746 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.595945671 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.326613036 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.536742093 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.922519884 seconds)
    (103/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.897880515 seconds)
    (104/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.321814278 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.191971585 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.320026554 seconds)
    (107/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.357750604 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.320141336 seconds)
    (109/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.019710583 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.431673876 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.307704808 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.167076315 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.006465535 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.905263254 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.910832328 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.370741501 seconds)
    (117/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.832934689 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.56664219 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 1.836246538 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.345487492 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.849724302 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.637154797 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.38623807 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.600326097 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.66959561 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.034684863 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.603520514 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.608289728 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.739568245 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.558030826 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.396649615 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.793855756 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.597353755 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.311267546 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.396896244 seconds)
    (136/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.328475591 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413150962 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.383491649 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.636622033 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.426074464 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.405198864 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.332216777 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.022153164 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.374882127 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.362015287 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.521021116 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.640642586 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.730192067 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.475146891 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.331765634 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.522157384 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042048271 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348355954 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.110644479 seconds)
    (155/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408039071 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.944301615 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.107151052 seconds)
    (158/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339900831 seconds)
    (159/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.310073244 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.205821546 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.33901154 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389123661 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.500125149 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.721532807 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.066630846 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.346056167 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.322016231 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.612895036 seconds)
    (169/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.333904977 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.323549223 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.613012743 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.325140071 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339189156 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.384420655 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.333563797 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.408577319 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.657619222 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36705995 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.38321826 seconds)
    (180/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.351091154 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.42698931 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.363262901 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.417387135 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.060868912 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.34524571 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353912072 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.594415782 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.392187811 seconds)
    (189/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.507113076 seconds)
    (190/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.513351703 seconds)
    (191/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.831313084 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.368693057 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.522201264 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.640903051 seconds)
    (195/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.401011764 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.124949273 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.314495108 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.320598683 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.372642354 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410035109 seconds)
    (201/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.32516076 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.654717283 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.385806331 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.115281723 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.155546661 seconds)
    (206/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.663401605 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.365305463 seconds)
    (208/309) benchmarking ("sort", BigInt, false)...
    done (took 6.342895655 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.943137621 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.533477123 seconds)
    (211/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.433662195 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.132753443 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.534087722 seconds)
    (214/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.767626252 seconds)
    (215/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.877933038 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.429632584 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.155678141 seconds)
    (218/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427090213 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.349078958 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.426262617 seconds)
    (221/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.674055672 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.368242239 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.667413601 seconds)
    (224/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.630133477 seconds)
    (225/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.314620809 seconds)
    (226/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.040371596 seconds)
    (227/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.524179982 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.340498329 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.340658948 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.74761064 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.431651221 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.52658122 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.353684265 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.344557189 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.743212403 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.739078353 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.62883361 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.907786235 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.330949572 seconds)
    (240/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.717528881 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.35475491 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.543849453 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.314858146 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.544072226 seconds)
    (245/309) benchmarking ("sort", Int8, false)...
    done (took 4.390324403 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.511441671 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.435169944 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.592784124 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.67498657 seconds)
    (250/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.059849651 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.330539222 seconds)
    (252/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.701234923 seconds)
    (253/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.67427357 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359347637 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.345521536 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.354746084 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.356670251 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.337772946 seconds)
    (259/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438485051 seconds)
    (260/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.672511206 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.710436284 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.341259177 seconds)
    (263/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.429117197 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.7124523 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.939533765 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.335235508 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.609944165 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.332794875 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.316838506 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.703223029 seconds)
    (271/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.558735057 seconds)
    (272/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416759459 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.859639159 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.133905379 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.558250338 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.947246187 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.166212166 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.429058662 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.330368474 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.415195285 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.84875378 seconds)
    (282/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.362012226 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.443222835 seconds)
    (284/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.682207772 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.320942637 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.152470535 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.357744698 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.496149356 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.357608909 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.38125908 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.330020212 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.332813197 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.354778414 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.376528228 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.375805501 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 5.335924408 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.453387696 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.356853732 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.75116146 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.825802009 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.66386135 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.677028746 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.354475219 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.881195252 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.577478777 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.490009405 seconds)
    (307/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.980114888 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374821194 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.322146917 seconds)
  done (took 916.767779096 seconds)
done (took 918.027206455 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365513858 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359696453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.342517164 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.364648972 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.455572569 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.376019005 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.353080922 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.344717039 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.390929268 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392700179 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.342697746 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.375729442 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.345206723 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.343501494 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.342496794 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356924323 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.28642617 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.344562837 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.360910951 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.351955703 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.361379481 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.343214472 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393396488 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.375463592 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.346797584 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346339966 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.346425976 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.363824277 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.456079352 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.34732489 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.347176626 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.357318036 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.28702207 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.343154776 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339514704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.364343529 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.355252049 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.352338185 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.347075582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376976003 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.658733545 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.344627914 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.346046803 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.345601535 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.345101297 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.348845285 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346712639 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.351503298 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358145696 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36004157 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.660752458 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.362173498 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.349545206 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345971691 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.356289743 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347029239 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349828095 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362585898 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.366118245 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363599914 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.282803119 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.352518923 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349116618 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36323284 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354394873 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.688944152 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.341636477 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.350062725 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.662561692 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.351897631 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.690398829 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.355213277 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.347863355 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.361064671 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.378705467 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.292559809 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.341853166 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.345479427 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.354495941 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.34653981 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.357267388 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359813579 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.352296655 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347523334 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360999008 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.379584062 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357140455 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.349004352 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356236082 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366900303 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.355067391 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358489766 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350545199 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343571475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.356468764 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.351483867 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351523627 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350546802 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35316389 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358263222 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.662080553 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365381093 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345254462 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345032022 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.347839177 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362747051 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.664297418 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.350307307 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370161708 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395655318 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.349546865 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.285623151 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.352663256 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364909069 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.357650399 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352002579 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.343932246 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.286161895 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.658955074 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.364663905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350714243 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.348032054 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365668218 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.351383512 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345617458 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.298206632 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350874968 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364201509 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.470367866 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.359896022 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381896626 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.348395361 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.352949933 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.382664291 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366188634 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381990578 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.352983417 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366022975 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366173299 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.346688903 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36202505 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.36010683 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.350861075 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.356085653 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344303954 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.378610639 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363208499 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362994751 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37158425 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472085781 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347872825 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.287765056 seconds)
done (took 225.860416441 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409139241 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.344413671 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444320845 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346157986 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444715214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.445243377 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344009698 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344417758 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344667608 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.723498786 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344659052 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344813186 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.339865972 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345470668 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430273019 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.347316991 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345393004 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.686761552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.348866816 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.418872533 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.34783176 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.345893313 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346951608 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.727815288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.342272339 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.345108114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.418896974 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347976272 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.693015247 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.342923752 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.347493444 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.692529167 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437522247 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.366058253 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.358154502 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.354677535 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446460351 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.364404225 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431809986 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.432000203 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443442883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.387258792 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.340714407 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.348467987 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.350463126 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350310701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346928485 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.375616011 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.34562303 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.347444561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.689524372 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358233716 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346834012 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.346836616 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347554887 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.378860028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347222006 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.350796691 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.439516846 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.35035236 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412810811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.731104717 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.726302198 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.349687809 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.34726992 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.348147359 seconds)
  done (took 149.423829118 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.418252568 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423610682 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458256677 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350550512 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39948203 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.462899743 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.351321962 seconds)
  done (took 11.150199643 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357418954 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3511046 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40149255 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401177039 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35081601 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.502005168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351248243 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363408139 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.348528915 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404525673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352506445 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35159045 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35777949 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.348220022 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399596803 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363193382 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467220648 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.352343894 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.352254659 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.509348953 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348745706 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.358016084 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403385717 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.363884521 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352707587 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.35775763 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.939817314 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352820595 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349282938 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.351789877 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349354287 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.393825274 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352672726 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.347801628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349327523 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469479976 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352653185 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349944808 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.352790237 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.352526656 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.352163001 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353300527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352732324 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350145741 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.352616286 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376696229 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352345467 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352582182 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353000525 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353709767 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.404282407 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353196587 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351116205 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351108061 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.409904835 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360253347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354622654 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350661384 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353880718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351097369 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.511058229 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402439152 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353811066 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402692929 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354352098 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353887373 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354047528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353604262 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408582992 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353974876 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402872869 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352996002 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.515551961 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.378460683 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355388952 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357617968 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357508156 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35459581 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.350079617 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361194657 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.35218358 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356111713 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.360969013 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352615737 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352163741 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.463349448 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464825192 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352365384 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368402468 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362249616 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352730767 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408188702 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354327618 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352398961 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408267915 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470932389 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.409369563 seconds)
  done (took 155.188570564 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361976311 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.363781015 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357773935 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.373004395 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35620588 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.356880815 seconds)
  done (took 9.461118651 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358255449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.355557598 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.357779813 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.355214962 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356246653 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356947682 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357152045 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357946705 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359518427 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35641197 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.357069652 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358172666 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357982494 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357170132 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358181299 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356723039 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358277248 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354649096 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357476627 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357319958 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.453284251 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357889286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357419828 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359351828 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.361302272 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.358625888 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366692499 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358562787 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.35792672 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367153601 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.361282734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358791546 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359493402 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36320798 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361224231 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359977727 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361523753 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359405015 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768932691 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.358088625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359196779 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357839753 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.357608071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358936541 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360394485 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.362758247 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.362969195 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366041348 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35957418 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.359285602 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.359232556 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.357887597 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359478164 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359343493 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362449145 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362926079 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364176629 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359926611 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358700019 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360034991 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.35897852 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.359317529 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36075969 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.362858665 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365182501 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359722793 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360417146 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362705502 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359944691 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358970027 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361197081 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.35606619 seconds)
  done (took 100.682278021 seconds)
done (took 427.188321967 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.817890235 seconds)
  done (took 8.112092024 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.402941228 seconds)
  done (took 7.698304717 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.005940209 seconds)
  done (took 20.303230289 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.436644286 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.386920458 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.365183918 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.359580881 seconds)
  done (took 26.84320677 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.5785065 seconds)
  done (took 7.872642026 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.353441944 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.352254629 seconds)
  done (took 14.001608897 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.860823415 seconds)
  done (took 8.154970604 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.423153679 seconds)
  done (took 7.718150924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.374582862 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374026088 seconds)
  done (took 14.296469522 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338524795 seconds)
  done (took 7.632655441 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.413489443 seconds)
  done (took 8.70826269 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.364176922 seconds)
  done (took 7.660934647 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.399867554 seconds)
  done (took 7.694547605 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.770667773 seconds)
  done (took 9.065612054 seconds)
done (took 157.057553302 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.353077458 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.355479166 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.354007757 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.354878025 seconds)
  done (took 26.712273846 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.393436639 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393100042 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.394239132 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.403144622 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.395862218 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393038514 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.385294624 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385955835 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.404050546 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397060589 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.395024028 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.396083561 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.393129016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.385771692 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.396179276 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.39574031 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.404486254 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.395202586 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386005145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.396909334 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.360965917 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.405365919 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.397613158 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.361472238 seconds)
  done (took 34.711277224 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.556988064 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.433909292 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.514622542 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.413416124 seconds)
  done (took 7.215134395 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.412770393 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.414903917 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.425482097 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.463192283 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.494659846 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.424267141 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38855491 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.382940046 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.369417507 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.415275092 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.49063983 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.429968937 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.502813755 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.361895852 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.547996645 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.361399826 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362108963 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.414014138 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.465634332 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479196943 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.36313304 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414006458 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.418509009 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43262926 seconds)
  done (took 35.532607324 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.363255121 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.37046656 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.369129015 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.362926251 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362905004 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363094482 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.368928935 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.363142713 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.382940315 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.362969856 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.360647101 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.361798013 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.360374113 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.361651744 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.361586418 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.374735239 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.375784426 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.361625406 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.365225319 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.367743153 seconds)
  done (took 28.620512735 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.356639169 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.310807972 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.709229712 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612859189 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.358209917 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.358593143 seconds)
  done (took 29.004691974 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.429866435 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.547495632 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.36326175 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.695534997 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.770681565 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.365684545 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364663419 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.584069959 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.868261504 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.875276039 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.419556906 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.415311465 seconds)
  done (took 19.999088549 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.367073885 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.359939477 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.36514383 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.375389926 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414688567 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.367272096 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.371942937 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.356922703 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.417910134 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.420039893 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.367706161 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.41655469 seconds)
  done (took 37.901167489 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445919122 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402558525 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.200189374 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159195099 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737394643 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571021751 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.175129868 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.818964521 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.364205949 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632709905 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370668344 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449780055 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615401505 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358618261 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362082945 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.333556815 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590903654 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83457999 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359856584 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213221105 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386202061 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368627233 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.289262901 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389721314 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570729813 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.488527035 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.620072403 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359306255 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627234621 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374278713 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37036348 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360030953 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634141277 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999129326 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454214933 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370774087 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.131545201 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.075197197 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.354087763 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.198837275 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.100279581 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365420803 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371170665 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360402852 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294655679 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370867141 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82658782 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.368375889 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.072549454 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362160945 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371851948 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455076797 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.365209325 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.179887584 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450320012 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361435659 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.359348846 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367981675 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932785516 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.678428943 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369535312 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.298523367 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467884719 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.200489033 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994790732 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.464467137 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.365933089 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365818823 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296390667 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.223057508 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380267784 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690698898 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.383437537 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013261108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069238339 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364959679 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296517162 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899760209 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363385789 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.297344779 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589744441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362532472 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298078663 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.309757432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297606026 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035764064 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370053303 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.69010278 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369860922 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.838212858 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375295914 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381842956 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386922636 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586762501 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.246561585 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362684349 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.183190021 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521038936 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385063635 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.822992876 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299896558 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366879336 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620217974 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.575401949 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373124746 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.335935997 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581712831 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378626744 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.380400436 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377774986 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.374198275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.958644763 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377401543 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.697072648 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381531366 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363947583 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068082281 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370615032 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.467902277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368011194 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601824784 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.103439333 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364163379 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447384745 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373335204 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364809501 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.317918105 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880680602 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364164247 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.367252228 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378185116 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378348888 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.365795228 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313337324 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.368370269 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376867174 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.368308643 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588665451 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365732685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643941534 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299928584 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714562018 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457302245 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.588795254 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.524425375 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.364249501 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626477442 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370407841 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380952495 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380015472 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384661737 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463818112 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387235268 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.379353084 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625501854 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.369642375 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.369616089 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.326111959 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371732574 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366178461 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.371659386 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273855797 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961806586 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345151219 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371704592 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256319201 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.381283975 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431456314 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372848913 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.376777186 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.085734496 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263532008 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.374101784 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.364581078 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594045968 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377527425 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.209963611 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4485904 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.577968477 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96742412 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381885441 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.301206317 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.079344459 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.060655902 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36866913 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302710182 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367135225 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376902681 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37815211 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.596107912 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965557158 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371314189 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.225178799 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37685862 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379191215 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.37326117 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367673936 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.054336287 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.718254761 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382023629 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.379859289 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512840291 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38270821 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302830449 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.37217154 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374667135 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369342363 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368187741 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402473471 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.225725319 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856801626 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629848891 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.131593043 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382338224 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.320520883 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40259357 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.370267084 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.226801218 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396185196 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.373463295 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380859363 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.379595998 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.229451839 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.043809799 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9405643 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093949484 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911717537 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355764551 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.376410933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372827292 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839270282 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306538847 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927606866 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551157328 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838176906 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318781717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58276909 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.552867752 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09741749 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382943369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600193596 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357701356 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.225580383 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402669408 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583569368 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40645196 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372783803 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302611371 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.657278827 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637636676 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.192122987 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449856668 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85340842 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.235250185 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392432527 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.370250735 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.66069743 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540320907 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.087587656 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546564076 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372225754 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373683411 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873009725 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376945106 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.598263254 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00679359 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377565612 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.587172218 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310152136 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.382457776 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.382231189 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.373886872 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.575645267 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.38036066 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.625713836 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383794382 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306594031 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371891806 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91564633 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.229780583 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.377851362 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371891472 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081810902 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386463936 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645503052 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.385159521 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.066206066 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378645048 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307938431 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307865571 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.066392385 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378099286 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348193204 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850068466 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.457662445 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.472990894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402167573 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425332218 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628930101 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.386618779 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972507862 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603230294 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.234293141 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397886276 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.474342649 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264705125 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.382878521 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373612878 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609275279 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279510577 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59738516 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.239293142 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.280900973 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372797766 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588368683 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373794185 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374460603 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614200212 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.089030021 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.396077888 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091784672 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399108291 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375555572 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294343337 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480726196 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382290706 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453840891 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384947332 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.385158147 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.385464431 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544615542 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378447258 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379803251 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.388975367 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468656382 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.731320422 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.073195894 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.379367492 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979750462 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109685293 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97995814 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390438112 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376078544 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383615392 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310443494 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524750891 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.601146651 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649798389 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504415975 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.52167325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398431244 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269738354 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408843739 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590164812 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652170613 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271661416 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38635492 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390713583 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.376353352 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386329488 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.588164787 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859282649 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917018574 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483890215 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388771508 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.844798893 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653989171 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377092172 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37742068 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966355997 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.37961076 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671811991 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.383165734 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376936931 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52948595 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387645722 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023295139 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.389091049 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.533682846 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.151774796 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.253275214 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637064376 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.8107753 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391456002 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981249344 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11338193 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643496703 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44642979 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388618112 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.488229939 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525685582 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.381149346 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380945181 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378058097 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428392995 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.088240496 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388080824 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985721471 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644361754 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.376604136 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.381394928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404800765 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.38949654 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603493405 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058166983 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60347497 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390031704 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38478563 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195481009 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984059309 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393456264 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313447977 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.382782158 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614265633 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617052315 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402371736 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.832517275 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.091442127 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92475575 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.350580125 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40235675 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3922062 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118852369 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984954901 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.069315885 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862415249 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937676063 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38004095 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65633669 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.385149691 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379787294 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658964024 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.384063903 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383598988 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394166327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.980790398 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115768523 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.403558894 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.277141745 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.320127461 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721065749 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.095440245 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320731767 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382398868 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.568128647 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384472407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513361675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392964963 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.38029117 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391721509 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.140052618 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654014279 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386729744 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.378792521 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.309923359 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38938798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392666369 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650989214 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382921782 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.057593559 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.731540607 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638804671 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393016359 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.369408674 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.38573325 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381376521 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.369841546 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.581859285 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.611334704 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927933456 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.39455552 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.395680266 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386659794 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.598975643 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594883457 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38742541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397501344 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381948165 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415502554 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.288545554 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891021233 seconds)
  done (took 1607.47002414 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388577455 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.408990097 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.409173895 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.398008927 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418028359 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42194056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.417536461 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.407036929 seconds)
  done (took 52.592462741 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.386489853 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.622907154 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.413270289 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.383317687 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.395331995 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.38295408 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.813203639 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.383783681 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.39336471 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.39415015 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.384638408 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.387246077 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.004549112 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.396002692 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.39069754 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.382887572 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.394697608 seconds)
  done (took 66.234425991 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.395976864 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.798992363 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.470979574 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.403035758 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.215948737 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.383356612 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.917074297 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.424935523 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.384022074 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.579264909 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.029085745 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.416581839 seconds)
  done (took 84.74470215 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.391596506 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.391464032 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.391588874 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.391502455 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.392136582 seconds)
  done (took 8.283455201 seconds)
done (took 2040.317957031 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.640040769 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.072601813 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.006461711 seconds)
  done (took 5.403703237 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.533378264 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.582238293 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.703447116 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.708666161 seconds)
  done (took 7.852956447 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.674591826 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.773628302 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.586142265 seconds)
  done (took 6.360633671 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.721364195 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.393355709 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.461899793 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.384739306 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.387994632 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.387822938 seconds)
  done (took 20.487568982 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.389476674 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.391829965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389382636 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392379219 seconds)
  done (took 6.88825977 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.370180746 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.093278941 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.372041115 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388184993 seconds)
  done (took 18.549574671 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.136422454 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.14886803 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.132543922 seconds)
  done (took 7.744481373 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.385552461 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.364133247 seconds)
  done (took 10.076193158 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.702736794 seconds)
  done (took 3.028923249 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.521987882 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.653941127 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.467692208 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.332752716 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.485380806 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.988044536 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.924730801 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.533551927 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.325136744 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.426023019 seconds)
  done (took 27.986279708 seconds)
done (took 127.920827283 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.115788757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.628515623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.587543622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.997589167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.613695802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.588128726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.810246483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.09489944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.553341112 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.606575997 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.003104216 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.612141965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.540263493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.625948189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.541127702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.630672478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.611280121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.154491004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.728746389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.884960428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.816171908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.643869212 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.840036384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.658883711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.613863213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.539189047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.224868492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.638443678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.904193183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.241083948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.542488462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.056736623 seconds)
  done (took 193.977503694 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39916457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387523561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.389138351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.387164143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402454974 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.3905682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38834868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.402159789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.395785933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390739525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.38798485 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.406023859 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38955248 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.405878671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.39002875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38815823 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.388864658 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.392196418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.390157615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.403982647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389002201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402303543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.388665771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.406613655 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.39972565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.388492903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388728032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414035153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.389136555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.397316915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.390299101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.390370307 seconds)
  done (took 205.950174175 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.391200985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399239062 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.390745402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403309138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.39859147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.390736962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.394711351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.401106252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.391009037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395695089 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396974382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.389327238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.390523464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.398915251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.391151103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388358487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.388470286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405826615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416028883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.390397023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.390526793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.392314742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.388646051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.388641871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.409272989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.390004508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388575144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388565979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.389477257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.405996235 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.392823356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.393159501 seconds)
  done (took 205.961766987 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.58402277 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.396241019 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.396946367 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.329866215 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.398628531 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.396757208 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.393599677 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.594995169 seconds)
  done (took 14.821098271 seconds)
done (took 622.037606267 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.625038356 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.349315486 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.591772973 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.417744382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.132272355 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.420922406 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.417925227 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.57631544 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.880712218 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.566380294 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.631843344 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.414876596 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.774714805 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.414705611 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.658711098 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.510257079 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.244326776 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.351588494 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.718869981 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.904346573 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.666656939 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92059828 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.578941749 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.92063858 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.780419624 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.941739432 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.106111361 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.240420747 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.417516694 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.718923683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.956068667 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.320972913 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.473365912 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.452400781 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.507322489 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.492410398 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.331129352 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.453995087 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.598814168 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.677843097 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.90255041 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.675887865 seconds)
  done (took 95.07013146 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.388208141 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.387445871 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.385905338 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.387571575 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.388510355 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.387422235 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.387215084 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.38751346 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.388772082 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.386967912 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.387241692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.388429896 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.38694034 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.388440787 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.386994242 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.387481407 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.388060573 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.389520201 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.387894472 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.386770532 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.387848459 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.387616609 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.388468544 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.387348951 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.388211744 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.388784609 seconds)
  done (took 37.415073195 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.400165216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.623822644 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.797694841 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.40990612 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.400144051 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.404414212 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.473104622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400851102 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.40398975 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.404046731 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.546161071 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.402714805 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433152247 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.802659185 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.404331827 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400747926 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.400956373 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.400880935 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.629678336 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411353083 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.491266021 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.401829232 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.473734361 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.411031402 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.420758274 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402143585 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.405152803 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.945787164 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.404883772 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.547819106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.133626189 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.473180527 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.900846174 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.80981161 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.130104396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.40596232 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.402049358 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.551404279 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.403494099 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.401929156 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.47328811 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.403226979 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.805934169 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.012061641 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.420094018 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.402093004 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.968257974 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.552546336 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.629486688 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.413533252 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.826974697 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.408907999 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.40436271 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.404143613 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.629577107 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412505898 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.402646569 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.8196939 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.408794036 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.474582624 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.404392379 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.403266705 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.637462339 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405568985 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.627530621 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40852679 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.412010869 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404403517 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.809605334 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.40930828 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.023783581 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.417546542 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.401775448 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.54627857 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.626734739 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.993714603 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.405724651 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.639446817 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.921029353 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.474335519 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.405849898 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.935889252 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.475425594 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.406124605 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.403690362 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4040247 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.402219507 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.445867014 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.472211032 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.952135084 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.016299421 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.835911916 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.475303867 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.415034421 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.402853689 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.820665949 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.40318586 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.402701187 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.798630829 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025840403 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.419103866 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.411399409 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.009532581 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.421874728 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.475405074 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.410272531 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.810936536 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.405825594 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.446519294 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.40389162 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.410758926 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.407158507 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.476009888 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.406949336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.403744947 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.999062943 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.568751572 seconds)
  done (took 182.838304996 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.397894966 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.396960598 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.39702212 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.397272922 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.396988729 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.402979295 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.396440951 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.397548455 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.40412103 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.396385534 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.396693802 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.401282127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.396956223 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.397245608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.407264201 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.404999118 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.053135507 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.399010023 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.399842133 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.397114878 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.179922992 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.401072739 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.398504473 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.398917804 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.403493114 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.404670685 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.406944717 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.400309853 seconds)
  done (took 153.970152659 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.405640228 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.930743373 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.408074759 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.52630018 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.426649556 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.402044875 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.525277508 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.459444535 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.406046432 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.402686431 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.403159765 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.686723446 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.408597121 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.880868429 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.581520405 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.529240095 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.883620977 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407432133 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.403470555 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.403018351 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.528059827 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.415212216 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.688171564 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.936794096 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.40860831 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.934930206 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.397751761 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.406568868 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.405380142 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934735792 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.407798824 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.689318268 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.480607099 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.462572501 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.937340397 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.890489085 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.888615295 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.543359248 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.409986622 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.404970543 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.405328536 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.395424809 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.936637053 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409767801 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.407560226 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.929538287 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.424025349 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.407117822 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.415026344 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.404822329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.462563937 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.461924494 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.692747948 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.943538347 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.481119991 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.427241255 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.528713776 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.778113864 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.409219854 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.88588934 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.395329607 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.9400274 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.413256898 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.395627989 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.407186039 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.412106389 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.54452587 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.53355344 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.891657446 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.409080113 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.888571537 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.546444807 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.407841916 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.405754296 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.409282301 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.939157618 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.89292803 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.544842575 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.532668627 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.58459859 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.397427601 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.405468599 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.392896745 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.474362752 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.40357583 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.937394618 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.894040633 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.408626279 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.404632598 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.404632784 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.405874291 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.56647925 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.94104496 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.479702674 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.886048746 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.706407286 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.690035252 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.405774632 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.459172284 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.403499413 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.69238428 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.409533717 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.457101216 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.833531377 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.689793287 seconds)
  done (took 165.845759395 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.627332199 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.537173501 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.494455914 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.51034537 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.893983447 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.964323005 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.488632276 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.476916175 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.492661986 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.5186847 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.02874682 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.493315358 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.57797533 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.474485228 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.064723582 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.468413596 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.493730771 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.514175128 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.510863052 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.373087438 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.960933572 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.6913542 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.547443095 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.248957167 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.461986408 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.101707651 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.138557728 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.903209149 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.560812886 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.485443387 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.893062713 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.508500116 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.097172584 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.013068659 seconds)
  done (took 64.956898543 seconds)
done (took 701.427247992 seconds)
SAVING RESULT...
DONE!
