cset: moving following pidspec: 5958
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.573659467 seconds)
loading group "shootout"... done (took 1.154844998 seconds)
loading group "string"... done (took 0.414367904 seconds)
loading group "linalg"... done (took 7.68228265 seconds)
loading group "parallel"... done (took 0.147836944 seconds)
loading group "find"... done (took 1.35673722 seconds)
loading group "tuple"... done (took 1.885082358 seconds)
loading group "union"... done (took 12.283878733 seconds)
loading group "dates"... done (took 1.301905913 seconds)
loading group "micro"... done (took 0.224051824 seconds)
loading group "simd"... done (took 4.223925937 seconds)
loading group "io"... done (took 0.94400922 seconds)
loading group "random"... done (took 8.309174736 seconds)
loading group "problem"... done (took 1.591036992 seconds)
loading group "array"... done (took 19.079805481 seconds)
loading group "misc"... done (took 1.503026837 seconds)
loading group "scalar"... done (took 38.961876122 seconds)
loading group "sort"... done (took 2.974181227 seconds)
loading group "sparse"... done (took 11.539538218 seconds)
loading group "collection"... done (took 16.558799762 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525266721 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122775999 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132321535 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117585464 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15170398 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116063142 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122082738 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082244485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.867459741 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1439568 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111474192 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435918959 seconds)
done (took 5.368272026 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174540871 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088503071 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078406088 seconds)
  done (took 1.290956535 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06443335 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128726694 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065780148 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065628243 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065907546 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065161949 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065533273 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06575168 seconds)
  done (took 1.647856043 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073032888 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071017708 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065932446 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067279283 seconds)
  done (took 1.407400113 seconds)
done (took 5.72895168 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240353926 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.106242404 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.304004242 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.326863776 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.414778889 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092349181 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074059795 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070635327 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128752235 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331990386 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117942033 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.189013212 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096066592 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.174751985 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.017431443 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.128048051 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084262079 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.1212547 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09211512 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129771397 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.36348633 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075576933 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081502173 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07000366 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066713762 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.647396639 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665791898 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143343184 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083337862 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079353333 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118181145 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.648493426 seconds)
  done (took 10.445620481 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101026694 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096479034 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067140756 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123229323 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094721585 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068519585 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073743928 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067072347 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087288314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125332192 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088636525 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10445449 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064871401 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068034294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082064404 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195413412 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078476272 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080394104 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067224734 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077441474 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104964173 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076393593 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077310567 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07806493 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127548996 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167901071 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095195643 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096739425 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065920758 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078824156 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114060334 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124721211 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065478677 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067676522 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12220285 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093801232 seconds)
  done (took 4.550739621 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.108350686 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089168876 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104768063 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.61030215 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065302219 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147078306 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231502033 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071357602 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.385331448 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.15384941 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.145565773 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140651618 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.120622485 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068165566 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.256578251 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11839624 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270970519 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068385107 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066765779 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065719316 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075007732 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067958251 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063944133 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076704177 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091681511 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088202258 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.188864619 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089659984 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.977242934 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.291743573 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066635687 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167093921 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085050642 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.366968548 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067944592 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.087743178 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.397281037 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122791486 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064854365 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159472977 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.127824541 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063826777 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.11389724 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077326671 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067521799 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070101335 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068358655 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078658776 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07878933 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10198676 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066697019 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064622468 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16554047 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06442075 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065168583 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06649027 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14939582 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06397061 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.144710413 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063492831 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067834992 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093432558 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069737778 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087818539 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110058443 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.360939151 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064256895 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.071187705 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067005749 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.21334697 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076051381 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065397847 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.082000548 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065616751 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066989975 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066206567 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073584906 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069169701 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067954697 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107855628 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06569304 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063613749 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062993416 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068909315 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064789282 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070617553 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096443995 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064074196 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.464305405 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096441658 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065471698 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076017599 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103911188 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066414538 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071653517 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066652812 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.07068184 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06485067 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06916311 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069089857 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090171107 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068922963 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111831892 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.178536203 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070634505 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06628156 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070660999 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069162302 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068269393 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064882165 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068185632 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06706511 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064062735 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.114056208 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064400572 seconds)
  done (took 21.881645084 seconds)
done (took 39.115563682 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.240605474 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08257913 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083257231 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083035173 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082625353 seconds)
  done (took 1.798152545 seconds)
done (took 3.015521535 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108765534 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.067262307 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.103832506 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.102337308 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06468724 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06476281 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098912329 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063880966 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098142816 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099192981 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101747832 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100879278 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.066122539 seconds)
  done (took 2.363827171 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070346528 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080858238 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082970459 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062494237 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072211562 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081281986 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062255348 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08073922 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088004874 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081303573 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080909516 seconds)
  done (took 2.052317614 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070285169 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080861248 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083502797 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06218487 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073487062 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08147045 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061984824 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080672733 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085697504 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081686921 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080907135 seconds)
  done (took 2.04609062 seconds)
done (took 7.667596709 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074979976 seconds)
  done (took 1.260032361 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.530539406 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.453211155 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.075761188 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097076263 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189335015 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.104657948 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.228113914 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.080020571 seconds)
  done (took 8.124879501 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105895633 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068411265 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06912061 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068414624 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068475425 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067621026 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068304201 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067990376 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070041431 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0680952 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068788697 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069340515 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067015791 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067461237 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069177682 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068679361 seconds)
  done (took 2.417220373 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096277623 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095340973 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074092078 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074577839 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072515897 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071853463 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074694068 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074224056 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070080265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070847528 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073887429 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071715293 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071156244 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062678267 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072937829 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074423541 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069674956 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073162078 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073483728 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073847039 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073912054 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063669028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072540997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073715898 seconds)
  done (took 3.090327369 seconds)
done (took 16.096398164 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114617958 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077661631 seconds)
  done (took 1.388841663 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078002555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07805669 seconds)
  done (took 1.367712346 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076738588 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062246016 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08171511 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070792061 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061303748 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060964074 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078975812 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060948309 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060962702 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061121427 seconds)
  done (took 1.888250524 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06484485 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071427372 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069200868 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077236107 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068792016 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063703415 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066830311 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063324454 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069405144 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061240233 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065860637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080586984 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066421874 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082245364 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065268163 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066052165 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068667883 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065207934 seconds)
  done (took 2.451427249 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062619968 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063174098 seconds)
  done (took 1.348171089 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066147157 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061932318 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06403511 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064514404 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06135126 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061094941 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061472403 seconds)
  done (took 1.65498526 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.363297 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120259912 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.323561961 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069419649 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077601004 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252281732 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063222026 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068078104 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068129794 seconds)
  done (took 2.661735564 seconds)
done (took 13.986689318 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080757981 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085855616 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096898078 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.406200595 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092873721 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067045649 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113552367 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.172531588 seconds)
done (took 2.349559863 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21020986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.304553756 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.861211112 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065110157 seconds)
  done (took 3.45179616 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337358811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085507236 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075848898 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065660033 seconds)
  done (took 1.798268418 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067747293 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070214729 seconds)
  done (took 1.366966627 seconds)
done (took 8.063855596 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065139168 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064374871 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090237416 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063908452 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063687878 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063555781 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063597211 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064221341 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063589021 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063334585 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.062834667 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063217371 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063317006 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063605368 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063460875 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063291868 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063380912 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063701754 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063413914 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063685687 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063720185 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062818971 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063746143 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06382273 seconds)
  done (took 2.810788217 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081766204 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066323195 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067420388 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066618672 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066994325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067593858 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067287309 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065471758 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066985648 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06581038 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067045141 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067942383 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065611944 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067119571 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065116976 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06798962 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066411319 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065160218 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064663208 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067064924 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066521925 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065911762 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066986304 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06674774 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067416671 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067631443 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065424886 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065449465 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066777988 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067133694 seconds)
  done (took 3.251933865 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065845606 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060612229 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061496532 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070061219 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061039038 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061527839 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061696776 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060870691 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061185263 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.062173149 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061366105 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060813844 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061827437 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059642973 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059705404 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060428273 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064199292 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077036801 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060173858 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060002751 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063713882 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060460233 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060218228 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060355524 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061935134 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06090152 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064203325 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061619591 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.061070188 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.06161916 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.061254673 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06485425 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06654727 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06101619 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070368891 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065213012 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060906203 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06556424 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.06292355 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060891318 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061058884 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060697523 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.061029627 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059923432 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069171299 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060309392 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06099523 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060462585 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060258967 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059564975 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059729841 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.063096536 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066473146 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062319425 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060914773 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062718336 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060189149 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061256952 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060874654 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060431533 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06028462 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063731973 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.062446636 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061627166 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078379123 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062881541 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069756797 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06041781 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060563179 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063793246 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061508338 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076383479 seconds)
  done (took 5.75906745 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085462412 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087442371 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065637651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066039491 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061912561 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061487759 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069795934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061709594 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065951617 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081319828 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061959964 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065703841 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065942201 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065467834 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062077236 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066449804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070338998 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062075137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061859887 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065387838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061750279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06980529 seconds)
  done (took 2.739333075 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149511879 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066013694 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102670405 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070839692 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068658318 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070932357 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066354094 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066477123 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066321522 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066723628 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066445784 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066298407 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068759492 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066585768 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067153761 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066667646 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066143547 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066178054 seconds)
  done (took 2.575893067 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078100306 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067029189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085875011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065405402 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065771183 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065474207 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069697385 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07006204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065547767 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066362789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070374002 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065709685 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065334411 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065462118 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065322444 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065995838 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065187491 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066100048 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069691284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069179646 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069929659 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069945012 seconds)
  done (took 2.755449604 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078172843 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065979602 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081581915 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067406583 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060546363 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060315761 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06617316 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065037732 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067128521 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06608256 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067094116 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062064683 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069478332 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066236336 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068423034 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066650236 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065629851 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066198942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065874309 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061893836 seconds)
  done (took 2.586199972 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08287019 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074303126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064661312 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071270471 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064709303 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065465976 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071056904 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065341034 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064839119 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085646151 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06489316 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065119827 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071002431 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068647816 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065057095 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071311463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070916042 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072288527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063565369 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063288357 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083315553 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063443378 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069651498 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063333173 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063351683 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063691972 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063635229 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067290465 seconds)
  done (took 3.174783589 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066025991 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064051917 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064311903 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063864353 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063076554 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063540368 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063703613 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063559714 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063477171 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063355378 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063503044 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063055801 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063472252 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063557859 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063075941 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064107781 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063008265 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063301709 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063612467 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063386001 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062924428 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062864956 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062998878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063276634 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063401726 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063272417 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062936643 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06372117 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06319494 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06312893 seconds)
  done (took 3.156446845 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075531056 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073194659 seconds)
  done (took 1.399750596 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064660295 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078824809 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060485965 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07127659 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068707263 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063612412 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070468244 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070157563 seconds)
  done (took 1.795244392 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.076417524 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.099555931 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.063523718 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064353007 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074568349 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121674912 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083904535 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072994238 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075047079 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065034986 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.063135071 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080933548 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061409383 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072610865 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064260886 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069333807 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067510147 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075863088 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072929204 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06039514 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072009259 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062873024 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060580856 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062994679 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062213039 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067700486 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075829984 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072180132 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068930005 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059956029 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078493134 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060770011 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061974225 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0688784 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072468156 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060746911 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094567333 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060634796 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066309868 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060273606 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072521428 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078037005 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073453144 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076955243 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061973804 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062408558 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060246723 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062759703 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063901211 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069020874 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060174677 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066995631 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06022059 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061877461 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069433204 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060800697 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066918389 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068556522 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071421405 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069163761 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068220717 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074537717 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068259431 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069894837 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062024051 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079574984 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063907816 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073519058 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075265068 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063060412 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075714698 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06131848 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060498172 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061904383 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093289785 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0635264 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.063370802 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.06105078 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060634116 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062373045 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069015969 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067468397 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066226451 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065305568 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074271097 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069360816 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.062000034 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070282886 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077232403 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063028673 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061047267 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074811465 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063316259 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059999511 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07930692 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068958326 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06267681 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061467172 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063560773 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073909841 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062062611 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059266512 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067522544 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062113591 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071219265 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065736624 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067537499 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060461181 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069693144 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065018851 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061719805 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058775675 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063673647 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060994544 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059400228 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068045916 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.06067955 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073882265 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065088049 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073045575 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07246106 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068539755 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072925125 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.05958253 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058403075 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075471343 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068160439 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060776404 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075108114 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059583969 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068822393 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059230834 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060777245 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067410359 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058515389 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061460009 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059188118 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064596954 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.192218464 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063539969 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068076787 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070195449 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074622814 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.064812086 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07005456 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063036779 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076094184 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070803308 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065969026 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065930057 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.063265622 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072012494 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067188331 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071333891 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060893374 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06149154 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061198748 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069181409 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069623297 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062353195 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069969108 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065102198 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062837121 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062075608 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.063712303 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065143361 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065776358 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062553262 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068790167 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070249436 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075612353 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071125529 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069519631 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059878125 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060568228 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062844934 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060306021 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065067378 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069714838 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075763665 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074488912 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08108716 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.062531242 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070777204 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063367543 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077687112 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073367551 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062956794 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067372334 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060365747 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063571136 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070122387 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072761477 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074934458 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075675105 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06619373 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066064504 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061643245 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075185519 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.062479289 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069462062 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.0702687 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067369868 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.062295118 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064053644 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070342871 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066187348 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062134812 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075184536 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069137716 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061664756 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074832823 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.062333627 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072744098 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062132412 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064915059 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066324272 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064688523 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07011932 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076357399 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060692301 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062754217 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076274746 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.064107417 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064167096 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069087836 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075077793 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066250565 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069614515 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071541993 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070439117 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066293521 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070303059 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063217648 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070579603 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065478344 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073816215 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.062287037 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078096949 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061077938 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.078432709 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062349676 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.072523296 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062470853 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071098161 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.063118483 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077967159 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.064102455 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.063540345 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073224988 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060543071 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069697293 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061376435 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065945305 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067068836 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069675924 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062690739 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06854766 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061458425 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067422079 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064118801 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068695968 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069489346 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064916297 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0612404 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068284439 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070162998 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067214441 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061239985 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061185344 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060075098 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067447698 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06083838 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061143016 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066220388 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063477748 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064457486 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060763272 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06170975 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061279199 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066696069 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202131384 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078723378 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070292239 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069412515 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071551053 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061832661 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076718956 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.062090335 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068547825 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060411797 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070699946 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070034683 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.062396433 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08009234 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063944907 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068629888 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074536674 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06901457 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065406954 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079514357 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065065891 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068718458 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068963799 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065974484 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067968319 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063924885 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069310902 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071071328 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072433521 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062703925 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068194843 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069912099 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064578432 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071718923 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063974306 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068888388 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06471592 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061252598 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066506006 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073014335 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066122612 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066459075 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062926664 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060695625 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062694398 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070015172 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064564082 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068045615 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074358523 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059782146 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062002911 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061024231 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064670035 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077014441 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069600907 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067521802 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065046495 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059985994 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062472589 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062577739 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061366426 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065307722 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060517908 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060378462 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07015173 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062442596 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06558048 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06256913 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063665057 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070408645 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.067256434 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062834024 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067690839 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.062283749 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06663041 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061095564 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064064313 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066211585 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061408521 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06482527 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.07105689 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077244385 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067679416 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070173075 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063103672 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069404958 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0755012 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.070358822 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063234424 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069363409 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060116746 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077124314 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07039482 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069560589 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070958147 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062939001 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078002012 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065794642 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071795301 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07627018 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063735991 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.070225044 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06132632 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074407236 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067420576 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060344343 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068456137 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067657848 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067381365 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073808098 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.063438906 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069736288 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068453568 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065154176 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.064284614 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063858226 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069680906 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07632487 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.063558024 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067017162 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069007567 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06855689 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065462213 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072883775 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068053798 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061217963 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062252318 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062495249 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060949796 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070124773 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06090632 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063320995 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063991047 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059159901 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064855559 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073486222 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067260491 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067758702 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059365898 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058537731 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074710135 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062799849 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06318552 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066557816 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.207052548 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072838067 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0697604 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076793813 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06231618 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066724516 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072406035 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061688671 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061030782 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065349081 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064038598 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071027244 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071796562 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068465337 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063955115 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067955298 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07379308 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.063755405 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066457038 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.067616278 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062925884 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071358715 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069126941 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06920243 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063366679 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06207924 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064895195 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070064594 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068358903 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06939016 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062797676 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.069003052 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073890784 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068231937 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06435265 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060473373 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064227277 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068783041 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065749057 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060383831 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064867277 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064236414 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068477146 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068810404 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064974686 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060292239 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076724351 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068599239 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069255717 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062548134 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062822736 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061218529 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060371263 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07108141 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060850168 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062654804 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066365188 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.06403377 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077222849 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067863445 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074666946 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062324847 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064656978 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060897851 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069999483 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064533705 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061076281 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070030192 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060009414 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074017563 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.07162707 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068156134 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061908707 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067081032 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069534431 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074818154 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071029921 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070376951 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066255456 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071442753 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.064287292 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.072531525 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062416568 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061154978 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071511995 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069832754 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074090824 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062339927 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071451209 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.064303058 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068782786 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069617154 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064315794 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064335948 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064240159 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071191407 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066165873 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070321097 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066682525 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077296537 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063643216 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072069603 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07010882 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072272068 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073925802 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074536658 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073293415 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063090863 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068811444 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069712859 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.063903793 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066722932 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.066300467 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08280777 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064206966 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064166312 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075785357 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069804757 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062212998 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070609373 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065823228 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071642644 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.064401186 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070839664 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066219206 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062966451 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06629784 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065574125 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060510213 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062029921 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061484011 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069758803 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065607518 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062025018 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078848405 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.06346218 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068940464 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071342536 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067042152 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062951668 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060116394 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062163948 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.211042324 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075020462 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064717242 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068903452 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063451944 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070738182 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061252817 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069932529 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069441947 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069818109 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061799676 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062328677 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075333108 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075870687 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064875762 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069624476 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069667931 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062394587 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080688698 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069424139 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063758097 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.072578683 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065081882 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061268485 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061572061 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063602297 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072869206 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06193607 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.065186565 seconds)
  done (took 41.929308475 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10056011 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063011768 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061984367 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061935604 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071589352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063609521 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062284558 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063413949 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063436085 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06500334 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061966853 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062362649 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069270874 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076893805 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07218796 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066401285 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061754637 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063043174 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062306748 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063067549 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068527917 seconds)
  done (took 2.758809822 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07034827 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077481361 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073842193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079579741 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070966192 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067249649 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074845369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06695079 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074740051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072530116 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073488519 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065157784 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070241121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070567665 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070523404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066444734 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073427418 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070143603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065714203 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073397868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066329593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07302767 seconds)
  done (took 2.903610403 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064101058 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063261645 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069361613 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061707592 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.061184873 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065871223 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.061670854 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.065518633 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065779057 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.066345698 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070027095 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062176575 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.061273409 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066532608 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.061736597 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.062793902 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106532976 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061898453 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062506403 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.061198779 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063541072 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069201253 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061289597 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060746253 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06512267 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06529221 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.061789264 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.064587 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.062408072 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06554961 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062850248 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061163762 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069342418 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069014534 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06533058 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065249983 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.063150889 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065789206 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061802163 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06167138 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069158674 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062959248 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.062394362 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063641993 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069925282 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.061598275 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.061489316 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069435908 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061427997 seconds)
  done (took 4.528073406 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074981313 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110558568 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067602865 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090808143 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07577867 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069159491 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067626996 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092249797 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063416857 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064313986 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076683652 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076693632 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065237401 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067179694 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069685184 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064593389 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065712798 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064765235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067877464 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064868713 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068142481 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069277799 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075815793 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076695433 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066391179 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06398339 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064826871 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067155353 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075499782 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068774664 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066585307 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067552159 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076936939 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069864274 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064912759 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064614421 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076653169 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065489127 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065509093 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063513216 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064826563 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066646867 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069192039 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077416016 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065167972 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069451368 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064954191 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062664389 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075820649 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064962647 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070484582 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077483279 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066403147 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065668431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066861529 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076609646 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065043813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064244812 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065937891 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0760564 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063402405 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065991892 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076726415 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06535608 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068702367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077012671 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069918887 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066407475 seconds)
  done (took 6.253325046 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073398295 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093772688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079305574 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078945693 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072811835 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073387503 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072950666 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073094678 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073182816 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076486568 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073781876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113831208 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069140063 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074359359 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073392212 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073208247 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073051531 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073048982 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072809014 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073012344 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073233502 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078807853 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073516872 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079532965 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075880588 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068817838 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07284796 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07271315 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079370982 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072639568 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075695405 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074015677 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073382689 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079148559 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076032515 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072872275 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062840829 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073032316 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072851263 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073074059 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069883256 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079644207 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072939408 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069786452 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072702819 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072964502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07906756 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07635034 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074054921 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075479059 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072190198 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077517493 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071237797 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073177367 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07966586 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081890274 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079736367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080037204 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073399341 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079483141 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079467613 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08190364 seconds)
  done (took 6.065937679 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077713346 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070477041 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081548715 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065131239 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061318397 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072209022 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061975677 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061732372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070587405 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06983481 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07137473 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072372108 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073927574 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070539188 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070042989 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073162 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06986502 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069767128 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06809421 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070138848 seconds)
  done (took 2.776101014 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076699148 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081380202 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067236123 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071623005 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067062183 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071523244 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066575695 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067750659 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067715735 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067406973 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073223552 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073203791 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068045034 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071562377 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073102725 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071958486 seconds)
  done (took 2.49547122 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083740741 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071059834 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076446376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063595747 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067094238 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062590139 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063147872 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0616309 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06208632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075913161 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063034113 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074489843 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06261764 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06104788 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061232113 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067059547 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060772198 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061321005 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061641997 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.073614695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068546095 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06335225 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065757757 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061599892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067020129 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068845239 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063120334 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06562687 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063242439 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064198986 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068718249 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070101961 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062990568 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063798227 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06200543 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063373226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062848692 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062890411 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067585167 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062851246 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062338558 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068040947 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063606941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064105016 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061944402 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063431831 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063196311 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069011658 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063582713 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06844625 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063044081 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065882794 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063830192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071455152 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066499439 seconds)
  done (took 4.972110917 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079093365 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067981314 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062123978 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061415129 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066927035 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085580535 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067965471 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067583916 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068714082 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061581366 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06791667 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067086976 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068101598 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067576047 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067711316 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067304498 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06134468 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067685097 seconds)
  done (took 2.599242464 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073064208 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066704637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071841267 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066565786 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066638883 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066325876 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062100035 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062296443 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061820932 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066573484 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066493697 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06586034 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062667335 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066484191 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066725652 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066999247 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066348868 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062076678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066438438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061023036 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065118664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060769594 seconds)
  done (took 2.808475036 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095453456 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082633524 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137206133 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078494499 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085804693 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070865846 seconds)
  done (took 1.915834688 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09352868 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098534979 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066768065 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066823234 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072869004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069829436 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070271539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070927948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074698794 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075360844 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073091961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074884441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074867162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076832269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072690894 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072654113 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070625511 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070455717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067215126 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079349547 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069547848 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074307944 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070346518 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070069169 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070535064 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076720773 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074671036 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074997006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070468504 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074560303 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072362694 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070522422 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075167597 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075701384 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067019863 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074932341 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070590621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079481149 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07268105 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077072524 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066876394 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072213954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074274626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073171569 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075047105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070384515 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073848893 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070038518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069486279 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082568875 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071186088 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074449865 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071063405 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074525607 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074278033 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080800819 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075651628 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076612879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07123184 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074626795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076500543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072773505 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076821195 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075133539 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073238939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077189722 seconds)
  done (took 6.252211835 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104597916 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067264494 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070697563 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074631599 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074966971 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068759863 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069589647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068771113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06921429 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066442242 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10348498 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069296027 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074643995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074790497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069758312 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068911618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071345091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077064304 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068323399 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081422292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070658419 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076498102 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076778027 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076790272 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075541487 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072822816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070767793 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070450146 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070719963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070227872 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074414239 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071006577 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076835343 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067801687 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0767981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071549665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070597324 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075165123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070466454 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073074393 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077084402 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078870567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070257406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070327432 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075231216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070542609 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070502686 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067454143 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071416004 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06792833 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07576038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073723623 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074041474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075041974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06909852 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068917143 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068988855 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06903614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068955248 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071404551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075038872 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0703503 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081138566 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070493582 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071181748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077223426 seconds)
  done (took 6.228857026 seconds)
done (took 127.721899506 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213388339 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183189091 seconds)
  done (took 1.752669038 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074668645 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10330416 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081313749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133619749 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069117279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103280476 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102895853 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080373216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06910381 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069607095 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069056478 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072436193 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134706518 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069120698 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070655385 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071921541 seconds)
  done (took 2.753189473 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104800376 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.215602945 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108536346 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069340247 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10492457 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076802744 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071934985 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082701497 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075612794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071505146 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077218553 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07541152 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07054031 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072918929 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073693486 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075137668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06955699 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07488195 seconds)
  done (took 2.954128507 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102480699 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093684984 seconds)
  done (took 1.581531413 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174193091 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.131364006 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.199783786 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332928866 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.145646811 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.410702576 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.133213057 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.132843633 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.110865004 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.129638573 seconds)
  done (took 3.278841868 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104418191 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193356219 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290728457 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118256177 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074255053 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.104484532 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119808136 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080106502 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078959407 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078552064 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078201106 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075597959 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099051957 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074437107 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073969885 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075081775 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10089216 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074450696 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075918561 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075086518 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102634536 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06963061 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076201078 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073125284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076227439 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076600495 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069354847 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067838906 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073986534 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07407041 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076973709 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.102283999 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076322574 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101162822 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072985668 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102858161 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075675074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072692016 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074471463 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072483742 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075855189 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076056877 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076910224 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075660522 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069397453 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07534754 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069423216 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068091587 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079271904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069277486 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077732369 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076757823 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102537355 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071627309 seconds)
  done (took 6.103052511 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109929893 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104873445 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068952358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110726335 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102922589 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070644103 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106238003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10064253 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10804026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071212948 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069699749 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071277588 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079157271 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079330152 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114067549 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105777697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071253911 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069147121 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105997493 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10579677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067963754 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099550035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096288404 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104721256 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067203298 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069083067 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067648872 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069149493 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074227877 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075601719 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067806175 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076110215 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081316168 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075343069 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066732656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067664322 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068015564 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076839849 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07798757 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076744577 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074671377 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06737381 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067285617 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069122037 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070463594 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068466197 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076046384 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076305214 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075083435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067929549 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069902907 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067821191 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068515308 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075976115 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073921776 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076655509 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075726126 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067319465 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067307471 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069786642 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076525931 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076323903 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076068186 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068419327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078733743 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068591176 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077312702 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080257334 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067640688 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068371559 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067653014 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068149092 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068270205 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074404703 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074617942 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068753216 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068656262 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068174328 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076659603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075250093 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067480994 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074022176 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067034613 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067381192 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068596679 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068258053 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074075146 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076210723 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069022252 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067889293 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067805449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067646742 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066586934 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07403216 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075734721 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075698756 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075114402 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068637104 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075487153 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074666055 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068975906 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075452838 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067365251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070561532 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069803934 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076732659 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074931478 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076586595 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067306195 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066389797 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072947319 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075309322 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06612779 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072810098 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074908452 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073527371 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065725403 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075542661 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066379657 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07426136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066555756 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208056885 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069728495 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078448072 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07011285 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068967719 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069589104 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078268215 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070952615 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069771536 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070200383 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069865247 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077152508 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078956266 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069311627 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074936433 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075966659 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068855247 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075546965 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068347751 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076783746 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068647627 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068682884 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066876569 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077460535 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068105217 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067504215 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067651299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076788499 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068516172 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076960233 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074673872 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066953619 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078314914 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078182688 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074117727 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076876288 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068776642 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068074088 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067491825 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068246319 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073574762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075442707 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069150876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068099459 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074088316 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07588736 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067740587 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074862017 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074624626 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074691514 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067897089 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069124275 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078595775 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077121941 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075232406 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074943493 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075335888 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068338996 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074558595 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075006446 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068328975 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081098257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067714841 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079350246 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075900438 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074057932 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075344894 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077428405 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078866616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080162356 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082576721 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069750061 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069680423 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077700742 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06816864 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067957358 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074994088 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069213844 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068712922 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079834165 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068413889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077564983 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067433648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075960886 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067277171 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069191092 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080311909 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068568663 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068610042 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077927914 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068105287 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074167533 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077340348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074787072 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067733034 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068750601 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075778224 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07590478 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067860597 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067810146 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069290863 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074749365 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073883261 seconds)
  done (took 18.188494352 seconds)
done (took 38.010903527 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211480532 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159305739 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186952188 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118414421 seconds)
  done (took 2.153413094 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11094079 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100357621 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.085749292 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064098235 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.092315597 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064722134 seconds)
  done (took 1.942295119 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305823338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207251105 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184071441 seconds)
  done (took 2.115596976 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210842014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197193884 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460961184 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283938646 seconds)
  done (took 2.666745237 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142760467 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082699379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063272812 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080811234 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.121076247 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14634378 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091690236 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11608926 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074019196 seconds)
  done (took 2.396411842 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145521159 seconds)
done (took 12.856534713 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.241190664 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.139031188 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096391677 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067176388 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074505216 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103842352 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07629755 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.086513182 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075222512 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073887536 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.115232336 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098754505 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068950242 seconds)
    (14/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.24936653 seconds)
    (15/309) benchmarking ("sort", Float32, false)...
    done (took 0.131372807 seconds)
    (16/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072562681 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073676394 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227158138 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069091772 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078358993 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072981441 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114563757 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.198676385 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172119739 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20432496 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199520345 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083433833 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188921271 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073381443 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092064395 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106708902 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065548007 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073455491 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073370172 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073938476 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120704766 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063686835 seconds)
    (38/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.082292826 seconds)
    (39/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.118893929 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082517946 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075204338 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162330627 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.086540217 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.147053658 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121299345 seconds)
    (46/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.193595965 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064923847 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081724967 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079367691 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155750624 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.06709416 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085888074 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.224650741 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064785789 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073606327 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.206508413 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064844164 seconds)
    (58/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068907015 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116117184 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163591386 seconds)
    (61/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.172442746 seconds)
    (62/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076829621 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088826729 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.177939209 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068277894 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075531269 seconds)
    (67/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065218708 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135446224 seconds)
    (69/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.078898061 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071493849 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.226326558 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190111081 seconds)
    (73/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.122011861 seconds)
    (74/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.143452194 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.209625431 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071869786 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066138109 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070860322 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07438125 seconds)
    (80/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.16954688 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177317423 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.169184643 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157387065 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063714488 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073486765 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153816535 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08503968 seconds)
    (88/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135482036 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077588482 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071960954 seconds)
    (91/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.16392356 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126135227 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064858166 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.297986159 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079050228 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130215388 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124085228 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072490934 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082921044 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.16109949 seconds)
    (101/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080670715 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064970055 seconds)
    (103/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074191323 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06380546 seconds)
    (105/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068238262 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163460782 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0650161 seconds)
    (108/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.066640869 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065482941 seconds)
    (110/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068321755 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074566287 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194654385 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078356828 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067663973 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.140382631 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075167971 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145741168 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0763334 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169017558 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.096943558 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072321831 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06543943 seconds)
    (123/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.07805536 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185099276 seconds)
    (125/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119885163 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119921858 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137210176 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.136911863 seconds)
    (129/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078882855 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.098699043 seconds)
    (131/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090118781 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074590224 seconds)
    (133/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06669453 seconds)
    (134/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.075287887 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13534528 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075853507 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087193329 seconds)
    (138/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.227998135 seconds)
    (139/309) benchmarking ("sort", Float64, false)...
    done (took 0.131530928 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073200728 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073232438 seconds)
    (142/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073076989 seconds)
    (143/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137016016 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06580544 seconds)
    (145/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06610953 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077468796 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064827039 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084282647 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.138590236 seconds)
    (150/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.072695738 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065905707 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143252317 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073005509 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.203538744 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066091444 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089794108 seconds)
    (157/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.194943236 seconds)
    (158/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065591507 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172123114 seconds)
    (160/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.066354739 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.141762666 seconds)
    (162/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065958365 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065867067 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06547543 seconds)
    (165/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.074392673 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137583423 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066647399 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068345722 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.198845157 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073848089 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.078617679 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065434604 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.187793738 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067331789 seconds)
    (175/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.066268309 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088132806 seconds)
    (177/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.13561459 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06928181 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138646611 seconds)
    (180/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.185693563 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064436081 seconds)
    (182/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066132848 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165482349 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156889639 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127170169 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064256851 seconds)
    (187/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063423485 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063585894 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064056784 seconds)
    (190/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068679887 seconds)
    (191/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.064757802 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072443014 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063801207 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063025535 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.13644767 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064563297 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.137109362 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.103491779 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063349225 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073750235 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06647833 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064991718 seconds)
    (203/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070591573 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16215806 seconds)
    (205/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066951455 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091235151 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.063388666 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064562807 seconds)
    (209/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.063936989 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070783766 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069755447 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064790974 seconds)
    (213/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089379324 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085163781 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07552907 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225468881 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066281691 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133228193 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067052537 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066221543 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073372326 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068111681 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066761377 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06869176 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093624996 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06575574 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066991114 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075969914 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.087581605 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086876181 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076260995 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134454379 seconds)
    (233/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069392541 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065376663 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130483567 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066677537 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064575621 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065480836 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064322508 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078177504 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072957103 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066850295 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.080044345 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090226876 seconds)
    (245/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064106648 seconds)
    (246/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078311819 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063720524 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065727568 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090112599 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065385586 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066018011 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24579953 seconds)
    (253/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077328003 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173599989 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091299868 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114764883 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066847667 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065784528 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066336022 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066594942 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065535932 seconds)
    (262/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067538384 seconds)
    (263/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069388425 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067607012 seconds)
    (265/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067081042 seconds)
    (266/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.066803834 seconds)
    (267/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.066252837 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066185786 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116012566 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06605264 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067015651 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066683048 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118586506 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066187779 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067196512 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091332712 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071645627 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065627451 seconds)
    (279/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064574503 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091928863 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063898352 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.166532377 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17538685 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071738061 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089580603 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065602314 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065663204 seconds)
    (288/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064967742 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074133671 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088076683 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067667119 seconds)
    (292/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066880287 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128960714 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074911565 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066770849 seconds)
    (296/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068979708 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07335414 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068144084 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067481812 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06584946 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073823382 seconds)
    (302/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.067470016 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066997548 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067027621 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065752112 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132825179 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066625194 seconds)
    (308/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067054949 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065385062 seconds)
  done (took 32.59685105 seconds)
done (took 34.031701395 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085893905 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099612304 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073955386 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09299058 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081388324 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096357023 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074588786 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077191805 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079433197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077964507 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077449344 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070626052 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073227895 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074027902 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071597155 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094617529 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078420635 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072741514 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072842194 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064145619 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072712792 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064539625 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06451873 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070632958 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075821187 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071973947 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074412285 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073573993 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065122326 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065066768 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069767473 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073364168 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065156952 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079167436 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075580077 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074751534 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076422686 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079488969 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066366054 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067125465 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07658385 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066554758 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073119431 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071025538 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069304758 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071236133 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072954605 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076775347 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09460038 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068963377 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075174844 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074995599 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076410322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070135544 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069955786 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072700265 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070998405 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094304812 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073406505 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069167613 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075141349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075565528 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073100617 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073355408 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072508862 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075373772 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076570177 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071023524 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074428419 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071476208 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064521004 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072297143 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07202078 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064734049 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07571694 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077330858 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064060775 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069222429 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0726261 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072701488 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064412844 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068608687 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064495093 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069754941 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068973475 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070897312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069614643 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071619541 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064521958 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073024219 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071716969 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072450796 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063961363 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076969749 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064693573 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070643693 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06495524 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064798134 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064309223 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06964054 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064277356 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068447253 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07356475 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063662263 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069163816 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077557246 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064404983 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071721932 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06411615 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064296584 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075744591 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074680496 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064430877 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06907864 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06410168 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069596595 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064235867 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064454366 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064083145 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064298711 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068322402 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064186398 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068011439 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069239029 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076379155 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064091084 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069014106 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067938827 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064437988 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070969096 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064289408 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064424169 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063844706 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077064722 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067953348 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064365516 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06972593 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068434498 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071629291 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06332503 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072273553 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069921677 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068431538 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070266625 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063465099 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07437136 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067900769 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06742612 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062975597 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063397679 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062623715 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063376519 seconds)
done (took 12.404679308 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070865409 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.115896143 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.088419271 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.090125766 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080205942 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06577169 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071433436 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086478723 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066853225 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.091936593 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084682373 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085431421 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.104786272 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064730124 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065455143 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066121652 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066469456 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.074901022 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.0903214 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086642939 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101116289 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065149714 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.082714165 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083589489 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.07956275 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084314355 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066456853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066821236 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068376742 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086326585 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089196102 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068518237 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066647985 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.085215755 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081948508 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.076747164 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06596663 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07281803 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06587367 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065014187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066668422 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083174177 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072421788 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072311897 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066616259 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073134932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066581684 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.078640084 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.083820732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.072432923 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07899267 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.086480855 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068165082 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.079562256 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064656358 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079014412 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.072612157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065854488 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066357459 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07099365 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065696206 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067640463 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.074459335 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.072697749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.0687006 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080413784 seconds)
  done (took 6.530509245 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084973165 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093829909 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081044397 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081165225 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065114612 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065478245 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065158895 seconds)
  done (took 2.074680988 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06785743 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088423575 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088995975 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088988723 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081405351 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090120208 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06602429 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09740642 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065392906 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086253108 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.117189122 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091215366 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06966269 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076453852 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065591157 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.080114358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065358298 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074300591 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.081516328 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089324417 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069896782 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091589579 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078650944 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065851568 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.09807629 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078023578 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065811208 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065973295 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066829708 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066837001 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066710019 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106027442 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077497748 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076734714 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066964569 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065502371 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078471305 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069181043 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.075994967 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077508789 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078110115 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067279257 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064635895 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067749176 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069000999 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076486982 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064831677 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067411825 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067058936 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085159703 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064611599 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077564812 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069734498 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070720711 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071741186 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070566366 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07455485 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067797047 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085405453 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073401826 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067163029 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082778838 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081234966 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078477805 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082171044 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070714939 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077355678 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078419146 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067217494 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068073545 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067464937 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081657203 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066674629 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068448726 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06909366 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067830643 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076908184 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089792203 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089964751 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078311307 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066438911 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06705237 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076617787 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089628797 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070023922 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066876507 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068999172 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065087391 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069595409 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067180241 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071374604 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066848705 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073647001 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067998322 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069099716 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082072418 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065081342 seconds)
  done (took 8.813020529 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071072822 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069329155 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069211156 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066521316 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066396192 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067049903 seconds)
  done (took 1.987866703 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091385684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068196915 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079259669 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06650695 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104188002 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081005593 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081055858 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074453481 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078652395 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078098152 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080937788 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083527774 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.084044895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068889361 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080582833 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068980915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.080636485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071296596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.0781598 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070829279 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079725598 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068791402 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068490596 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084780076 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069473726 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067902385 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074767368 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078559489 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077555592 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074408642 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068296647 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069531077 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07403271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074606944 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083106963 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073429611 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066689501 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072048143 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068441932 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069836841 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083099918 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068530557 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069000552 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071962721 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074649558 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074220479 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072160258 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074288113 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080408433 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071950258 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07222695 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067383672 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069522492 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072681601 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073662226 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074722926 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07200188 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.080739683 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06807011 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073922515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067050181 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071018437 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077610811 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071104978 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075479545 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072583013 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074480678 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07041045 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070669393 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069027187 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075272884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068434521 seconds)
  done (took 6.89979819 seconds)
done (took 27.873634018 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.522435051 seconds)
  done (took 2.041179112 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617066053 seconds)
  done (took 2.17568071 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.560432625 seconds)
  done (took 8.113950613 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.427519736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472770061 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.74255055 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13203367 seconds)
  done (took 3.357524202 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706564947 seconds)
  done (took 2.2706031 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22986341 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216217938 seconds)
  done (took 2.017250056 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346924008 seconds)
  done (took 1.9036922 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.067448647 seconds)
  done (took 2.621479237 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255444101 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158349412 seconds)
  done (took 1.979654367 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445938517 seconds)
  done (took 2.002139371 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.272042934 seconds)
  done (took 5.836075026 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238156281 seconds)
  done (took 1.83935468 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234942075 seconds)
  done (took 1.803253532 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.734758458 seconds)
  done (took 3.296416704 seconds)
done (took 42.829632899 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083768006 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087529445 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084335288 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080063287 seconds)
  done (took 1.872458129 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.076339777 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.072136793 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.075017131 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.075166067 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071765762 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072437741 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072969064 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071396703 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073158081 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.07218814 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070366421 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.07187387 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.074719873 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.072162478 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.075162052 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.076236658 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.07214355 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071738754 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074501082 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.071374591 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073861625 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070082002 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067963747 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068457769 seconds)
  done (took 3.305197486 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080716248 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073923304 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076098742 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073224885 seconds)
  done (took 1.875497167 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.078945602 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.088339732 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.089801197 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09242562 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074861889 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076270368 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.086632001 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086058429 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06524757 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087736913 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06756859 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066071679 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067591533 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086956739 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.086086978 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064721196 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066363349 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.078282597 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.077303163 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079762786 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069389149 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.067074742 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077831642 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.078120114 seconds)
  done (took 3.431047662 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087042726 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06584479 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082293217 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090963538 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091788384 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065614808 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082588064 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092069309 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135851245 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065307801 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071606136 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06610661 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104911934 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06537084 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082257088 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107246296 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110814731 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068845865 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09679083 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065885839 seconds)
  done (took 3.281496714 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085034863 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070591403 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070974162 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064495521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075080874 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071832097 seconds)
  done (took 2.019481331 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070125691 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069787651 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068389612 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071184 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073669495 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067360841 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065670642 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067626587 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066753882 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066916781 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066210767 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065399188 seconds)
  done (took 2.391751654 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161544523 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06949509 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069940643 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065429511 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071401702 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06644702 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08172837 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068096576 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084206317 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066172689 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066379789 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068268696 seconds)
  done (took 2.513453261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110278207 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182992824 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101553489 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072894405 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214310235 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098172127 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089767828 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.127915521 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092952584 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069874494 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106831032 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138217154 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106932994 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.129211404 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09366196 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147401738 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151466397 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101313227 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119606041 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08580831 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071215116 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150084464 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070253568 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097734407 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130260072 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.104028941 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11700467 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135594132 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094865654 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.093126964 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096763401 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074937548 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160781433 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.08739728 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.111453454 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119519415 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129686943 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086081987 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086494457 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1612455 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150183654 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126752388 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126263323 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137221504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079073616 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.11062211 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085944438 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108281886 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144198752 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100243616 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076041095 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106416335 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109641345 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133612139 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.243422042 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08631341 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166292738 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.123872304 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118270861 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08055541 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108832123 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.102666967 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10988625 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162283808 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14281859 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103639251 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136737846 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120943445 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098746993 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.100810623 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112437102 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086271298 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117618408 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120454904 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141961748 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120272315 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122214684 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.10996636 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082755788 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110278772 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126428169 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094808365 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114560326 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156568264 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113548561 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09098623 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109104432 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.141230505 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072115326 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158985669 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093475042 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12116543 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100693016 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142203335 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103038669 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086000735 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107375053 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140336657 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10218873 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128626348 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097986073 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116185019 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096358696 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126851121 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080764049 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100059923 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102302451 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09742443 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074375337 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102305145 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302632602 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117459858 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077170491 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116466185 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101188889 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078335759 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11965399 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142458721 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082759489 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076794724 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150372658 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.096691396 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116751678 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110084607 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.095046584 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133514491 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143494935 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094545643 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089107611 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075872534 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183745404 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076718639 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143525892 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085579743 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125994861 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106597262 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130425826 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139416138 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095047337 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078701711 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106538386 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.114727851 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104102548 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114588797 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076545051 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108862823 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14942931 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.10535096 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090164184 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096469141 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070348364 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120692291 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076960909 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096480391 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095901199 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094477825 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.093937866 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146801905 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096033875 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111893762 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098471932 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068593027 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091028748 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149841827 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082264747 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108376674 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127716926 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097005392 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068556589 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.119088125 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072837817 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299402695 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114130012 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108528959 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079315842 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127460397 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069970334 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075218406 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128069006 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104695789 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102309173 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.136330098 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106262651 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.111771047 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.108130073 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.104470558 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10057621 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10653143 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.109739776 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117821095 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085255 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149893121 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097431327 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078104188 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08768332 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078933807 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078594926 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126105117 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154142494 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11313098 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103369022 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106317244 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115685311 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108289531 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091105728 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079241538 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137778971 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079156558 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075330146 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115307185 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112323778 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089823612 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.139354226 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080194501 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136821067 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123071641 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09437029 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125220236 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069893065 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070859128 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081690928 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11452831 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119682071 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079466554 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078946012 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13663311 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134957319 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115894582 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102065669 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06925428 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108468561 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140166141 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.114903829 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080130174 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262625119 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086670198 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129572261 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095970605 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165079495 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105432012 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113785668 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091379809 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080408236 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075596408 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09802887 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129518308 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092971654 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081092903 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069049201 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074309661 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119845057 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091588546 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115263155 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105563006 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136457909 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073782255 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102122725 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11229635 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109559585 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109919313 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109282509 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095990269 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09160488 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108527053 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122371187 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075225654 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155942798 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132507223 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083281948 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099835337 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096219892 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110198938 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107784732 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115239218 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109219136 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127852623 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125526006 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102975453 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090355344 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097672283 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.095970805 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.095160284 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08105602 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103866414 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119762641 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103050953 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107735863 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095707624 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.091990818 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110227085 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111633822 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089997302 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115232401 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155369664 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099298668 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30358951 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104800395 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107987356 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104911278 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113731131 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.129275992 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14527044 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07198456 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076401049 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072428958 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127013969 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079901707 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116896346 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077685517 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10812486 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123702293 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089697346 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068587395 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100471231 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090635547 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.093734991 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144718227 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110195973 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073962377 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105434562 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107457667 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097129865 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156052281 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101128237 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102774566 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0732125 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12015069 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075611223 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116092587 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137809212 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082590071 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.085029052 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072116394 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112533276 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103457703 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118124917 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090996775 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103488083 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121268971 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132646386 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104113836 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118056629 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139263521 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114988655 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094186314 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155438143 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136577843 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144496785 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08095235 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.088894812 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105375194 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106195669 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101284594 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077245905 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07916478 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143825836 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119359082 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068254701 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255137635 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083381883 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.089176822 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116674996 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11543706 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083135168 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131450779 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076469839 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107269708 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094650036 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12590069 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12145656 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152528326 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097024766 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089757289 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0773483 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152071915 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.082169295 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132485607 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121305366 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103496791 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070142398 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096587837 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125360185 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.639002513 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108578736 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076367654 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136575994 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106917418 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160254954 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093523876 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118365429 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108160759 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10262778 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09668669 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130514774 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09490537 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109227604 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.173675082 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119183972 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106791642 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074787373 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086145386 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074948177 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.090143108 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082146789 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100078618 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107846372 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102974785 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105329353 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088522252 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106403644 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116748679 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113003636 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105501224 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090668733 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136700204 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104216277 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283098514 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128546099 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0798656 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075932401 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.10839797 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138035612 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097121542 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093990942 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078374282 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.091121271 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154747328 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138771177 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10181615 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101945283 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09136136 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.100409033 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113748175 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117435446 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109842451 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085381497 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.101071419 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103294058 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079417683 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075866447 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097558927 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071098336 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090673257 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127288563 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108247765 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091540059 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103923651 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079760383 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108001183 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144767908 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10418545 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078708997 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078951925 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077242136 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.084469568 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103612936 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110135371 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113626416 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147008509 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102680243 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095647679 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.080596114 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.221552937 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090450073 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09800063 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.11033868 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076437473 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131183558 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091028286 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090378869 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096472736 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10375859 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15630099 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085857818 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10895966 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112644399 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114923921 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101275663 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10363879 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093690717 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090569749 seconds)
  done (took 54.759922009 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10572145 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143833827 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150612355 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081874215 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.095143404 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120068805 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197461299 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187498984 seconds)
  done (took 2.81654782 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069822847 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097355213 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103275979 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084990324 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066298796 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067189128 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226749891 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079765776 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065822204 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090770929 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075988271 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067632615 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418524399 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065396036 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066537135 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074245404 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066205336 seconds)
  done (took 3.470825272 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.380587467 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609946859 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.362904878 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07435146 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.741773339 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091109501 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.255470182 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140607094 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080036605 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.502612493 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366507435 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126941678 seconds)
  done (took 18.43260663 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082748617 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079478293 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088607302 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087999624 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07636011 seconds)
  done (took 2.106792511 seconds)
done (took 103.880618647 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082708302 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.194131765 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067362502 seconds)
  done (took 1.979108339 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.091712284 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089189718 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089097277 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.087380081 seconds)
  done (took 2.058827911 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07587339 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078303115 seconds)
  done (took 1.851610455 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234658594 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173685861 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097936394 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085872642 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082854921 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082911386 seconds)
  done (took 1.956964775 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074062211 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073896121 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07691095 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077398863 seconds)
  done (took 1.999127829 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069643206 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068147257 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069687662 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070908983 seconds)
  done (took 1.97540607 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086394901 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084563596 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078172942 seconds)
  done (took 1.94393191 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103701024 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092082917 seconds)
  done (took 1.890172987 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082054991 seconds)
  done (took 1.781042545 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096512253 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099704004 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128083454 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111016218 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137609052 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115090074 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.080640441 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085702285 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076068224 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.082879884 seconds)
  done (took 2.712374006 seconds)
done (took 22.43047088 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081262029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377287167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362855057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092770988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672803505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358855247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991314722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094358833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109886087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071056562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088867959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650205518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981351035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331268521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96696457 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325470833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649741357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068254255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068056157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068608645 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973484106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067334819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067280924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067453423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649104528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371931752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068917598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325965952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067814552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071913668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356869695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069111741 seconds)
  done (took 16.235626173 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073372322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124719816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076017591 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087680151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071769512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071243185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073158032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070877167 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119532785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070643792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088811976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069953321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074349419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072055393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089659594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069116989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073428051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071387297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071148012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072544494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090318194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070714332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071816893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071781776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071938452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084158961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072662653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071158805 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071370673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07488696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074023269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069630994 seconds)
  done (took 4.195643979 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119855272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127872365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076164879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108546353 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119575312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072311166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148273509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09467013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121724855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068613814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085443136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067991301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101655591 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06911501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089746738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068703517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071263906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068544069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067900393 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069156606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087642423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068279529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068686389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069280577 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069056281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083336926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069681429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068695793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068853788 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072229322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073996085 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069913853 seconds)
  done (took 4.398174465 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07149263 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074046099 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079929419 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.07961921 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066414098 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069058653 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070174426 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06658081 seconds)
  done (took 2.291651317 seconds)
done (took 28.829893499 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079904833 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069127579 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071594522 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085959588 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072670194 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07725738 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064202161 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073691299 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076159342 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071738551 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074189395 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068498529 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071178797 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066427511 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072575048 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067073275 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079464464 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070149224 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077626372 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078266556 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070545509 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073316357 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07621991 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081178952 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080682918 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080508489 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07806814 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074019364 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069256719 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071799626 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07099682 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078997954 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080109847 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080448895 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066352526 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066195457 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071013624 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068557703 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08066198 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077327817 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069814099 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077691376 seconds)
  done (took 4.788423702 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086365371 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088900844 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080267027 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077793237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095408097 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08070612 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084431684 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07659521 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076365603 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084034519 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072237245 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07933797 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077354751 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070906313 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076042115 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07318549 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07832761 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07258938 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075773099 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075905636 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084854131 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071398659 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085071732 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07793961 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073095132 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079478488 seconds)
  done (took 3.782905756 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074285491 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086581805 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093543169 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14569198 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110894127 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084516848 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080292402 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091711409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095386389 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067033189 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072031755 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090734793 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091605055 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073211358 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108952659 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082877531 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078942847 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068917574 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074233637 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09570534 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087021185 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084327403 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093497862 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082800205 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06619092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069604944 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071247235 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081391226 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069013306 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078326733 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06984952 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070720165 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067835566 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07739628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070381642 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066659588 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086654444 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078434748 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081837356 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107266405 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078791049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070437003 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094271957 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129009336 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068582058 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072974382 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072608397 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080534658 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068654745 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096845761 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080098612 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066663839 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068440505 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06643783 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066352728 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.069807583 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068563964 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069001119 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076874935 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073215208 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085598633 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07421916 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087894846 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066397506 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077018946 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066339465 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068538418 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065707568 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095628804 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06879916 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109506905 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067795262 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06624222 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077881626 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078615617 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074168869 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068957763 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088801631 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079696066 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07289423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077750922 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071992359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071979278 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100070659 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06964947 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07192814 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067880242 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072177772 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071394541 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069708511 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080538833 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067865716 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070007454 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085673443 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066725531 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067513755 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070003427 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069057747 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066125502 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077237849 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07057555 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068436809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077259092 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067255185 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069818765 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.0799361 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073962318 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065718562 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068384276 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071616729 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070314098 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070533433 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07220119 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071491082 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075807798 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075847828 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075187709 seconds)
  done (took 10.821748412 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165583412 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151881067 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068618153 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14550047 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07500837 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079872823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147045223 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094772796 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068709562 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068725166 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067060623 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107897635 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102432011 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113099222 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078872579 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067651275 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093178177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111912376 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149896488 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144967721 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089890604 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075438622 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06963871 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068807899 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068940939 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077210628 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084190647 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076440688 seconds)
  done (took 4.470673524 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079162491 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105428802 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074046484 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09316571 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089412508 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070057554 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072133547 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071683034 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086591886 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078711773 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07026294 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075962517 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072837523 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071347872 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068322948 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073974093 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074390407 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066932694 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071300279 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073579041 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077528921 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091573407 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072898373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067739147 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070326626 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068152026 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075280308 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078691343 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067731657 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102926881 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065272244 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071956738 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082353344 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068903004 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067661445 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068962371 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068939022 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067975464 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070527574 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068664355 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06853542 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073564144 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068473968 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077517198 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083030992 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076215968 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070766246 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070295663 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070600814 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065413179 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070190577 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069891952 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070173468 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075219197 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071382513 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070851523 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068606806 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092954002 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073569291 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067009327 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067028654 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066234105 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069737681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077527299 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084303622 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072121346 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068458597 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069146626 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079632166 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081203281 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067594888 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07274249 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067662197 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070776248 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071886717 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072053003 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070167005 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068784855 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069217458 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069612294 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069778879 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06916596 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068795895 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072134183 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06820023 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071870359 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070371914 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071197538 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077958184 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068703561 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072326875 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070475585 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067413015 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06980153 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07238413 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071051383 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080294835 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077218795 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06796319 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065768169 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084292434 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.0705688 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06686884 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072937662 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071767238 seconds)
  done (took 9.444081059 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09221136 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070476725 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086246882 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093012885 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079896539 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074534419 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079799967 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069777964 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086510865 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073068606 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075551211 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065891501 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078238058 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077430885 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067751846 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077493071 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070574564 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084490344 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081678193 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065735456 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075723381 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080095868 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079931788 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082081491 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080827398 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082120731 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080031158 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077032371 seconds)
  done (took 3.952091193 seconds)
done (took 38.964513094 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.820554828 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.050691374 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.791053473 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.026463132 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.840987407 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.024711233 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.913821893 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.784897179 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.824623282 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.836417648 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.107631922 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.278199427 seconds)
done (took 66.143001344 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.810684893 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.939596816 seconds)
    (2/2) benchmarking "String"...
    done (took 2.031728799 seconds)
  done (took 5.68876783 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.004292196 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.454471781 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.050043135 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.789263923 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.791938684 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.21441879 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.569102823 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.230772582 seconds)
  done (took 30.820240038 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.97181911 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.005129094 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.510124802 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.522956037 seconds)
  done (took 15.779175702 seconds)
done (took 63.915049793 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.808681031 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.784737392 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.799007663 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.81586289 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.794666872 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.787446492 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.783962364 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.787139887 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.836830055 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.042530675 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.784934348 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.79054632 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.78713799 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.828271184 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.245158965 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.833513694 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.796362498 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.790408232 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.787719233 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.833908582 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.789438868 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.795665601 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.210909789 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.939641044 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.398203645 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.943126218 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.155462088 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203922106 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.787337788 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.786889411 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.005281369 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.006763594 seconds)
  done (took 205.460267 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.792247114 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.836203876 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.942039704 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.796962791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.244119795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.965349689 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.893443273 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.293568779 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.794693732 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.802389167 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.006390196 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.792874627 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.040796542 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.732180803 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.825882635 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.800645686 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.031306223 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.061963085 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.82746509 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.956182267 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.800881505 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.908449241 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.867770611 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.006567353 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.819433476 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.801095621 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.812566607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.814899962 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.965956698 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.005464645 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.831132695 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.817710835 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.987638496 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.657210043 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.796176388 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.793302649 seconds)
  done (took 170.843330687 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.970212948 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.800582924 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.793864053 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.847509107 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913754762 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.79308487 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.46912063 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.797658894 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.904106809 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.792322077 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.794469035 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.793340787 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.792550934 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.805734489 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.89798909 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.788679933 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.807957619 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.795696623 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.819323969 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.794648559 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.792130935 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.793706008 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.795657291 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.793148608 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.792732475 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.795205175 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.045153921 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.794829859 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.043969808 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.791122685 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.794270736 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.868012958 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.8036218 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.017675688 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.788827949 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.887197502 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.846097724 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.91013137 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.788450835 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.013356044 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.866823658 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.790551009 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.794468676 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.859741808 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.80306757 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.78717702 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.793037096 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.802318937 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.858976141 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.043414315 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.791479478 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.916085676 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.28001742 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.789543474 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.79517577 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.793575604 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.382144138 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.790131196 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.793164243 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.800136081 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.799022217 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.796138528 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.795020073 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.178469906 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.858416334 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.935119064 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.787861279 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.007670818 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.79361623 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.534497681 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.946570669 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.788422813 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.791434817 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.789951818 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.79267755 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.791429365 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.795727559 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.914249633 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.798063609 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.903695498 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.869644579 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.787354889 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.791395542 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.911437037 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.79053911 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.800668701 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.624537723 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.856858794 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.824390546 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.613469569 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.788339581 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.162777545 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.560489938 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.788538896 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.790376212 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.803637656 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.788803948 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.791619745 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.794219555 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.873486707 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.788112483 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.913556449 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.536851365 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.963459342 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.788028021 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.791203442 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.799132449 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.873676653 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.91001509 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.794469713 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.861067474 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.79535599 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.796776562 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.883103528 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.789972938 seconds)
  done (took 402.726657568 seconds)
done (took 782.779100359 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.416587058 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.377273979 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.479188306 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.394512737 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.373315671 seconds)
  done (took 13.762651672 seconds)
done (took 15.48315415 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.808569345 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.79903513 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.848575509 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.876013825 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.806538736 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.811052933 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.873925136 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.811997134 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.843940703 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.84819337 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.885080534 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.879048979 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.817268588 seconds)
  done (took 25.630660541 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.804363094 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.948820867 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.017477587 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.833182843 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.805286606 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.026178249 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.862103917 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.94268402 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.950253878 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.034625202 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.037347866 seconds)
  done (took 22.988240627 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.807667235 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.956294528 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.040168405 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.841074654 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.810436495 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.031745837 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.868800695 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.947833333 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.952921789 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.03667982 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.047542217 seconds)
  done (took 23.078710016 seconds)
done (took 73.422300045 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.799948315 seconds)
  done (took 3.527535962 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.817994324 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.971856364 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.802126305 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.802452548 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.801897031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.803581561 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.802466836 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.802672382 seconds)
  done (took 16.337592589 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.802211018 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.801681995 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.803255674 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.801449474 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.802052885 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.79976597 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.800537351 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.803611714 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.803042594 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.802947466 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.802333392 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.801111633 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.801966071 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.801486406 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.801561138 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.8015564 seconds)
  done (took 30.560863064 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.803311827 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.801851916 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.801343314 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.801086075 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.800110063 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.800522811 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.803297351 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.801176022 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.801467793 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.802141659 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.802656597 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.801289212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.801971961 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.802376933 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.802651502 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.803224127 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.802680493 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.802894319 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.806336477 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.804748614 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.804647162 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.803391365 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.803327791 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.803267291 seconds)
  done (took 44.999550047 seconds)
done (took 97.163292998 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.539980044 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.39573692 seconds)
  done (took 9.665922054 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.804923069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.803163234 seconds)
  done (took 5.411190253 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.804015342 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.802922164 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.803283264 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.805887668 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.804166367 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.80393776 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.804280032 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.803985796 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.804305494 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.804338586 seconds)
  done (took 19.772486945 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.802692188 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.802520251 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.804113414 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.805903214 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.802702023 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.804295458 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.804733872 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.806065679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.80509853 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.802975809 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.804222483 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.805705243 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.804252028 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.805016036 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.805472835 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.805721263 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.805221139 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.805703214 seconds)
  done (took 34.215637635 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.804110189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.806436239 seconds)
  done (took 5.343660383 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.805170425 seconds)
    (2/7) benchmarking "second"...
    done (took 1.805387612 seconds)
    (3/7) benchmarking "month"...
    done (took 1.804940231 seconds)
    (4/7) benchmarking "year"...
    done (took 1.804748476 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.806017136 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.804827425 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.804833649 seconds)
  done (took 14.368034045 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.805746685 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.96967882 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.029611524 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.477574224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.807950054 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.810041142 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.723682352 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.808134806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.808958923 seconds)
  done (took 19.975076953 seconds)
done (took 110.483775552 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.544894168 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.804586964 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.112939339 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.866412145 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.828827021 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.149932181 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.829963573 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.109087985 seconds)
done (took 42.980462473 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.826996603 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.807554813 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.832104291 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.833707374 seconds)
  done (took 22.206495036 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.806510567 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.148764881 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.822984397 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.610825792 seconds)
  done (took 22.137150094 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.165772757 seconds)
    (2/2) benchmarking "read"...
    done (took 2.192749853 seconds)
  done (took 6.096703158 seconds)
done (took 59.004810617 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805415573 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.804955998 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.807962691 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.806577651 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.805884751 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.805681675 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.805798887 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.805756026 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.806727208 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.804594687 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.806689999 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.807804916 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.806972418 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80716325 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805893589 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806606812 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807057192 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.806455993 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.805901347 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807288631 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806514944 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808119988 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.807363579 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.808843842 seconds)
  done (took 45.092951581 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.809265675 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.810743826 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.809135466 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.809034823 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.807823252 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.80926933 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.809609293 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.80999751 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.808551437 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.808790702 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808679461 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.807867429 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.80866954 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.809568122 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807519499 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.807689752 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.807789561 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807627547 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807161344 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.808885958 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.807324759 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808855543 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.810287564 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80899883 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.808813135 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809689916 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.806825329 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.808471799 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807459566 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.807049337 seconds)
  done (took 55.993803455 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.807045748 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.808206206 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.807251921 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.807554795 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.807863184 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.808205826 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.80795424 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.809900985 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.808243643 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.806620958 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.808663222 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.808001508 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.808950552 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.808823881 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.809263945 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.808987347 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.808745448 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.81096652 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.809626326 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.809454143 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.810377397 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.809217799 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.811055567 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.810435666 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.80904585 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.807988831 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.808504469 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.810067037 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.809060814 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.808849011 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.811354071 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.808998931 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.810850082 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.810151212 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.810496735 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.81060881 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.810501595 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.811757058 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.809627462 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.810431186 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.811538535 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.808746896 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.810735899 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.812005902 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.811537466 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.810870345 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.811734668 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.812434477 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.81314141 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.812595296 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.813659051 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.812288012 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.811622577 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.81303362 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.814235943 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.812084935 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.811390949 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.812076299 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.81025224 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.812503291 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.811762053 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.810833474 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.811465981 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.81061876 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.811889499 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.81198557 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.8113247 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.812305257 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.813231378 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.811410077 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.812149908 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.813181968 seconds)
  done (took 132.088793168 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.810966507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.811168292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81170631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.811184893 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811426006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.811179635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.812430947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811662197 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81192199 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.812225642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813182185 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.813116978 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812031356 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.813070094 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812713139 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.813269647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.812207892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812351706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.814682666 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.814213335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812815287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.813884736 seconds)
  done (took 41.613824973 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814605858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.813417605 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.815639396 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815751485 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814994734 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813789875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.815364522 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.814372344 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814605938 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814030678 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812547719 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812707895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814005244 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81420512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812940212 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81543552 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813667268 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813518516 seconds)
  done (took 34.397319441 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.813918546 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.813501186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.813186823 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.815023852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.815143909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.813340312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81335007 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.814214059 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.813938352 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.813479313 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.814306907 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814381859 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.815062873 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815749841 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815267778 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.815763783 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.816048248 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815049927 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816332022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814680825 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.81414133 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816009044 seconds)
  done (took 41.664285943 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814278736 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.814942442 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.816583704 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.814339792 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.815197565 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.814820378 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.815841482 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.813885811 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.81332751 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.816860226 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814845552 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.815562548 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.815065553 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.814826134 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.815492335 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.815616862 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.814660698 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814293213 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816546185 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.816682632 seconds)
  done (took 38.048463658 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819744813 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817457603 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.819048823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818774602 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817685741 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.817098464 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819319392 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817310529 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818480113 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818707854 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.817846004 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819378747 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818261507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81990029 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817356842 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819147301 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818786244 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817581532 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820958798 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818874754 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.819287546 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819469186 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819518709 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.819805355 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819956626 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819269095 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819768819 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819617835 seconds)
  done (took 52.67321574 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818060947 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81925689 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.817930994 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.819455161 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.819657723 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.820064509 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.81964732 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.8190532 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819149945 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.820287412 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.817398122 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.82051379 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819475365 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.81845985 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820483044 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.81989519 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819449513 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.818501431 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819463082 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819455925 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.821372516 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821048911 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.820649216 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820997498 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82057388 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.820267204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820068111 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.821664523 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820050953 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.821023886 seconds)
  done (took 56.338892652 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.84178002 seconds)
    (2/2) benchmarking "in"...
    done (took 1.841375704 seconds)
  done (took 5.429637018 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.818309919 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820593619 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.820563283 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.820304257 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.818861179 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.819573432 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.819796526 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819569628 seconds)
  done (took 16.304220964 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.820338902 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.827038875 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.821576216 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.818982786 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.822095107 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828777097 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.827766631 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.822025002 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.825773708 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.826154661 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.827338345 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.826058287 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.830871449 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.826719986 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.822307259 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.825672218 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825556203 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826459361 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.824797372 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.820688683 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826561133 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822796839 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.820327651 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.821893806 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.821594537 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.824560287 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.832052049 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.824888329 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823889001 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.82337661 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.832459867 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.823549235 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.821648561 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825308437 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.82440901 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.823674865 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.833045894 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.824232449 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.823903234 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.824485566 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.827090169 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827508993 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.82555186 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.833369216 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.822620785 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.823495027 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.821672966 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.823173291 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.825855697 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.829198128 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.831910067 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825328745 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.823612995 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.821990451 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.827273111 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.824031045 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.824275768 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.826667973 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833598389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.831606233 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.827835192 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.846881464 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.835974179 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.824651281 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.825428954 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.838379555 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.85033884 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.829258227 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.828189831 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.826655935 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833478937 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.825138621 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.824669522 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.824841667 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838950605 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.834735743 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.825242493 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.826283561 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.824796303 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.825651987 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827593726 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.825317992 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826283953 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.82380899 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835647919 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.852584873 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.824187973 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.823547643 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.8266279 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.82873534 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.829666842 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.829745117 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.828873501 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.825467187 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.825957298 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.829916054 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.826026642 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.82605717 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.828154957 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.83687111 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.825792596 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.82425671 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831304815 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.835549316 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.825554866 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.826081795 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.826732349 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.825628547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.834962274 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.827458611 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.826896376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.826585702 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.829382468 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.830494599 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.825959144 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834504089 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.837390105 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.834606435 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.83276891 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.831685064 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.832247647 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.8310792 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840245662 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.852135995 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.827057246 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.834415252 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.835313977 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.84229276 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.83194412 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.828086759 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.832956249 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.827696039 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.826611172 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.830633333 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.828631579 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.828878967 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.827601007 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.82862444 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.827635714 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.826811469 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.833364349 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.832171506 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.832379103 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.828660939 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.834086832 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.828872136 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.831651563 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.836249365 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.833927398 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.827972258 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.827344102 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.832982573 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.832407927 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.829367589 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.828626432 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.829269718 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.828333357 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.83206526 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.831546127 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.828621445 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.829232546 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.833564933 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.83269155 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.830110247 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.829334688 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.833965265 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829952772 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.829160575 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830787678 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.831038741 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.835930563 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828918693 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.834548539 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.829829215 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.831051182 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.830518012 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.829930182 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.833903093 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.834259168 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.844469468 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.835879651 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.842821582 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.830777561 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.83850186 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.831160577 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.833989324 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.832343537 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.830232258 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.829848819 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.829372317 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.830391869 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.834574907 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851467761 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.846720087 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.834653832 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.836529021 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.841665211 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.837492402 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.838828877 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.834274223 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832962692 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.836112545 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.831908479 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.832541653 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.831993757 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.835328076 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.836377779 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.832704341 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.837128617 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.832360945 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.833204934 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.835601259 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.833606397 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.835485479 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.833227707 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.836803966 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.836996024 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.83479036 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.840542909 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836738738 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.833803341 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.832216676 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837150837 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.833783739 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.834846427 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.83502866 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.838268518 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.836134273 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.834456527 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842404389 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.838743855 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.837658588 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.837238423 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.833177751 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.838107281 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.832139029 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.837663728 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.842790096 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.838178532 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.833731215 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.839076237 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.83420677 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.836971241 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.834310821 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835688231 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.834760689 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.836838945 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.832495488 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.832484801 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.843162673 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.835118606 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.835756963 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.833956562 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.839117519 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.838833122 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.836164394 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.833755966 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838964548 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.842577843 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.844257965 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.841419539 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.840437893 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.839580971 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.840540385 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.84089559 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.838419407 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848137431 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.848301394 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.835075093 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.836071131 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.835980655 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.840304077 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.837743313 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.837735656 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843229678 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.84103761 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.839509489 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.839624156 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.83591156 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.838135302 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.843979621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837955584 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.838636709 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.838662152 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.838036679 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.837963623 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.836267676 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838858397 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.835121587 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.837960885 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.840141378 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.835434957 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.838588044 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.836400032 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.846621432 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.836850061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.837996238 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84417706 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.840121263 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.838931606 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.838835475 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.836586271 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.838754645 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.838776611 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.841136587 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.842123617 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.838128688 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.84175589 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.84927117 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.842745402 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.846395496 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.840412581 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8500195 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.838393838 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.837085977 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.837975637 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.843580239 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.845954477 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.836207629 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.839461018 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.84662616 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.842608664 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.843052055 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.842863463 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.837727612 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.8373723 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.837934223 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.843440886 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.845330494 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.84214575 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.838819596 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.837215594 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.839077788 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.839345234 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.842694858 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.841012105 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.840368285 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.84333748 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.838404574 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.839516589 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.838198202 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.839077218 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.840013065 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.838953455 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.838669601 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.847404086 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.839274366 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.843448506 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.844715769 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.838612044 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.848569048 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.839572019 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.838185868 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.84335326 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.838282086 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.843429645 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.839694061 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.838440816 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.841666984 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.839048947 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.842136693 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.853192791 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.846040223 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.844673588 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.842105375 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.838510337 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.842110988 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852228102 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.866109607 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83960466 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.843805632 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.846298554 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.850817675 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.843628306 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84688429 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.845961056 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.849621942 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.842627924 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.843095453 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.845605913 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.853812254 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840608397 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.839482884 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.839513699 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.8461336 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.845104401 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.84054048 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.843871707 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844284571 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.84583966 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.852992635 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.840460788 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.844849817 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840454638 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.840698903 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.840533114 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.840674395 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.842577077 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.843815249 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.841511592 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.840514346 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.84337818 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.847018048 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.843602362 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845497194 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.85129818 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840629537 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.840118073 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.845835229 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.841857231 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.843648363 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842451974 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.843763044 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.84714162 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.840714778 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.847033157 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847134247 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.852991553 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.845566342 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.842719744 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.842716482 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.848026188 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.846433164 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.843048138 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.845723387 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.853359201 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.850538431 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.857639035 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.855850587 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.843285893 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.845586381 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851145244 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.85358873 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.84103974 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.845689832 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.843147676 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.846784216 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.845683543 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.845144853 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844078018 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.84828922 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.849933429 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.843448803 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.84641388 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.845021669 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.844415207 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.848778771 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.846529449 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.853133118 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.843248836 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.843276768 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.847421277 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.846142854 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.845972737 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.848041535 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.844384995 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.844253321 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.847432762 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.84690668 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.849978123 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.844117576 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.844377545 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.848827043 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.844978192 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.844231641 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.847927111 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.848472128 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.844164483 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.851777477 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.855584206 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.844455616 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.846817336 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.849285348 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.847863961 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.844128487 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.844261086 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.847001799 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.846362047 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.854539852 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.845249456 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.845678779 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.849540318 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.845519233 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.852118189 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.85018206 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.852925809 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.847591182 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.852883988 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.845499984 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853076099 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.858872136 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.853165208 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.8521438 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.855769167 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.852890951 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.848808146 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.849196055 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.847498778 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.854203025 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.852813249 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.854390037 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.849735442 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.853125618 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.849229442 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.851572824 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.847039782 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.850790983 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.847991694 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.847318434 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.853559591 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860494894 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.858772858 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.849416945 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.849897381 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.848458889 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.853069272 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.864603791 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.849422115 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.848604708 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.853067611 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851763728 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.854534481 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.860757897 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.861093595 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.853851136 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.850159489 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.856818313 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.868709247 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.853096305 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86117111 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.885797096 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.85553766 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.850843645 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852512625 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.857243926 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.850922796 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.856557917 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.850856258 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.859302688 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.850660403 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.852109192 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.861816549 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.849690748 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.851323423 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.851357877 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.855078917 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.858058856 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.852174115 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.857659668 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.849856682 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.851645753 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.85351495 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.854636523 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.851694194 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.851021641 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.850403388 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.858419073 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.851835993 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.853514112 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.863378265 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.855451525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.853418587 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866432043 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.867934283 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.851359425 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.851302461 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.852228797 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.857966517 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.859171903 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.852543161 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857694566 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.863305296 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.859883833 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.861981031 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.855892998 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.856232505 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.85394512 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.855081854 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853413534 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.868263147 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.866352236 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.859978766 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.858118932 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.862361108 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.854594516 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.865017498 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.861464786 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.855415011 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.860027836 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852502899 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.854524234 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.853919479 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.854318555 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.858732823 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.862615147 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.852544269 seconds)
  done (took 1098.592535222 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854427974 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853644767 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853279059 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854728614 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852145851 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856044126 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855375412 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.85343501 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854577417 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855086297 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856451085 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853275458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.855274265 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.856214602 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855413462 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.854954176 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853701093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855204353 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.855147992 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854818883 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.85605049 seconds)
  done (took 40.728762128 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.855150274 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.856792486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.854416298 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856208246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854659081 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.855394376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.854492234 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853462689 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855633538 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853114808 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.857836348 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855552493 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.855537133 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.854046771 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855213918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856059133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.855332385 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855987234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.855338979 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.856946922 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856599847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.858885934 seconds)
  done (took 42.606154763 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.855927267 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.857854714 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.86045509 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.860518635 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.857820879 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.857491102 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.857799908 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.86141049 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.861512174 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.863547212 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.866720914 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.868786931 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.857269329 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.864658272 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.857961679 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.858130538 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.000769929 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.857549396 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.856397598 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.855961458 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.856739526 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.866280563 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.859370981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.855946189 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.858712094 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.859136365 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.857496395 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.85926203 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.858968289 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.860740486 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.862253617 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.8564861 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.858273799 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.863642501 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.861751198 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.864603759 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.862417994 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.85841087 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.857962962 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.858509769 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.867440781 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.884168929 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.859780966 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.858109958 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.867622317 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.860923677 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.860121887 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.865157374 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.865088374 seconds)
  done (took 93.108206175 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.85579863 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.856468647 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.856151412 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856986392 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.858402435 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.858715564 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.85845223 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.860872923 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.859622781 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.857865235 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.859993788 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.857651386 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.858284919 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.86144867 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.859097103 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859288435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.857973901 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.859228499 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.86014204 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.859451694 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.85820491 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.859573381 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.860380229 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.860197675 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.859924272 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.859475077 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860426647 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.858801721 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.862155233 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.859611433 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.859260316 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.858811508 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.858638257 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.858763036 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.859382795 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.862386999 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.860253579 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.859877134 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.85919092 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.858318919 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.861187043 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.859344612 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.862424614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.860754026 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.860439726 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.861203357 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.860848671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.860670949 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.861648372 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.861669882 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.860106694 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.860646984 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860713408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.859708106 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.862052544 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.861994531 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.859665722 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.860456882 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.860430509 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.858465132 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.86254762 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.859060726 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.860174602 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.861494626 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.862879552 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.861668407 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.862973616 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.859916693 seconds)
  done (took 128.259210608 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860026089 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.864316966 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862515669 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864128841 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.862010565 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.862478311 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.86149766 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.863761621 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.86382803 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.862662026 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864402767 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.861780865 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.861538176 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.863859477 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.861670293 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.863120094 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.862833492 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862226402 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.862791485 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.862472085 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.863214472 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.862077628 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.864393742 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.863900787 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864040362 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.862963423 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.864513224 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.862927862 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863136533 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.863765425 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.864881623 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.86327102 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.864042276 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.863720129 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.865023515 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.865904299 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864650457 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864763803 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.863838706 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.86554958 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.86388693 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864369714 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.863972784 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.864202892 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864419178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.866902264 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.864894533 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.86659223 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.864924136 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.864337439 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.86507461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.865276267 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864952278 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.864734802 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866526629 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.863954373 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865119036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.865261531 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865429537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.864889258 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866759782 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.86585773 seconds)
  done (took 117.357222856 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865293611 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.863364901 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.865467029 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.86561486 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.865091418 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.867066762 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.865496246 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.865554796 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.865553474 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.865140969 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864979762 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.867253911 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868831741 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865692332 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866002383 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867176775 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.865635103 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.864929221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866097869 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.865285454 seconds)
  done (took 39.107044444 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.866213579 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.865917904 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.864600541 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.86598078 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.867501709 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.867532487 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.866952337 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868297174 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868632227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866793808 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.867523364 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.868408259 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868691282 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.869643684 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.868593713 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.867399154 seconds)
  done (took 31.672224173 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.868451769 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.868986439 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.86895021 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.86928244 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.868187126 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.869833094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869179277 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.870041082 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.868502405 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.870074817 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868876548 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.869803195 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.869418201 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.868817846 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.868469081 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868692225 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.869031353 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.871339067 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.868213433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.869451176 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.869200148 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.868053831 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.870601468 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.870355163 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.870422328 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.869080211 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.86855361 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.870568787 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.867687379 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.868382594 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.86980555 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.870570367 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.869361664 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.868412243 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.870580541 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.869006195 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.870518557 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.86828555 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.868277454 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.869830933 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.869341129 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.868874849 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.868626532 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.871608222 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.868728514 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.868890081 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.868911155 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.871072028 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.868738072 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.869858902 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.868517867 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.869820227 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.869503153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.870885235 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.869842249 seconds)
  done (took 104.608722981 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870249874 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870170484 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.871504082 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.870750043 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86979369 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.871123365 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.870571039 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.86991539 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869141079 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.871268449 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.87254783 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.87018027 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.871329626 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86981005 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.872630075 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870918634 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.869691103 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.871072093 seconds)
  done (took 35.468051966 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.871822204 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.872551607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.873452835 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.872925835 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.871320347 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.870703859 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.872228606 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.871497753 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870413256 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.870106962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871529861 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.871056711 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871184078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.872401151 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.872245582 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871173594 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.873541305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.869113039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.874255245 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.87108872 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.87059374 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87046546 seconds)
  done (took 42.973069896 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.873419329 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.873486225 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.888699788 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.898043105 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.896609422 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.912650099 seconds)
  done (took 13.143954683 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871175479 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873103122 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8731745 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871254264 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871294133 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870674405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871223037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870550663 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8740984 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870791553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869840668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871800137 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870627007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870671874 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870327915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870526333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873140561 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871171461 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872666787 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870717384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868828057 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873226939 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869190339 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872405732 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874726875 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870458763 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870952318 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870597137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869512388 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87657605 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872577174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872766057 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872255132 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873454813 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873498511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8737656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872492008 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872055039 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872550605 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872416901 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871986209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867400362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86679006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867564915 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865783816 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868065465 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867703094 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867043145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866977284 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868959122 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866876458 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865072724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864820577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864335215 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863878909 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864775599 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868063986 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864657645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863619074 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864190842 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864331628 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866742833 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866232728 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865884105 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864792363 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865253226 seconds)
  done (took 125.193012739 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868068524 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867773591 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866614874 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867525205 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866002249 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870495483 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865593614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865919023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866138743 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867131167 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868011733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867108989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86705953 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86802414 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865680482 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866573917 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8683261 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863294051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864571928 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864954037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864083557 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866592286 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862649122 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863225377 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863170361 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863130937 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866099905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862986672 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861703813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862842105 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862681931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862979113 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870391943 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861845566 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861485675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861938788 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862723483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863040778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862178215 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86309986 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863314629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862043797 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86242679 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862300631 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86252044 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862561288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862549841 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863317395 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86395098 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862825736 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86362029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862869254 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864506895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863656518 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863822137 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8632526 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864080329 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862961165 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864123097 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863426031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864690759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8636483 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863326356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862763843 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865503687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864099213 seconds)
  done (took 124.844342058 seconds)
done (took 2559.048737876 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.962779605 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.915698409 seconds)
  done (took 15.666729799 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.033543951 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.982498808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.868435983 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.875076767 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.864612842 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.893612919 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.880603782 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.864206069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.868909646 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.86898018 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.867411843 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.055779568 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.924759897 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.86541753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.871040349 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.965954989 seconds)
  done (took 52.347505036 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.87243862 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.871378395 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.882728434 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.871542959 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.872032659 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.883729447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899043012 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.875438101 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.907272408 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.883244573 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.941135264 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.880260152 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.873205249 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.922513226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.88345465 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.88262274 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.95908679 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.941879751 seconds)
  done (took 35.893362522 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.942189177 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.87464168 seconds)
  done (took 10.620710224 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.861013087 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.85874228 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.859728663 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.877778648 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.862240283 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.874436147 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.907470968 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.892589272 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.850653856 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.017415338 seconds)
  done (took 70.650929321 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.862123097 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.860814337 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.858469556 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.856487925 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.856057386 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.856909147 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.856890681 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.860146468 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.532578913 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.906705073 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.865523296 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.861451578 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.858898407 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.858060322 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.854804408 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.877707156 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.967960501 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.854728112 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.851538831 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.859994423 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.855874641 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.918518009 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.873229082 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.855364802 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.887511782 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.527100017 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.863318493 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.861718801 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.967110242 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852270227 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.856889083 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.040898902 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.860058931 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.330878515 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.164873031 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.861909164 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.864520789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.863164742 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.852566108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.974933345 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.859004547 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.859668275 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.8194829 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.148990229 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.966521415 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.896104488 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.188306119 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.87191717 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.854627091 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885373071 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.857712825 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.854677892 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.869350403 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.370175256 seconds)
  done (took 132.23827946 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854420449 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.212818924 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020442756 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855854727 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13635433 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055914776 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.851239815 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89972653 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853405892 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093403982 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017581296 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955523952 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85184906 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.8535895 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850944673 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.847641069 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004218121 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918439366 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852893763 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.848710489 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87771773 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095139509 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.987042003 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.853953318 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.866405869 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067524494 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.96982414 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956259181 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.078884609 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.852300718 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910447106 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849311613 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.851778516 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844870108 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011488427 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944264245 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928345823 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.847241978 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84613514 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845992389 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.512358478 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046452225 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.943982312 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.976657139 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043261433 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051685443 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.623159373 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.851695066 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.587084284 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.010298662 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.074675611 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.096972133 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966054157 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.848160494 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.189245501 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.847533358 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845764376 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.098079984 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991459205 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943800401 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850885277 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847526035 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844817314 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.088541003 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848675855 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944836192 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85007697 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843549271 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944468922 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945981206 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.98969931 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061444066 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.875946329 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.809766287 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.399868949 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094605141 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911391236 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09638164 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.850477906 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845611825 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930397416 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.694877331 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.010347531 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.091519641 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.102154241 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.304993326 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.579475941 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.852756797 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.075546946 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069683527 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.097873003 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056644058 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.006780667 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.01612549 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.849389524 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.852424945 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.054548312 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975582885 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85310119 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190679408 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080451248 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.398983131 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.867898855 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.154766044 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977616216 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.853116508 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.486047156 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.850687337 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074302257 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890579217 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.851469207 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855148268 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.067393935 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.822425381 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84993725 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.483914571 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.908754185 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849275601 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082028085 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851595561 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110974829 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852211836 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084475727 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.406277771 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.878549086 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.026007617 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.054362944 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.854483685 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094229604 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091442895 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963348023 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.06959576 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.485096352 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85163942 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13595327 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.853216931 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.84964959 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022951499 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851554246 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.997088632 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.855085639 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135103129 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869942482 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013177983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855511227 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.121939291 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881088576 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90027529 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850272198 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979525501 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852503007 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.6838714 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006389179 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853038 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.8481217 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.404830213 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.853330268 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00025348 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080194965 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870889197 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.92241972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.514978117 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850495746 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938613329 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871050552 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.24755679 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.85128277 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.010690222 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.856235284 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851221926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.852148157 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089299635 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.046744556 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.860005435 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852214968 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.747198117 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.853915072 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852073927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.035683989 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.761994355 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851666477 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055291393 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85354552 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980471804 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854067044 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.928161055 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187709473 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852916007 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852316765 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.852759052 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.853878461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.853636492 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060170941 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.882949606 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.381861634 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990127528 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120298569 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.159300343 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.109287325 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894877457 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857598773 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.106029933 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.855293911 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.913469138 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.854824666 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873866154 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082857321 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859650527 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060206845 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.131902379 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.724167492 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902071194 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.855718201 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853714317 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.854367154 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.020330611 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936730495 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859768187 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.855138055 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97006392 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993995917 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.065657213 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.860820162 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.979721409 seconds)
  done (took 897.742248944 seconds)
done (took 1216.950143597 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.857285072 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851875123 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.851520563 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855493726 seconds)
  done (took 29.198136661 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.85873215 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.85825994 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.856257181 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.86018997 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.853905533 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.858137945 seconds)
  done (took 12.926569479 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.932004175 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.852651209 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855682418 seconds)
  done (took 21.422519445 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927481113 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.235476046 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.992330108 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.268357957 seconds)
  done (took 10.206707709 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.858287166 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858978536 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.856742042 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.858423062 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861512518 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.859575061 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.856927028 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.856446198 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.859640685 seconds)
  done (took 18.510646379 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.837219203 seconds)
done (took 97.884694284 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.866247044 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.662287844 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.920001507 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.95477064 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.877392445 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.204909649 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.861974632 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.161402154 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.887704314 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.877865376 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.341035324 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.249522337 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.91540622 seconds)
    (14/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.635502822 seconds)
    (15/309) benchmarking ("sort", Float32, false)...
    done (took 5.557683736 seconds)
    (16/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.857470802 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.786813047 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.914916542 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.915571588 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.502177589 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.878361461 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.735927328 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.258980685 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.859439382 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.049765642 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.266212035 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.946581143 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.858390906 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.342969688 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.501483396 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.861709785 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.945599196 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.113687369 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.932768 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.025419363 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.856989081 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.414984009 seconds)
    (38/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.244698913 seconds)
    (39/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.890156785 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.098222862 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858812545 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.111904722 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.275267715 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 2.09869398 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.979817366 seconds)
    (46/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.004806039 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256359802 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.016868631 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.410916557 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.980207819 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.544303207 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.104891502 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.160296633 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.016609503 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.877030234 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.857184917 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.613767175 seconds)
    (58/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.916519298 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.860890485 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.952147202 seconds)
    (61/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.962333554 seconds)
    (62/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.986076802 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.83870426 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012895043 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924154766 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.871497174 seconds)
    (67/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.30541055 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.989649119 seconds)
    (69/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.532726071 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.041217869 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.270469207 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.320622625 seconds)
    (73/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.812948656 seconds)
    (74/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.37538869 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.857344207 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.284812126 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.857818312 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.963494266 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.866952677 seconds)
    (80/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.042397188 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.861224699 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.012390842 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.097974463 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.153274192 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.860480382 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.430777483 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.954321472 seconds)
    (88/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.020777673 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.17929294 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.09892058 seconds)
    (91/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.779669675 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.958644249 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.206337269 seconds)
    (94/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.861247452 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.126905133 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.971416283 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.862753886 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.95863651 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.673222721 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.970680138 seconds)
    (101/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.353411214 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.187805789 seconds)
    (103/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.868969724 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.096030611 seconds)
    (105/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.862708512 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.341784284 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.220422429 seconds)
    (108/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.348811831 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.265390581 seconds)
    (110/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.86338075 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.501785387 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.29743008 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.865124371 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.197693919 seconds)
    (115/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.015471109 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.169387031 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.861638177 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.886068193 seconds)
    (119/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.97010465 seconds)
    (120/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.69633963 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.000721747 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.067024226 seconds)
    (123/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.991306532 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.215688487 seconds)
    (125/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.871149419 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.983958506 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.112221185 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.15898918 seconds)
    (129/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.757573052 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.958464685 seconds)
    (131/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.876537238 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.892858804 seconds)
    (133/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.946971526 seconds)
    (134/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.88330362 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.882434687 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.93945169 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.112789632 seconds)
    (138/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381369304 seconds)
    (139/309) benchmarking ("sort", Float64, false)...
    done (took 5.636412287 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.883175903 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.868169293 seconds)
    (142/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 3.220282632 seconds)
    (143/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.043719848 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.190055729 seconds)
    (145/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320986533 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.870003822 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.216962486 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.114856453 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.969454981 seconds)
    (150/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.002290499 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.974922279 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.865038454 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.888743423 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.867418787 seconds)
    (155/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.21410217 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.182648159 seconds)
    (157/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.386397395 seconds)
    (158/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.955502496 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.868236146 seconds)
    (160/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.539483 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.118467103 seconds)
    (162/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.108227983 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.883044139 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.96548839 seconds)
    (165/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.015181486 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.872225444 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.996850388 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.016472251 seconds)
    (169/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.367787156 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.003324728 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.262509505 seconds)
    (172/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.319971954 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.171940124 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.866443007 seconds)
    (175/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 4.103448675 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.768677238 seconds)
    (177/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.153566255 seconds)
    (178/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.947043509 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.866297664 seconds)
    (180/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.61538731 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.999810104 seconds)
    (182/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.310046532 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.07747259 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.000551917 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.908774175 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.005418013 seconds)
    (187/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.237692261 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.240271013 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.294971054 seconds)
    (190/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.947384754 seconds)
    (191/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.050495395 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.953422472 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.079504418 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.215819224 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.959847995 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.112151212 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.048143466 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.852936145 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.080643966 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.885617289 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.878917697 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.055484492 seconds)
    (203/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.023564563 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.623111362 seconds)
    (205/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.388931475 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.48873087 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.210321122 seconds)
    (208/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.972275347 seconds)
    (209/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.261656475 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.936937785 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.887767134 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.872937091 seconds)
    (213/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.944362416 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.880471806 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.112151215 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.305687169 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.104661539 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.87372149 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.166444996 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.877139084 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.192114204 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.875828893 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.951745962 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.428032257 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.652691732 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.066921256 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.009799483 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.186456296 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.532261801 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.778708906 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.878078357 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.876257182 seconds)
    (233/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.965929339 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.092059153 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.009470225 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.948205552 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.142294318 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.874540532 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.107855632 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.555819748 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901647752 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.872177496 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.975395061 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.635513137 seconds)
    (245/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.039611847 seconds)
    (246/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.750979294 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026385142 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.970162311 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.890182903 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.881023721 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.296584444 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 6.880522948 seconds)
    (253/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.882505464 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.979143097 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.781514389 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.008512606 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.87594234 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.652592603 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.226015477 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.873546079 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.112216707 seconds)
    (262/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.986705069 seconds)
    (263/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.973140765 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.193388768 seconds)
    (265/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.983985225 seconds)
    (266/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.008165984 seconds)
    (267/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.755202736 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.217671776 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.008737313 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.237212194 seconds)
    (271/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.9666821 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.877401892 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.037805987 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.011883011 seconds)
    (275/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.200166537 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.884618539 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.990218131 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.277099717 seconds)
    (279/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.621049271 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.664079436 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.120072659 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.771915602 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.880612249 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.888374131 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.880105924 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.412393573 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.257349572 seconds)
    (288/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.247168334 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.897273271 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.798998397 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.886775538 seconds)
    (292/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.144733454 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.978178979 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.716723833 seconds)
    (295/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.892298236 seconds)
    (296/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.098385073 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.896851953 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.930129885 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.415584278 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.892974312 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.910169354 seconds)
    (302/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.643788231 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.887687151 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.970072861 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.535703704 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.883838061 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.193348222 seconds)
    (308/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.309724698 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.076393655 seconds)
  done (took 1006.499948525 seconds)
done (took 1008.34419209 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.91229192 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906719204 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.884808664 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.905204629 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.997407956 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.931497522 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.902200802 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.890860416 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.935164556 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.937185604 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.885024159 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.93411075 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.884969922 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.887956985 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.885497162 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905534033 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.185780838 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907941167 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.903084404 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.901159649 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.904780634 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.88322306 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.937499326 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.931890254 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.890164977 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.893553419 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.891447536 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.904918036 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.000279249 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.891968907 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.889373402 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.90317592 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.182921206 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.903456321 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.884894295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.907722407 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.90085749 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.903609501 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.891484622 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.923406764 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.273324181 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.914883019 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.891405803 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885618976 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.885486395 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.892519061 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.890780302 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.899806805 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903484111 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902060684 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.268178171 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.934612179 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.892559522 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.88859816 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.902359552 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.888539744 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.893231474 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905879757 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90594537 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90490041 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.170525513 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91455156 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.892267054 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.910700327 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.898818796 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.305124938 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.91590556 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.896420249 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.276008487 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.924019794 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.304647783 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.925492704 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.892194295 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.904965548 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.92425595 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.182388311 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.906704199 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.891725765 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.901608574 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.887821545 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.903044005 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904892763 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.895333025 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.891659436 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908317758 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.937805187 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.902245719 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.891350904 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.905048446 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.911401052 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.90209085 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.90473675 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.895642892 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.891257632 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.906739733 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.894968994 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.894032009 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.893550645 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.897146396 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.907553391 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.272852258 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935903837 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.887726213 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.889532591 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.894433047 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.905942459 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.271797488 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.919645553 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.916412313 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.942489892 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.891862235 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.172758929 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.915520853 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908982576 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906134478 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.894216205 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.889908528 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.177101752 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.291330917 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.938517634 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.893058921 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.890818603 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91310192 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.893864881 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.890909459 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.188212001 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.915002267 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907468419 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.01625325 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.90683164 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.926181777 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.889118676 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.89693765 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.937201931 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.909823331 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.928426581 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.895863517 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.909739259 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.911708455 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.891877779 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.906714688 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.904859506 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.893619043 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.899456497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.891895643 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.938814777 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.909182094 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907827663 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.913484795 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.016361475 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.89289462 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.177789197 seconds)
done (took 296.900462193 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.970068319 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.894464523 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.984749483 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.890763686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.983855253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.966847993 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.889253416 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.893450888 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.889752026 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.398137625 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.890731097 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.897732471 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.893875054 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.891670266 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.965362826 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.891262283 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.888725216 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.336447849 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.892650779 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.970565187 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.894000775 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.890401633 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.892654455 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.397050596 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.89334739 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.892570327 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.974889192 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.891043487 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.443786231 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.896116378 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.896780801 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.342661617 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.974595233 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.918993776 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.902467173 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.89678485 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.98395323 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.90197598 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.960693847 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.964602509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.985507933 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.924819559 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.895725134 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.89397923 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.894685726 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.894362618 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.892792036 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.927267465 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.898546787 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.895960554 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.34138588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.898690224 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.902404391 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893801712 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.893015249 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.920324387 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.893497529 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.896994097 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.977933717 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.894189821 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.964884367 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.510111357 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.394553823 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.891889709 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.897645981 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.900626075 seconds)
  done (took 187.08340362 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.962080961 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.973359238 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.962046777 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.899322446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.944330114 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.964185094 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.89932947 seconds)
  done (took 15.422619529 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.904023264 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894277068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.946516104 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.945034712 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.895167878 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.078060709 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.907114954 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.896868517 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.923385286 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.895777737 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.565708374 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.94630506 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.902487559 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.896030495 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.909305387 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.953804862 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.900126807 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.896573613 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.017035423 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.045195842 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897979726 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.902703925 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.924183851 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.910157561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.896602859 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.895961121 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.895641468 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.905927887 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894032501 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.894440329 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895567489 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.951606531 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.899208466 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.900484278 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894992778 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.898481374 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.899005729 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.896664094 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.896168589 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.900536469 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.896710675 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89661396 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.898047788 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.898237789 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.900846668 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.922155323 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.897240762 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.898487686 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.896713413 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902238733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.925865171 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.898168601 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.894760305 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.90230165 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.941703636 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.905532494 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.896717113 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.898281975 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.898106227 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.899333563 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.897407447 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.049395581 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.948722046 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.898409995 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.948504063 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.056791746 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.899004135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.898237428 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.898123825 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.989728081 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.90130184 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.950190186 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.898242522 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.015215238 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.897722663 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.084135878 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.924469042 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.906309406 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.903967409 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.902090153 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.907216456 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.899028465 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.904220246 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.909615391 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903837752 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895227889 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.898470927 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.902297089 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.909504918 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.89683467 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.950630755 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.898331034 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.896379257 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.042601898 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.898783818 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.017971106 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.929919023 seconds)
  done (took 208.788183498 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.90815171 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.911350764 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.904145423 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.917894784 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.901136969 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.901401166 seconds)
  done (took 13.267590801 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.903555298 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.901578517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.899342882 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.896168763 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.901579893 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.899486547 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.897615617 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904930913 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.902498971 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.89765514 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.897924685 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.902160509 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.901683498 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.899588907 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.900653778 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.900540411 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.898833498 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.899136146 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.900032227 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900097988 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.106836434 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.897455896 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899307477 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.903531918 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.900808412 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.900117129 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.912719737 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.897675144 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.896145488 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.908715832 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.903266083 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.899012959 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.902631505 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.908950629 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.902491418 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.905891445 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903130144 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.900979196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.899240758 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.900522712 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.899881423 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897847426 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.898755112 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.900159049 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.902365328 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.906873197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.905332965 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.916631486 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.89953456 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.902972777 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.902301587 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.903609147 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.901311529 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900855805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.905590676 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908368082 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.909757438 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.900546983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.901702191 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.907927988 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.902942431 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.905770967 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.906529901 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.903940074 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.910467028 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.904273361 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.908058635 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.904103495 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902960729 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.900877772 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.90381035 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.901604985 seconds)
  done (took 140.009463871 seconds)
done (took 566.403236091 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.159604203 seconds)
  done (took 8.984015702 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.915817173 seconds)
  done (took 8.80377248 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.164854908 seconds)
  done (took 9.993248658 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.911046471 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.910694358 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.910928438 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.899933064 seconds)
  done (took 29.47392686 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.904188811 seconds)
  done (took 8.7281523 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.923690615 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.896304912 seconds)
  done (took 15.67768229 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.050309659 seconds)
  done (took 8.879404164 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.197978825 seconds)
  done (took 9.029953653 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.908325903 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.909693959 seconds)
  done (took 15.662516906 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.906763342 seconds)
  done (took 8.731485869 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.226417521 seconds)
  done (took 10.074765537 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.921490043 seconds)
  done (took 8.812985123 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.977192356 seconds)
  done (took 8.803499162 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.799762923 seconds)
  done (took 9.622622409 seconds)
done (took 163.106513253 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.918206686 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.897006872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.899451707 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.903625034 seconds)
  done (took 29.442936709 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.934886873 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.936093533 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.945313551 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.934214939 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.927514092 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.928003549 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.93429672 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.936886028 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.926627581 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.932193862 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.937322506 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.932787538 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.937259518 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.946972382 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.943419188 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.933385088 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.936418747 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.936761596 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.925578006 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.946194066 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.932770273 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.935115308 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.90225974 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.90139672 seconds)
  done (took 48.207746722 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.119814657 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.990325783 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.072816703 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.977314337 seconds)
  done (took 9.9856072 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.900140093 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.980853084 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.973297788 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.957685271 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.960920404 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.016700526 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.970121872 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.041823154 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.031719852 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.108066968 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.908022552 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.92246248 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.927566247 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.963237514 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.016695053 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.900480184 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.903651502 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.026532321 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.979284772 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.209115296 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.901036231 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.969577523 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.967848739 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.971660072 seconds)
  done (took 49.334719366 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.9034743 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.91205733 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.912134869 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.906086364 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.903507355 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.906653852 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.909900973 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.905303074 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.925586601 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904653129 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.902752644 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.902440456 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.909439768 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.90320905 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.905610129 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.91693952 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.917306254 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.903747214 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.906627989 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.913584444 seconds)
  done (took 39.997410707 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.905950786 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.166531935 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.248887967 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.156052047 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.904655687 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.904946227 seconds)
  done (took 32.114859976 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.916938721 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.91063586 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.90827894 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.961182305 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.038841969 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.907172914 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.907089478 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.918408167 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.949527595 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.969846917 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.920740348 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.933341034 seconds)
  done (took 25.07088944 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.908730551 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.918031374 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.905792966 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.932434329 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.913828773 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.911043314 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.913143877 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.905996726 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.915730436 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.91933497 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.911850808 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.921554499 seconds)
  done (took 44.810490902 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.609768015 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977898793 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904924476 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.930116234 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353422738 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456235286 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.795529858 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.559580169 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447571945 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.829098707 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107975316 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.908304862 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98976459 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.906393057 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174835499 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266629585 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10335195 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151150432 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.607223857 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902842258 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.109600025 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120445137 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.195778343 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903387013 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906803378 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.91027485 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367982918 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.575084625 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011728261 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.01005776 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107907032 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.85619741 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952972943 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.909799282 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.918541249 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907840037 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9109301 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177373904 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.917373966 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09401493 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975101519 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154784486 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90981864 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321160829 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.611687104 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.207123368 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.019824976 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90571803 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90866501 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905506848 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834424857 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993444434 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.908327663 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910957111 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.607368187 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908745973 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982747658 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.908847415 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112157454 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.714337805 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593704887 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.90555236 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913559304 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468462062 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922539097 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.098411485 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535606473 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368778202 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.328711638 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.004871909 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.908308398 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910403086 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.012800523 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831598902 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.534698465 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019565274 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044960225 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.923349144 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550256516 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197935697 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.33347708 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471462781 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828756073 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184697003 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.573923505 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856309789 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124481943 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.758390946 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834284905 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122380952 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942737351 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917152803 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173212959 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538746721 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093196527 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.923762739 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350311845 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926925109 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916801499 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910904496 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.125485003 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.17152793 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9825852 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030987877 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92366156 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.992695728 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835516836 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.919443029 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.91010368 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.791322835 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911053233 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.634280308 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.00759762 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.587939455 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.998122311 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.849115997 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913103826 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91211266 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022838161 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862448557 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175807812 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.210347169 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.567956419 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.681204629 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.092807855 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.277728181 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142976799 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91518956 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125785591 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449083541 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.306264422 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.962692047 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202572559 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.966881781 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20317683 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332369765 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976887922 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608167191 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.513225671 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126621481 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926545522 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.914386274 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916332422 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919931828 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848803322 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.571361274 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.29974196 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.084003511 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126056541 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.160923301 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.94468423 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.643285548 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269815742 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050376058 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.899085139 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.566625242 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.985111039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.681801968 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.004416223 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910097596 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.993785444 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.923908262 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928128091 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005203182 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930675626 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.923559126 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.223902554 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282678341 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.91494665 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.914262875 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862121955 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919275789 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.915651948 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468459154 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880005558 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.920515135 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.926683122 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.787359197 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973909527 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915689876 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917351971 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.435851895 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417946828 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.917291335 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.646066102 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.95073006 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049196003 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181949672 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.270471189 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048642185 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.614259193 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.325753408 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.028258825 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.615958085 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842307975 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916990451 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.855206829 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918535168 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916426372 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920532335 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.10545958 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187702877 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215638613 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.390837842 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981834891 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11822615 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.546588498 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.945088912 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.91737014 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920555579 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.919166378 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916236512 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.416863529 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.453836479 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92945778 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020135584 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922115652 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047041669 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.927442219 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842533499 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918171442 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91789161 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.233297967 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.989100698 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.869731997 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.227885103 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.672641023 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120386978 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963308676 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.929084129 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921954506 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.592180517 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.036091004 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842708688 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.211197194 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002680341 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.546717362 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.665209638 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479424125 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215446104 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230533085 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.240238652 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.986910628 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.130079838 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003314724 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972297298 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007421718 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85398734 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.840865354 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.57256601 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250067313 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184511777 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923058969 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134683419 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550017931 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221952778 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946872479 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.601809742 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272758625 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890966574 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933484695 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.169902029 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07616687 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000672188 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924213191 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874862699 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255564313 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960961093 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.621160057 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935544442 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.272146989 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.235927022 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.136802151 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.302752365 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142522438 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92457257 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273407868 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.976809667 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008038177 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928134723 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.901285489 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.138472039 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497784985 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.872474789 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97119163 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.910998936 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263401564 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.830531575 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.922933351 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.915480048 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230229029 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921295077 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.292178524 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293695598 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.025492485 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97047863 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146686821 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519938951 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277396884 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473758753 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.42925548 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938940209 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847572156 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.62095751 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.124393524 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.928351108 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.887881479 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13300864 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154978007 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598134928 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137872622 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166029105 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.931958234 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195627628 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995531555 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.017953351 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.255037472 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.387445072 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167687329 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150054401 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454753185 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135946932 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37868614 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.071478552 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.924491117 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126087195 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1405792 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.135974859 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.332660004 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090563333 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.633248203 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.928662972 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.129664043 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224629495 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981913699 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.326043783 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098880897 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.012006768 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930567634 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99782381 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928156614 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931957643 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.325332884 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.455954598 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.935906538 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001997775 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976898336 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.541569363 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.941414714 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.929142823 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198318022 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280631224 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257319219 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908731769 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920833009 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926601356 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051104354 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.853189119 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92789404 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19478521 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.926420222 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.174550018 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.126684485 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937880177 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.270491382 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321032755 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441662612 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009044921 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936426228 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145119906 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242671381 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.953664666 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093843577 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195917092 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262720481 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.957427484 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.328085238 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17474373 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928475799 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.950439082 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92985776 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046009898 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.128355735 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204884886 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.431818854 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.578276842 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272302318 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.783779393 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929794373 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.633331899 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276645271 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.197994299 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975001255 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004279516 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931732336 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.203687057 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.70209502 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058581478 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.924925873 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903575137 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.936447874 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.191841684 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.170238436 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.637339137 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929150732 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201298438 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232879488 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197801364 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.979740689 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.920893449 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189140859 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929548155 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.957023598 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497185873 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167576882 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189500173 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94399051 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946748597 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.752663391 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869583075 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.941236039 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987321111 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168745892 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960229155 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.456443755 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.641681825 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226818577 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9904402 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950039794 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221632946 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.490878384 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.795268921 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950605454 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15536913 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.973046711 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296226067 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.946850972 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385524019 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.326168715 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.945203648 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.489887839 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.266568415 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290213181 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875894616 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950714623 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156421335 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.934330895 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.985848481 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.926228134 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379004922 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254954082 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.67824617 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501600566 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.942579561 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.947730881 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396812798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058002494 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394736668 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.045940944 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963793134 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462436009 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.660628484 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.23661825 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191949677 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.490662232 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.616484249 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.946591501 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.947457633 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943772343 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866081289 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.130834304 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.136209528 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230780726 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975838302 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39413991 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057943483 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.302607355 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069339243 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.1137941 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061423331 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466169456 seconds)
  done (took 1687.415401152 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957307776 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.961899185 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.993957909 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.958576872 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.95824668 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95933857 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961868011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.040190708 seconds)
  done (took 57.659042454 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.946513794 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.047802512 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.953165047 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.949651183 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.949120127 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.949612198 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.104019475 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.962811433 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.950096417 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.953514257 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.948449033 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.945365022 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.748992006 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.970145624 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.953806989 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.944533583 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.953730936 seconds)
  done (took 76.108317525 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.949486758 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.054949915 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.981654174 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.954581266 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.484261152 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.953540575 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.172241642 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.954382959 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.974611837 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.154070387 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.241446409 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.992668633 seconds)
  done (took 90.736802701 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.960901491 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.952245815 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.95129996 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.951923286 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.95222864 seconds)
  done (took 11.648677574 seconds)
done (took 2204.441409588 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.180197155 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.00839458 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046897322 seconds)
  done (took 5.923600161 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.096990767 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.142554234 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.255042488 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.016524838 seconds)
  done (took 10.389890459 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.256981615 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.329394822 seconds)
  done (took 6.454759653 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.268670247 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.976347893 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.322049573 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.950644507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.949437526 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.947418512 seconds)
  done (took 22.721326522 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.949818308 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.948098706 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.949210435 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.949195673 seconds)
  done (took 9.666730978 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.947325003 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.666799135 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.948535231 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.959879939 seconds)
  done (took 21.390419172 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.105263199 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.063766108 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.091957104 seconds)
  done (took 8.130541384 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.141976607 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.169255075 seconds)
  done (took 7.179050448 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.095123476 seconds)
  done (took 3.96453177 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.976431104 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.218084752 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.430099289 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.473670585 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.521819218 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.78511886 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.272142859 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.172109117 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.392849202 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.415407554 seconds)
  done (took 25.528203427 seconds)
done (took 136.965885697 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.297121856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.978698821 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.152742366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.308760568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.250468099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.153624594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.171108663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.304126203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.985349811 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.97052945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.302498281 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.215893354 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.119409575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.970480647 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.125947254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.956897373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.187050913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.314168608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.012905303 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.268404095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.177856998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.951555844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.144534077 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.964053441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.187170128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.10533226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.495718276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.95882809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.160328785 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.503884545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.10443926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.413736476 seconds)
  done (took 171.086024021 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.955716352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951456418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950700813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.952692734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.388331806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.953380831 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.953080327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.950745605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.38194711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.375400803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.953112284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.377177263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953624192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.950221587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.951922862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952309853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.545916169 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.95247358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.951668479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.95123689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.95234968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.217603446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952676821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.226172139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.540249795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952863403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.952484685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.952739934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.951373288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.951527485 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952222814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.952190412 seconds)
  done (took 211.78464926 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.927308067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954704742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.955573423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.954162153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.954346427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.955455083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.956196586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.953565234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.539508044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.533524287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.954917064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.953870993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.955996928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.952815161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.954144797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952793804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.952555444 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953488675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.955501365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.953249457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955731106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.668409253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958527853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.668005693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.954976988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955991012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.952945423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.953358653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.955735615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.955567904 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956234102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.956366592 seconds)
  done (took 222.99098906 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.201632328 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.955178656 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.956652162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.870545069 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.956603358 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.955251356 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.934964129 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.202559686 seconds)
  done (took 19.911419959 seconds)
done (took 627.655081933 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.37460689 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.20695886 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.113853848 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.982804268 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.251917175 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.029130218 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.978619969 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.042065441 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.809628552 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.054590652 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.619161298 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.999984611 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.715999097 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.004379841 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.084388453 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.034268414 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.533424379 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.630356318 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.100893612 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.057610004 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.140119762 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.9299492 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.057080403 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.852418516 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.650741085 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.976292867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.006145612 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.535287985 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.988392028 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.117216349 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.684789967 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.267496894 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.989812021 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.978587483 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.033108898 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.011528639 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.203142256 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.988693423 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.086511635 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.722885819 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.065071314 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.715811273 seconds)
  done (took 106.501786679 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.96938272 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.964413934 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.965605871 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.964976377 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.975089502 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.964930721 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.965890321 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.967139296 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.965924074 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.965511872 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.964675542 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.973472852 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.964674705 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.974175701 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.965585225 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.965278563 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.966238499 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.973292924 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.965408536 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.966139335 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.965851192 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.966245866 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.964637658 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.966293733 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.965415843 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.966254746 seconds)
  done (took 53.035643963 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.959514255 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.117496554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.206743651 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.983064682 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.963402531 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.966674885 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.979500046 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.962875438 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.965936277 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.965185353 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.067321252 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.965417052 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.981327064 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.208443652 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.98229798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.960635537 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.960654598 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.963937971 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.123975976 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977866438 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.983199474 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.9633257 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.98269979 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.975711934 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.966066841 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964783022 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.966996309 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.412073426 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.971164279 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.067866317 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.009481461 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.985562093 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.375809783 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.216102447 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.020076486 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.968243699 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.961551187 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.072722612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.968946431 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.965533047 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.983064933 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.970057355 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.206674326 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.502090541 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.979526833 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.959339172 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.427037438 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.080130243 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.004159959 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.971649548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211317435 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.982931027 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.962181979 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.965481094 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.002132291 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967553749 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.965812513 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.300131416 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.974689802 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.982381875 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.964822361 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.966507734 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.130550413 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.973857834 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.12498859 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.975544987 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.972014808 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.966522172 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.20984265 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.983084381 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.512591845 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.980748536 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.961889401 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.071694266 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.130499888 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.447296993 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.977668422 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.132434755 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.394791251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.990296312 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.974560589 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.404252099 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.993557325 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.978563957 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.964509387 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.966074637 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.962134092 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.00847091 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.981317386 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.419411864 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.51171615 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.317492861 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.992529953 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.983549302 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.967809295 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.301139329 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.970653491 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963225969 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.203323362 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.519331697 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.982644686 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.974011381 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.491715431 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.985533805 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.986601675 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.976326419 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.215986732 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.98450428 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.009747338 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.965424802 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.974821522 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.972366316 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.987155568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.975093307 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.965311641 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.489951524 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.093113996 seconds)
  done (took 243.623351854 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.96837635 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.964543759 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.967678184 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.966024575 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.967040889 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.968690411 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.966299862 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.96606199 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.969366376 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.968879841 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.967220815 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.968759276 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.969892593 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.062547458 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.971448837 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.971263376 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.574975834 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.969709262 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.97011911 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.968404442 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.610644721 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.974448568 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.968803069 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.965480027 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.967592768 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.970399146 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.072683823 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.970215283 seconds)
  done (took 170.457796404 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.967161725 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.080733227 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.985195105 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.999941046 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.97178962 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.967204524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.068389278 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.987261926 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.976128634 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.967470027 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.967667437 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.029982502 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.974393371 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.066551843 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.005652866 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.072149058 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.075578484 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.976474935 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.970066137 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.969537796 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.000732985 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.975939304 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.031520126 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.088061649 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.987061602 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.083053244 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.988400921 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.96916312 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.972715829 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.086926198 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.986356437 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.029342743 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.996001714 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.98817795 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.086237448 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.088459988 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.071995844 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.07047302 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.977222115 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.968958594 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.969187932 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.972267531 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.083411733 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.987100605 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.977352979 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.084132632 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.986469833 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.970000215 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.971970483 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.971066897 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.985490641 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.989295945 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.034331396 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.096090141 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.007204508 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.993577387 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.070814665 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.099949653 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.972623263 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.073332188 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.976641478 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.081771244 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.988802841 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.974019555 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.971609047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.975257165 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.999593619 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.072557061 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.076002174 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.977474442 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.07173837 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.005001952 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.976517093 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.974119539 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.972977443 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.0863132 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.091149005 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.005715725 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.010721829 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.000147468 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.979202894 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.973984562 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.975861556 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.992474155 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.974400294 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.08487549 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.090331386 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.974914836 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.973694436 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.974531372 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.974733015 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.999803156 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.091199319 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.011309135 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.077013822 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.037463228 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.042971471 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.984824407 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.985199894 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.974021091 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037320688 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.984070479 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.984375529 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.281296252 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.034410292 seconds)
  done (took 213.495960615 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.349837196 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.019399475 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.030991978 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.283261455 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.358657115 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.069485603 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.019391011 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.020352184 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.043751567 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.21655562 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.093609529 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.044123421 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.007665672 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.996772645 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.021889684 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.042325655 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030313715 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.382380361 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.227970243 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.302832023 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.016429968 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.325494302 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.350258759 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.59672006 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.071049547 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.434192443 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.63311298 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.154089978 seconds)
  done (took 65.04338899 seconds)
done (took 854.034726989 seconds)
SAVING RESULT...
DONE!
