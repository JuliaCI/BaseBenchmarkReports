cset: moving following pidspec: 17465
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.296773982 seconds)
loading group "string"... done (took 0.603676875 seconds)
loading group "linalg"... done (took 7.062838312 seconds)
loading group "parallel"... done (took 0.158538276 seconds)
loading group "find"... done (took 1.11787402 seconds)
loading group "tuple"... done (took 1.754685123 seconds)
loading group "dates"... done (took 1.257005516 seconds)
loading group "micro"... done (took 0.221307793 seconds)
loading group "io"... done (took 0.913308201 seconds)
loading group "scalar"... done (took 36.358117298 seconds)
loading group "sparse"... done (took 11.889252209 seconds)
loading group "broadcast"... done (took 0.91958155 seconds)
loading group "union"... done (took 12.53464717 seconds)
loading group "simd"... done (took 4.612969225 seconds)
loading group "random"... done (took 8.503129895 seconds)
loading group "problem"... done (took 1.877686885 seconds)
loading group "array"... done (took 19.462406418 seconds)
loading group "misc"... done (took 1.915430926 seconds)
loading group "sort"... done (took 3.262053998 seconds)
loading group "collection"... done (took 16.960813795 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481636626 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121479114 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113773624 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118120532 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.133340849 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113509447 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122213732 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082985718 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.838354329 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143520894 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118153935 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411590277 seconds)
done (took 5.161765653 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170255958 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082833045 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081575599 seconds)
  done (took 1.341958046 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064673738 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121150786 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066039437 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066566758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066392275 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066067504 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065472494 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065665768 seconds)
  done (took 1.696393093 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073474944 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068697377 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068691972 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06758672 seconds)
  done (took 1.452679664 seconds)
done (took 5.918234197 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761620411 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200553126 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182053811 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398769652 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127840375 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152995204 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.634660752 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335310281 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18232931 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080659788 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107583596 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317030822 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106944413 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.622929971 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073198496 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089568378 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138569484 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422864312 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066891754 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082114203 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08856857 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12819118 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084827605 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074114694 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141479267 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067409781 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129465823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080315766 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066253273 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20615017 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171871007 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656547521 seconds)
  done (took 10.191791366 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095651725 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096792515 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068007174 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136447744 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096250297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069642412 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070588535 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066569917 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086114017 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127264637 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088438612 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100890265 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064811819 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068684307 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084156537 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204719355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082167199 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08211181 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069960297 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074505795 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116185516 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077491956 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077399018 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077163886 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127812324 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179603764 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098148817 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098771411 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06635494 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080126229 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114930777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125703457 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064810575 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066001028 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124089049 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094645526 seconds)
  done (took 4.635678142 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.923870937 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13976476 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089844317 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130628223 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06418845 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106493067 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065096497 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080614999 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201910023 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.28791641 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109931876 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571812349 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111270724 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102903443 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067374721 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067701048 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066528039 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347420795 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108960059 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103783408 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080847571 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069525221 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068613062 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341058707 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067467986 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063273181 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067374998 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057364641 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122108655 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067548562 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.916798527 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12437855 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066265549 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100129022 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16913781 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086826767 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272785265 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068134949 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06395008 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149022458 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07071802 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065407174 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085436714 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103092072 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111723898 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065073847 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066442531 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161260073 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064708639 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07862791 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.972573725 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066835386 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152192136 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07521342 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063817405 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243768458 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085124184 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069053942 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064369841 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174243984 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136389139 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067058397 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066462819 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067492739 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068707802 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35030942 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065855461 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723357313 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069404096 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075857535 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064351302 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068834007 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069125854 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063932747 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072204735 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071812836 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084630351 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065784225 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074376824 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065547497 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065577576 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066034227 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083795325 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358827838 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066067971 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067272763 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063986964 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08551243 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096081767 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065888976 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064596959 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099434862 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07152644 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065366366 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103479583 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0653426 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082889715 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068080884 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114800808 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065492181 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090552994 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064017234 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094311171 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067843036 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098451074 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079385533 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067173322 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.385968359 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064026719 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063332358 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066446912 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064226235 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066287807 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065326734 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077196623 seconds)
  done (took 20.659737662 seconds)
done (took 37.5878815 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.275830487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075711806 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075655443 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075275723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075325644 seconds)
  done (took 1.844051048 seconds)
done (took 3.119117309 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118972709 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097976394 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063904159 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095586695 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06398443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099886403 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099079968 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080698629 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09835368 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063910945 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095581212 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064056909 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064251394 seconds)
  done (took 2.369898269 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08257917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083550609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069515018 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082044127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063519868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081768113 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080482304 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087896759 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080165154 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072068358 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06380454 seconds)
  done (took 2.086659877 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081616301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083426824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069842822 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081113248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063547569 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080789471 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080679106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085158251 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080719049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073045629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063803638 seconds)
  done (took 2.079007521 seconds)
done (took 7.771572783 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077133512 seconds)
  done (took 1.305604491 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589296225 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.11754058 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081108839 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112371078 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183588036 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118973678 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27825589 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086581074 seconds)
  done (took 8.976293229 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088383857 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082454993 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071235156 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070714284 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069017309 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071833681 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068746706 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07127048 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070963252 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070856186 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068864587 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06825496 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067938201 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068144614 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071368735 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068756389 seconds)
  done (took 2.448129864 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091965876 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090370842 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072787877 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074284999 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071710048 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072043624 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073693875 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073589738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070772375 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071613284 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074428707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073121244 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07173696 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064739353 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074191004 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07543835 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07102294 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073757289 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074860221 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074627322 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074221948 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064218735 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071316121 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073673437 seconds)
  done (took 3.109227113 seconds)
done (took 17.078217179 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111198536 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071162925 seconds)
  done (took 1.416881873 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080044351 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082588475 seconds)
  done (took 1.408028109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081639642 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065088404 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090674962 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077590074 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066233277 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065755339 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087111352 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066013373 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06552776 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065921253 seconds)
  done (took 1.977240897 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06809368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077042251 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070513937 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080427125 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073423752 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06372301 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072153953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068147262 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077577213 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062644765 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070678343 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081854835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071206703 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083472737 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072299636 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067856206 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070588738 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06700106 seconds)
  done (took 2.544317045 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065465364 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067241841 seconds)
  done (took 1.381490967 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066499965 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063673366 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066772572 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066774658 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063055203 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062696488 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063293479 seconds)
  done (took 1.697573897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384530741 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110831154 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295825974 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070535236 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081660621 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249919642 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065403813 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070356156 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069932788 seconds)
  done (took 2.6878819 seconds)
done (took 14.365158276 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078197397 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085167659 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094187447 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364539218 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091799023 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06613554 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113747126 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188596581 seconds)
done (took 2.34364789 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210490614 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612738259 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.380174625 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195257378 seconds)
  done (took 2.438335464 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323650775 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086328861 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059154941 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066473476 seconds)
  done (took 1.796144809 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065779794 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068060757 seconds)
  done (took 1.393209419 seconds)
done (took 7.099453654 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066274411 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065359629 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063651638 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082503195 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065733364 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062871399 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063307703 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065511799 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065392684 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065753278 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068478426 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065585614 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063349274 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06312066 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065477156 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063245744 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063430118 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063372392 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065652773 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063241035 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068697585 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0656966 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063317074 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063232385 seconds)
  done (took 2.865064656 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08237452 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066315818 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070721026 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0706355 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069661969 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071031811 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071092651 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06603662 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071117784 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067974679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069567546 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069630845 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067605135 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070376938 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067806894 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06978786 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071314342 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066092408 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068208401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069684103 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070772259 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066080217 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069448805 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070420497 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06951239 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068984477 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068211735 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066327697 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070636099 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069310411 seconds)
  done (took 3.353477263 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069102304 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063131607 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064429237 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069987588 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0639014 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064689587 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062988276 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063745919 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064722593 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063243024 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064620644 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063035946 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063246357 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064505909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064132616 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066786389 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078827803 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063610618 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063380065 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063767256 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066968116 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063563807 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063313462 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062810966 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063409582 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063594591 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063719352 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062979366 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064341726 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063160441 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065972753 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06743946 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063189832 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070476117 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066850767 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063036468 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067141727 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062828042 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.176064996 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06268753 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063127112 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06341912 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063143135 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069905027 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063310709 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064757763 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063187774 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064265159 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063481223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065483537 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062537629 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063006349 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064953218 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064333047 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067158995 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062906172 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064042595 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062544544 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063884838 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062996033 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062712343 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062492729 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065492594 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063589344 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077547509 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069966449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063025682 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066061557 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063874736 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06556532 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064747135 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075638278 seconds)
  done (took 6.06155534 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086668519 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087261311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064697458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065061608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06178314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064027571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067174038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064138291 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064927588 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069566961 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063940009 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065232792 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065160333 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076828026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063918311 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065206336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069009349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061560772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063467835 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066755526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064182744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0669646 seconds)
  done (took 2.766012168 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152843548 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070484266 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105166256 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072276863 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067534395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07258528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069596085 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069433611 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069350154 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067713378 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06793512 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069519634 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067463659 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067524318 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067620041 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06809508 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069633099 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067871286 seconds)
  done (took 2.635305669 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076850532 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066145168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086119179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065641673 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065980766 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068500556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0702501 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073861639 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068161394 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065621574 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073970639 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067678975 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067583068 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065550289 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067967179 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065390336 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067995616 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065504124 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073980682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069977921 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069998908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07386261 seconds)
  done (took 2.809761121 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079149653 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068215884 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082405573 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068477492 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061786286 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064343794 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069863631 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065830869 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069531855 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06746976 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066245658 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064177855 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068909042 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065586443 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068655796 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065496805 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066864767 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065595181 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067045478 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061493584 seconds)
  done (took 2.632386973 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086513905 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067578545 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067208036 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075968773 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066795617 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066807865 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074722837 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067552277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066825453 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087176723 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066718058 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067171026 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074816337 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071582284 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066922083 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074734367 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074555844 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074602123 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066667067 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066793519 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087121492 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06711687 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074350823 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066754782 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066562354 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067005586 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066703456 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07167822 seconds)
  done (took 3.27517005 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066093379 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065546832 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063525196 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063313673 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063339595 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062862872 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063284658 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063110915 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065416674 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063222072 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065519093 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065847106 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065295694 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065658152 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065426913 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065291033 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065714753 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063984192 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063154036 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062786213 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065493567 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065627253 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065443751 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063090178 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063091532 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065480221 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062899284 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063512898 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065242517 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06310031 seconds)
  done (took 3.212068953 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074515415 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072097696 seconds)
  done (took 1.428194596 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062739747 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079200374 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062830544 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069798824 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069612681 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065930447 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073009323 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069365191 seconds)
  done (took 1.830623743 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081626931 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077115522 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068229713 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079541486 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076471409 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082702152 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131635848 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066987467 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072584686 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063862558 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079464357 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065141431 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07165338 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066083575 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071252697 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072108906 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063672432 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072777535 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068100596 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064464849 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067023906 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074658373 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067854588 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061185148 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066947934 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087527624 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076720976 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065597789 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068553911 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073059698 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071204199 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059835075 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065568626 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066400214 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063987335 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075331509 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080708194 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068896756 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07481274 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06657581 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076751503 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061128234 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070447281 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072163966 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07577912 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066199391 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066707762 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060849653 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063659295 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068176012 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0612804 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0659054 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060331429 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074933419 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069106342 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076225312 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064576677 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067162251 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0686118 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068807861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072136223 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067469332 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068086694 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065437155 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072338637 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069959944 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074699866 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060893321 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062074442 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063900127 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075421201 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088234208 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072564825 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066258737 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066626286 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063204897 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06873869 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066738857 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071309284 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072161613 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065577926 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070817153 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072898322 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065725137 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068438534 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073560532 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064085121 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068530264 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06383322 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08155948 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064303935 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063669728 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063681709 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075496207 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068934416 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064970929 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063402329 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072529022 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059679794 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06590877 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066436459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066085249 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075526903 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069845993 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07028513 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073900968 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07269409 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065760784 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068396194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062475917 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066117167 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064674784 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072683899 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059949738 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068470127 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066279542 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066215589 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200751333 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065576694 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06696453 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074420005 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072616709 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065033293 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063823269 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06934121 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066270405 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068970301 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074499577 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0649806 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061408396 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062290765 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069611362 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0661937 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070597025 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071449832 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068974507 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060948849 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064349399 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071364946 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074953125 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067072274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066732299 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072340183 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067920849 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06586757 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07267506 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068150133 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065544304 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071732553 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067471775 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061323661 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070210039 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069531855 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064870636 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070238529 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069259656 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068690395 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066957052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065070702 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073924705 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067900169 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066068511 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066307167 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065120683 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077392968 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068451689 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061334345 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063550589 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075240921 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064329173 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066049439 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065170391 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068211829 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066820143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064352261 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065465699 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068477462 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07654326 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070141604 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067232479 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07159717 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077087736 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066058621 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068159509 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065471691 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067570988 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066769886 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075315298 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071844609 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070492615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068278107 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062806066 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072383593 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073811677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065501141 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063909345 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065431039 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070297469 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072085085 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070474756 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066742459 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064258846 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066532177 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069637414 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068835046 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065186304 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06514727 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072848052 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064070156 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072944584 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066595436 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07568941 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069359971 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061126952 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068533249 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063920156 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071589362 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060945643 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063516393 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064903178 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066678932 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064570938 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067984831 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059951833 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072565061 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072640956 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06535403 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064978107 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06506294 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072216815 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067091805 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069326571 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069040206 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071507635 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075792089 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065113521 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068957836 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075556687 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065136468 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189502468 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072448695 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065373613 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065124628 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065655927 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064593108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068915489 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075339363 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073546114 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060365574 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069606928 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064648158 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065804841 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061563193 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071273564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069972317 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067825883 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073265379 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067159571 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066999513 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070027122 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066235239 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06714545 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067891774 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069676801 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067645325 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068453768 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065819407 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069422934 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065832552 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063458421 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068419835 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066519142 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067120382 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071674862 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065638072 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067107176 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068724302 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067141455 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067462376 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067070669 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065857116 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069945185 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066997468 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06675525 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068881941 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061978807 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073370225 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066079576 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073848858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066731911 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063543188 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073158615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068813364 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072036366 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067152307 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066909552 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068032851 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066032799 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069283826 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07357403 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064373772 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076901351 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07428793 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066529958 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068602362 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066808639 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067849057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0645942 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067116107 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067145979 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066283794 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065887245 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070982308 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068780178 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065981101 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067497331 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066727511 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066030069 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066854978 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060437388 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065125916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065588841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066032229 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075484539 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066211679 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065456645 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064586209 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06652549 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064734407 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062546894 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073822407 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074896697 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066330382 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072835616 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064940533 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067536125 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076066445 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05982116 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063789131 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063352039 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063610258 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072747263 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066167895 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074396108 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065929569 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065466179 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062726217 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066419913 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063985663 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060363009 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063134174 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069196975 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064561902 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06443603 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065668649 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067770838 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066447642 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075075979 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06448378 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066010581 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066051506 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062784199 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064453125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064704814 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201387958 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068113987 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064282313 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063839434 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066066223 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067074873 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067814357 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066440491 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068044244 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076506772 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066090867 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069874087 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069969528 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061356127 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069518868 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066646154 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066667858 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066125168 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070375273 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069639469 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067894992 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075767389 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066144777 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066687367 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066597463 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064509112 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066444938 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065822719 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06669174 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065266284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067551673 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073652919 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064045339 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068990977 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066905456 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066780556 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073101173 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067275511 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069006327 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072726307 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06653124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067955201 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074070081 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070715112 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069247871 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067440844 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067672803 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072472924 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065266952 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072346291 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066526077 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067385735 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06828759 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064226182 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065895286 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06609529 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065682677 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072505655 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067079214 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065110075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065733739 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064097705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067068735 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069303508 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073734822 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068182044 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068819631 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061039874 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063705393 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067383715 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063834641 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067787446 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068104818 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07126327 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068688747 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066781691 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065054919 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074744841 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071469629 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069402132 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063954389 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069587845 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066875571 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068196608 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067196571 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066345684 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06731555 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.0697442 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06765568 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065442989 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072822781 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069223526 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06656631 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067233881 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066900614 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066061515 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061028389 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066473879 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067554055 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070515702 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067786345 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065888028 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07610378 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063512073 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066505998 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068918793 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064995194 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07040241 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061614587 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067288354 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06684792 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066776275 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061236306 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065346272 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063874778 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067808198 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065096844 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061018522 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075754352 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074325921 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06856983 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064540156 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064364645 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060971581 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060995324 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197901926 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067776876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06970097 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076927454 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066324834 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065979618 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062020394 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066126729 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069057729 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069631695 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063611547 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061334839 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065627853 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070057807 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071786332 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06516998 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066755772 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069893996 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068453351 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064663284 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070048578 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063945755 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069924587 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078841538 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067219451 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067342899 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07266515 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074124292 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066952995 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061433066 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066977047 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069427603 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067377357 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067836453 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067618248 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081468206 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06936136 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065624298 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065107897 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069359662 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065390434 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074033412 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067419827 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06657668 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070318287 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069612469 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075443006 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069574683 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073989132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06971728 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068959118 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065031353 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066929289 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064276265 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065185296 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067397108 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067887839 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07179473 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074987219 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066188752 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076984783 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074734498 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068472518 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062845327 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065883717 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065955841 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061930322 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067402109 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064779268 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064425371 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063848182 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064944943 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067190655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071416477 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067067411 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066811398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065880033 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060611463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068989661 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068620712 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0670125 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063261642 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065997725 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06636758 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070593793 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069711276 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064037378 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067709014 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067686936 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066862189 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061742692 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072495881 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065040462 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067677506 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065113363 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065838539 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066680877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069508119 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070401893 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066882476 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068208636 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06915207 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067554922 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063092062 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062956008 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070942751 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063502181 seconds)
  done (took 42.414650298 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099538277 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063226156 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062213601 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062459499 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073714876 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062513868 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061440616 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063196357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06255391 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064975594 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061937205 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061636958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070521311 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077356405 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073632464 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066360034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06158912 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06266622 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061328067 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062618118 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07041575 seconds)
  done (took 2.778329599 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073621863 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069772485 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071943849 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075972771 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066813041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070671382 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072040184 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069978963 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075711845 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067067198 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076202737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070186537 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066687709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066529828 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066851709 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070429292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075633419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066755089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070027925 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080827785 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070535831 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071928875 seconds)
  done (took 2.915321865 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066325315 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065175974 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066916308 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061513278 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065145248 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060459437 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068757736 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063374051 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068563575 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064739352 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064621908 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065125098 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067194726 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061011179 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06553238 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063616766 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107305035 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068676505 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065140994 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066500898 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061221894 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067559167 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06126337 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06130798 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06485661 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069185947 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066232339 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063748846 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065312764 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065127277 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065243167 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063408606 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067580599 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065795302 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064614589 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064846611 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065514665 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065170321 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060996268 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063944061 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066075883 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061400918 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065837712 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066660923 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064009554 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063112517 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066921466 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065021487 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060321284 seconds)
  done (took 4.570340329 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079550877 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108014517 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066980401 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087794845 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079435043 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074776331 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068939079 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08895231 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063431824 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063847318 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081004902 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079148275 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065454597 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069965832 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071859272 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06527725 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066595811 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065071282 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069404037 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064860733 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06946921 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071830613 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079808386 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07837697 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068855232 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064362095 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064579872 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069875841 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077967766 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069615714 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070315676 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070541901 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079712786 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06690541 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064800311 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068144403 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081583478 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065699778 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067932965 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063238015 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067597868 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069429186 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071392389 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081146593 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06533921 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070550266 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065102696 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062171725 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077505218 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067325673 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072879612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079402389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068936197 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065052599 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069483326 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079601278 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065176624 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063845448 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06799984 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077265496 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062781675 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068460452 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078283251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067123113 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072156755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078831107 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070309994 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068769148 seconds)
  done (took 6.357701126 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074651452 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072783324 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079917229 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079942471 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071453507 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072097593 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071868622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071528965 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071658652 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07625476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072162905 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092388655 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06723142 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07430208 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072286702 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071969005 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071947793 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072609871 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071835367 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071891234 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07200165 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079689245 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072139291 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079424429 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097731641 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067211288 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071891501 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071689318 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079795604 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072332983 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078855377 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071840389 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071989161 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079558961 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079005193 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07181002 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064720004 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071354477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071557687 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071500624 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066993123 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079523266 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071763295 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067299404 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071875695 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071511714 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079425843 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078744119 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074341098 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076100831 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07140594 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079453768 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070903919 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071866735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079378859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103783379 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079021581 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079408385 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071980635 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079201991 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079450051 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085539122 seconds)
  done (took 6.03984957 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081595214 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073928874 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076347303 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061094879 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063877476 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069710548 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063594886 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063622703 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073748861 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074126775 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076101131 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069341604 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072084639 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076452647 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069231314 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072015169 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069286725 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069151174 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073845599 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069145064 seconds)
  done (took 2.795401899 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073677879 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082783451 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066426561 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070966442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06850386 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071503837 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067942761 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068876798 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066679218 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068872103 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075781414 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075282618 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066333924 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070908234 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075449961 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071067804 seconds)
  done (took 2.510272119 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074660019 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07223718 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080119148 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066448411 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063626173 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06257755 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065551964 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061261141 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06225825 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077690543 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065191187 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067720934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065216257 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064007475 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062602446 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068231336 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062101195 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062961994 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065420835 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078251429 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076437827 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064437851 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066054461 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065670197 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065650355 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070693007 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065337447 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063971539 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063506047 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065816262 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066238766 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068823296 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062836608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063260967 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063909191 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062928852 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065346667 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065742194 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067942379 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06544665 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063757892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064902562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065381372 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066023719 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061491681 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065798767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06167686 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067337753 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063306701 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065692245 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06500925 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067815971 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065578637 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072394235 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068210002 seconds)
  done (took 5.022433448 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079265775 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068897559 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061540575 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063333181 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068773656 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06740294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068809075 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067177375 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06768205 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063601491 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067242094 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068107699 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067445702 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0689515 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067174963 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068873978 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061350016 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06699538 seconds)
  done (took 2.595171508 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070828338 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065481332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072855598 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065617187 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065792232 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068318902 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061585051 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064090467 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06403031 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065444668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065334367 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067693522 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064250655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067635366 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065401779 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06578894 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06754572 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064407974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065861662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061834681 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067678212 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064430211 seconds)
  done (took 2.827403812 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071312892 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091989569 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138182671 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082463113 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080517207 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07790405 seconds)
  done (took 1.91890222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088925283 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078786566 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067000386 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088014456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072618893 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06727885 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066845973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067176313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075527388 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075707691 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067226627 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075910819 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075708607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074973467 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072671361 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072823362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067158715 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067153897 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066028503 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083707492 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067087703 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075599126 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067525534 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066785232 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066738829 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074829731 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07538382 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075585599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066745143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075703869 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072610546 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066968027 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075673925 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075619799 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068376006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075257956 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067054612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083553263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072548695 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074771712 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06828292 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073080751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075541478 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072153481 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075696809 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067652087 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072031661 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06741488 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067841688 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085700702 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073220481 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075116976 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073522768 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075664585 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07570567 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085656715 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076136566 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07484211 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073246639 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078350902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074978891 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072655248 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074670144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075471055 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073206084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074855994 seconds)
  done (took 6.229911827 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081028484 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086430204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067651029 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076857879 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074976606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067383739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067095584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067201239 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067090734 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066962245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107706667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067711086 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075152624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075165011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067485347 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067361157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067205469 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075373199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066959017 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086012297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067532753 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075035241 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07515378 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075403824 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075767494 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073305413 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067330544 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067589312 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067059846 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067280179 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072251319 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067663539 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075480013 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066754092 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075057292 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067766641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067052989 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071902049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067409678 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072555484 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075108705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0836365 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06726157 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06743559 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075712105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067114211 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067108317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0665487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067152947 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066706323 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075740507 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075442662 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075553557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074621167 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067123678 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067114766 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067151658 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066848359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067248436 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072775982 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074685124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067270844 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085440705 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067116698 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067194154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074978048 seconds)
  done (took 6.140786727 seconds)
done (took 129.245984797 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184212347 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16946397 seconds)
  done (took 1.729263163 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069160506 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096838717 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076280284 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128793825 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066689844 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099955004 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099804498 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077480781 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065997744 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066110263 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065777106 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068460653 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130533005 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066510145 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065592916 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068441677 seconds)
  done (took 2.701475887 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096423955 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156613851 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099441542 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064524876 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097284375 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072807301 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064049366 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074657208 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070543772 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064886073 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073097327 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07001423 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06450009 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070436346 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070671485 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072402019 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065163434 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072307443 seconds)
  done (took 2.811770638 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.1010538 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091122746 seconds)
  done (took 1.587594913 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154949337 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105005994 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148752539 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348697497 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16754133 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229071864 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127236119 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127519733 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116692964 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1230219 seconds)
  done (took 3.040088495 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098025096 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151642861 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255640244 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115251518 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071897401 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094481619 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115520091 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077970081 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08061253 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080449844 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080375148 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07623264 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098428198 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073341083 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073088963 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075909816 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101794963 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071909103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073971511 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077270325 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098616244 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065732485 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073085325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071917605 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077022898 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077595376 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065096384 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065260898 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076798258 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074164551 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076868453 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093296262 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077775403 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107705257 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069891507 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1081832 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076469459 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0738112 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074094472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073757405 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078423364 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078671661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071890947 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076070724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065131305 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075990995 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065141525 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064937806 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078052401 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066539998 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077848428 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076370464 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10701052 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066454746 seconds)
  done (took 5.988187895 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101848744 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104896094 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071801113 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109212665 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097863167 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070898495 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10254932 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091384866 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102710917 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092598801 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088858064 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07129189 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082258104 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083106451 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11024997 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102241965 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095191826 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070941886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101918301 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103062319 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068606148 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094510678 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091137839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10228831 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06756819 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070616852 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067968673 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070386339 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076642091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077973336 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069891677 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102242716 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083906808 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07848572 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067026475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067821763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068788728 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079251891 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097374709 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078439603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077522689 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067465635 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067762317 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069314396 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090556587 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067417976 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07876626 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079998572 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078774446 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069212753 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070142412 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067718561 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069382508 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079983765 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07771627 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08053215 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080156774 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068099631 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068769041 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071464 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080735747 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079002848 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07921386 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092617881 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079107548 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068295984 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080494972 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084859211 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068432844 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06969151 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068220724 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069412802 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069335273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078095847 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078052989 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069779423 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069623409 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067941501 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080270798 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078843649 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068361714 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076449322 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06703117 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068495174 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069710232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069511373 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076931034 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079147686 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069514995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067419644 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069009001 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068205644 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066520388 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076293301 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079765922 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078267978 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078580982 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069518786 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078332235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078350596 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069289253 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078585928 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198760391 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071560109 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070449463 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079741934 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078876402 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080605012 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070043618 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068384651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079473828 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081238694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069156929 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078306263 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081107133 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080305563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068314786 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081600142 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068107835 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0799756 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070372463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079648865 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069259751 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079561015 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068560263 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06808041 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069270144 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079450381 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071285717 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069173692 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070160822 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069547647 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080298264 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083026762 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070724355 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082213426 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079385535 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070536972 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078834868 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069056842 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079134821 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070453182 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069739329 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067283921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081986534 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068615844 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069164796 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069181628 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080631545 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068445965 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079153765 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078701711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068040844 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081666487 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080224019 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077299929 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079915587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070854986 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068979424 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0679361 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069713086 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078302377 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079343484 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07050137 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068727591 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077776862 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080173822 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067386367 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078274694 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077993686 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078305358 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068466743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069991069 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080216384 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080860053 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07852312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078292316 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07860074 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068783576 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077672561 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078402359 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068321623 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084979634 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068543652 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083037221 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079627837 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077206812 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07863299 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080262869 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080317782 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080105975 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082444014 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06770288 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067788736 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07869888 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067531279 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068670409 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077200596 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0698497 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069320388 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08277169 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068284934 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078939279 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067066825 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078152394 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066436323 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069266435 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.215713692 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068758176 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071031516 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080518202 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070773294 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078430078 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08209067 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079554194 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068452788 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070369758 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080376488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079448596 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069112176 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068135388 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071809277 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07866014 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077735649 seconds)
  done (took 18.830297253 seconds)
done (took 38.092615924 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208194145 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150491819 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181355377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117673193 seconds)
  done (took 2.149285465 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120804921 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100529393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094896775 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064771112 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101472955 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064749814 seconds)
  done (took 1.974687157 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310401468 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210906647 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181747459 seconds)
  done (took 2.12721581 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199209288 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186716064 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394141104 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252659252 seconds)
  done (took 2.558482724 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142978444 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089294547 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066727309 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082968055 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133916435 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160091467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10083731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125330252 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077683838 seconds)
  done (took 2.451048685 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146729881 seconds)
done (took 12.839833888 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.175064064 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.217126677 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100987895 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152776723 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123692347 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073003515 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16215702 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.119894348 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081570503 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069311198 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.111286597 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077408907 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173826603 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072592127 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.200612559 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197712028 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227071304 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19540756 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094677968 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071330869 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148534412 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193735316 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091917938 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138598743 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127697929 seconds)
    (26/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108509262 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.149937038 seconds)
    (28/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152007311 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070744459 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076046817 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17963564 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071308203 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070853526 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.198919963 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094176711 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076098881 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09111555 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076350271 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078542057 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078929327 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064477293 seconds)
    (42/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071340183 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094835628 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174092807 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167516211 seconds)
    (46/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158261238 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07268471 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095452196 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071850672 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.171588261 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097791714 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089567847 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071993828 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071038242 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095475296 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.106987433 seconds)
    (57/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.118492883 seconds)
    (58/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.089403405 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071469331 seconds)
    (60/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.146146384 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062498101 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090015021 seconds)
    (63/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069325369 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066902712 seconds)
    (65/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.183141703 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074378469 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086768434 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132349928 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051748272 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.21666158 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076796179 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111994347 seconds)
    (73/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062089256 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050667679 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07416114 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177667144 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094200033 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135517723 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087006101 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087669475 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069821953 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07014826 seconds)
    (83/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.28887695 seconds)
    (84/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101410548 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090214595 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120218976 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06672568 seconds)
    (88/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051281734 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068070301 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.067317946 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06641956 seconds)
    (92/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084927213 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.154726958 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.17531151 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090003922 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069687427 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06851578 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075403272 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185534597 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07223931 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073694288 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062226514 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051288042 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186465626 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067350525 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096984363 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077513537 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072264015 seconds)
    (109/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066592519 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.356166339 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185054819 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141559572 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06581635 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194628638 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063309359 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051734164 seconds)
    (117/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141472467 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072087941 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.098349557 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065818411 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.150020228 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052445806 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071480372 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071957562 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051272335 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150051369 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065017869 seconds)
    (128/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051705333 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074792686 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051923422 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064976314 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089578772 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050597315 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137210324 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085549095 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066287814 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143059893 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074704104 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093768126 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107080138 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088322012 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135433059 seconds)
    (143/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052955178 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171540553 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05090312 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091293883 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087497732 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 0.132909741 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073319543 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065037668 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050998067 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071517005 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052512872 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070433066 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071602629 seconds)
    (156/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061387809 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.144791316 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100769364 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139490379 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064384578 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.182606497 seconds)
    (162/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052274619 seconds)
    (163/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097958225 seconds)
    (164/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071548543 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068232785 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095582672 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092041192 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073343294 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064522845 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064412425 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051712049 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071565338 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06448073 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08998583 seconds)
    (175/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075787032 seconds)
    (176/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.134242539 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065582401 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064052238 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050554017 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073178825 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072619537 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064768115 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06437304 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149304222 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.09780751 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073455458 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168206371 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060213841 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05091435 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109274709 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11243437 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205124925 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.150527651 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106869532 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072737784 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065531666 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067260716 seconds)
    (198/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060872847 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050948828 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068672097 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073344557 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067168203 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.175480229 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065710808 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156040304 seconds)
    (206/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07181409 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066425217 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052242329 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053452809 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074149407 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089345391 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067071245 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148331933 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052360099 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080581832 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071415579 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079475639 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180395164 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126024256 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050970062 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076155833 seconds)
    (222/309) benchmarking ("sort", Int8, false)...
    done (took 0.138761515 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063776127 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070444006 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051127201 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091236997 seconds)
    (227/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051010577 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06608214 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071638071 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073797654 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072330664 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078250279 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066441452 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051259242 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066945805 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067785716 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072545476 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070400325 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05329305 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071022174 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072608651 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.18574661 seconds)
    (243/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050679143 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063433695 seconds)
    (245/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072992927 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080188341 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061500503 seconds)
    (248/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05177629 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075536757 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052184555 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 0.126168235 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134843145 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088428066 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173595531 seconds)
    (255/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06917883 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053365861 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050937849 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063265517 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051761001 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148124486 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050949452 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050632581 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07124995 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064836651 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064495464 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06476185 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051648585 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070820569 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060683061 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072653388 seconds)
    (271/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05170219 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05057932 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086768003 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052604058 seconds)
    (275/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051664157 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116878032 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06725591 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094576012 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111091033 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072770299 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063702178 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052385148 seconds)
    (283/309) benchmarking ("sort", Float64, false)...
    done (took 0.124376348 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064899873 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085475274 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051394103 seconds)
    (287/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060362478 seconds)
    (288/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064880296 seconds)
    (289/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066748401 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05346665 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072084356 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063610561 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051132331 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06393489 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067754693 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071697331 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052325638 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.0508101 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069826932 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06594805 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050961775 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051073502 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065909347 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069923876 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080491171 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064829378 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.0877441 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050946063 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064557473 seconds)
  done (took 30.390088894 seconds)
done (took 31.830204857 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084894749 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092058937 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074291576 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092426309 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080346506 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076181979 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07169046 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077840243 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079006291 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080655176 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07827317 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054665925 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073552487 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073533178 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073783271 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090774729 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077540859 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072005236 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072319777 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064067827 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072570001 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065206313 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066775699 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054410969 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077381274 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071122968 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071627941 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073440035 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064810428 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065265027 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068208814 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072914321 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065056379 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07682687 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071172725 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0722644 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074226042 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075838017 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067111998 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065131394 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073502114 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06536086 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072070067 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072660484 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070999586 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070532765 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072688506 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077272743 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090493837 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067825511 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073690396 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075196627 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075507322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071541865 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068615202 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072391791 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07018869 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090685692 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07304208 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067272498 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073885115 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073402252 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070721245 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07275181 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072424743 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074848029 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074459602 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070318977 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074421886 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070694916 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065297353 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072843273 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068330673 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065073467 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075003703 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076084394 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063871614 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07041953 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072241842 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070949949 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064476797 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067046373 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066960975 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070925628 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067310694 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054083908 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068581814 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071241983 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064360161 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072306828 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070886002 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071551355 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066499048 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074418321 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064187869 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07000751 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065186891 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065078117 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066309734 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068498183 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064531384 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066635439 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073260285 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065907613 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070449158 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077809103 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064856727 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070628882 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063532048 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063522042 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07776195 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073187327 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064561303 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066979635 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063702387 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071056026 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06364829 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064312105 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064278182 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064466832 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069824072 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064472777 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066615184 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071060232 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076497396 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064472485 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067376468 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066362424 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064132521 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069504722 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06431342 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064510839 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200963982 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061892157 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067871566 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065398783 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07248672 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067217087 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073225969 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066820098 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072837946 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070014062 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070887694 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069807645 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064286432 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058201611 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06765126 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068174688 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067250589 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065514126 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067189232 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065702181 seconds)
done (took 12.399831253 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065978163 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142534515 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098867601 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094881417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085852969 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06624798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076258962 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101738224 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067305002 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10214846 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086607945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084105228 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111566155 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064371596 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065452966 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069478197 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066764905 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080724541 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099994599 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085750064 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115554727 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064986648 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094066541 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089471274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086618454 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09170213 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066378032 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06962646 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069229 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099484792 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085937684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069281634 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066057225 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100084987 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091612669 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082672728 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066226702 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081914293 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06608753 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065272926 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067034014 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097613529 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079332507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079525615 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069554413 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068391781 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066558037 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083110567 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088507346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077882854 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086063425 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102058017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067997079 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064954548 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064206236 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085084638 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064703379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068204737 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065771646 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067809857 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065144426 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068651851 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080718996 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08217162 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069467921 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07957444 seconds)
  done (took 6.792207654 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082977443 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088900821 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082392106 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083591192 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066064674 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065984994 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066055351 seconds)
  done (took 2.065070499 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066241731 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088372457 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0887981 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088115695 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084316105 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087160286 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075223131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066377812 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079982829 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067324208 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086309306 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101540416 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066602475 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072463488 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089709878 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066196113 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089501935 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066050299 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068939568 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089543455 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067867368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081420858 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069618063 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066532214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079712201 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066357651 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111466364 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070464804 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067639863 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06880837 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064574003 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106652257 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079764673 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075199009 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065862517 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080239205 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080872915 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064228441 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081958297 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070966328 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079418808 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066450463 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066816598 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063958065 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070064001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076032414 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066779153 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066718629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068473076 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085082403 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066695894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079355848 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069486957 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069033184 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067808303 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070645417 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075837492 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066802475 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085555649 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067576159 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082528048 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082282953 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080242752 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082169202 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068322357 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079325675 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080344653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068653052 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067663332 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069095533 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08229441 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064555533 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067540189 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076375434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067516102 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088902365 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088383636 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067153144 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075684498 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066850272 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066092887 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066041987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088512964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0684427 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065605844 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069941117 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068967658 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064485422 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064989175 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06984629 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064124241 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067423296 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069108962 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069183137 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068602993 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082176904 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068278564 seconds)
  done (took 8.744335152 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06893385 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067421503 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068865393 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067490641 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067728692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068285518 seconds)
  done (took 1.963818618 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093286876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068948491 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080158507 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072523492 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103535346 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086431651 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086945915 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078201575 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083138623 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078366581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08588948 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087969066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092012358 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072797406 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08580631 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071322348 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086640413 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075786582 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077632176 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073017937 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086332543 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072630346 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072982479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081494305 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075361074 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071626151 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066808322 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078157836 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077975801 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078472829 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072088844 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074929312 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070186484 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078661261 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087008339 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069997043 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07133297 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076753569 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072452767 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075029143 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087321919 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072622737 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07414463 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077093016 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077886951 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070016921 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076880076 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07584326 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085799358 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076983168 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076524942 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071136437 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07446442 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076194645 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069570669 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077504382 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076345703 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08612043 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071733661 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069895661 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068211433 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074938503 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077605741 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074444094 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078311365 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07646364 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070075413 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071978895 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072124768 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070933011 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076505426 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068669315 seconds)
  done (took 7.089586028 seconds)
done (took 28.173418665 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540225504 seconds)
  done (took 2.056230038 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596139425 seconds)
  done (took 2.134868409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.610316633 seconds)
  done (took 8.145467787 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402914779 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482148894 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691050567 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132836846 seconds)
  done (took 3.29080154 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673898305 seconds)
  done (took 2.222694948 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209734118 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197472983 seconds)
  done (took 1.968755538 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.388437773 seconds)
  done (took 1.928964913 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108400505 seconds)
  done (took 2.650530534 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26461112 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.171802103 seconds)
  done (took 1.987324279 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463698239 seconds)
  done (took 2.006068014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86633321 seconds)
  done (took 6.410905858 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206712007 seconds)
  done (took 1.803264481 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241780524 seconds)
  done (took 1.794970498 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690958962 seconds)
  done (took 3.243234763 seconds)
done (took 43.193723193 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079162514 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080639759 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080385267 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07798855 seconds)
  done (took 1.856969909 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076121116 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071975396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076004688 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071442472 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075935532 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072245953 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073301826 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07636691 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071670988 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072823857 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072243801 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071811438 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0746342 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073790488 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07037246 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074540957 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075814475 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072095555 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.0751275 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071591677 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070461667 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074472903 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074265457 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071557923 seconds)
  done (took 3.314888406 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077461811 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072442092 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074462758 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071641227 seconds)
  done (took 1.855943658 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076677639 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091558981 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088953505 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076994348 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091597063 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085423926 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068347547 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068473005 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072810619 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07628347 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067358832 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095615722 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087158282 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076386871 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078351567 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065691045 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067572107 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086567305 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076604223 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077331525 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069428112 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076336098 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067169896 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087542792 seconds)
  done (took 3.432305731 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077280936 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102447185 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077281514 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087212572 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08955658 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064668647 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073717866 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088810341 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12187183 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064942962 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069502856 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064914126 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071700876 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065067287 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075687834 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104002743 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107295106 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068314333 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094697915 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064798085 seconds)
  done (took 3.199454416 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072243886 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069322207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066246136 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06839073 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077614956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072145056 seconds)
  done (took 1.992446928 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067564662 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066362828 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066934082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066760878 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07093719 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066616296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06545664 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066498777 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066651999 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066665311 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066376961 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06523959 seconds)
  done (took 2.365022065 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.420498655 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06839895 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068332289 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065339737 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070526354 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065964359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079494551 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06738821 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089866389 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06637328 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06581365 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06847632 seconds)
  done (took 2.76161472 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2046849 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075678647 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236528349 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136430592 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110828279 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115212101 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103540474 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112079413 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142764227 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101281258 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167183105 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16513635 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106284268 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136394649 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088706443 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097115564 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154676637 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161574978 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103178333 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164248237 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142770204 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124157162 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145561622 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100612802 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105464814 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120768236 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070250913 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079593007 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169148632 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13068778 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145287909 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110481323 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093489866 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176067901 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168770987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140027649 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132533494 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082627448 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101565153 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132487978 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198354937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08769101 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163306616 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245368323 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080797049 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132564525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119641075 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119873429 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106082224 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089333688 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144823255 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182571894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138458177 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086674948 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110857764 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115596292 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116265806 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103139156 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18222188 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16012119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127460229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070374983 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098184126 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153068834 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130562235 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10838219 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126994499 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093196495 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132731095 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152577106 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117017285 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142496278 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127978556 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088047539 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118457996 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138351849 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127153651 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169334535 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123788287 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072651515 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124262107 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101980915 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080164707 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141537918 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07465154 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17299583 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097982795 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10519726 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111689033 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107960713 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107896908 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16049521 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142359281 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246099052 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065959093 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103499875 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119547914 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146877534 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087183714 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108964738 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116002849 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077418599 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139269685 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074056947 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123303938 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075297176 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125500837 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132793153 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074795875 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121240592 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099757527 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099157905 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132796842 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157767837 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087896596 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08189788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165946598 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121301222 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10312875 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143323084 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155235817 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098280692 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101284635 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148868683 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179008551 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088754592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162416494 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106684112 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083295028 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086752308 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123512956 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112109431 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121523734 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081364463 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117910075 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166672237 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074007779 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093785174 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131330473 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078673759 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079450723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102050181 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099331237 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093895154 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.0998491 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103504411 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136489908 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122094811 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103881944 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269730038 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099757648 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169864057 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088504503 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099904482 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103050117 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069943712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135823297 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156278978 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078466131 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163651723 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122610072 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104862509 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119142161 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083218511 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139269448 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07806204 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070261181 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14489569 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110281205 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108885586 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150073565 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103774389 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127681828 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119000992 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134767058 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131431911 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127927682 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104461539 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087562814 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110462614 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124556982 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072605825 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091271213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07951726 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102983893 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094823285 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082600727 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141899525 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123753853 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099511003 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111295983 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095698205 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145721765 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075945641 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127598889 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117897623 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093348115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150611863 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151051154 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130111943 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098201266 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143606911 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069513818 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073468023 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088844127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268326521 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083098289 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082940062 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11701348 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146392568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129310996 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138524311 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110982732 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121082651 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154757588 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068748789 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114722299 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146188447 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120546713 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103142597 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089631083 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09787173 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140594707 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107503124 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180408994 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113425459 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12599148 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152988731 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098981917 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078940908 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102449419 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139326455 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104862175 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143544153 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098893348 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086808813 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109128919 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073208426 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0993053 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12691686 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119178241 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134521593 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113427876 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131703189 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076847481 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115886195 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119523131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120920061 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063632376 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118616572 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160063728 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092559717 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117844774 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151932528 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078871161 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123158363 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321639814 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145137315 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08453573 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109657906 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118159996 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127212412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119555579 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139651465 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107968295 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135137304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108041677 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084408342 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087487885 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096292503 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10431055 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09436475 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107526451 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114618626 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093739408 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131425394 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102412932 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109103445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11760965 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094800764 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088913979 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095800522 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174055102 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119064218 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170712655 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097986141 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144780448 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162598022 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074381518 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077957336 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07741057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138687513 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082865414 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130348771 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096933389 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105248179 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123340622 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140877557 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094120784 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067774882 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108069174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133229672 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111059693 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096891216 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106120863 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161112637 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099173355 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07876075 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112547253 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103551373 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101576082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170606653 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060887078 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242507154 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076229635 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080631642 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127153566 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152282509 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080283209 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102315748 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119153317 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110138341 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127061072 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10045381 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099284166 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11340403 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149001222 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128473598 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088994034 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111596121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130005807 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15587198 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104449938 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095005676 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169858326 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151382259 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160418344 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088726892 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130128294 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11313253 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107849629 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13807774 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082341805 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162528755 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080859545 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135390951 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103559293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08957757 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129373882 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097731271 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087882629 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146463749 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11756118 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082108494 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077490837 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116888685 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118765472 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105228342 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07412375 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137376686 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072151231 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131134352 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167310378 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08044198 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103207342 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094677026 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224008279 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109029503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102625253 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089602184 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098953532 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173130622 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087666296 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149905864 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140499661 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112845489 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136981782 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099088979 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635843628 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077397107 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150629465 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115696236 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172445427 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096911885 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116805439 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109076457 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123647951 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143130634 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10502391 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175224803 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131708527 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115536792 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07909133 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101641185 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10225504 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087905701 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103867625 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112518937 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115417307 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093745483 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115514088 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122921283 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08107724 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094912923 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154986707 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116054123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144025926 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138978867 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084006547 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116759732 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136966328 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079051493 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120932812 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150961386 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105440753 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096637649 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079607205 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247437385 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171706702 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073351721 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162339156 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119157758 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109242463 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112546218 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113798313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131112048 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108435803 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121591158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092744622 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109881185 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111787616 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08172706 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077162397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103655052 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112920604 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096825836 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098843709 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098171607 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150614044 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070997964 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095722028 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103637954 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144006022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173851058 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088225412 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082144184 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118471476 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111938667 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11314629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119852865 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079025261 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081211611 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081245054 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077184674 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107983445 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111890239 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103699028 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110805125 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162468039 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081919885 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223283099 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094246808 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104402161 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068930666 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077998888 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095753872 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09731234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106823519 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099329338 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167918705 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093984394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089769603 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092062376 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072145502 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081568129 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125640449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255893266 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119856928 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096908424 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062351029 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10899997 seconds)
  done (took 58.579321876 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107402372 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081680517 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096634334 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149646762 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121949235 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21198942 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156680373 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198581525 seconds)
  done (took 2.795291432 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068179565 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093833348 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099882997 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081536614 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066153145 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06814429 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224806091 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079162832 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065904789 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087420433 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077986056 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067792641 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421329376 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065671625 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068163356 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061154551 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066989543 seconds)
  done (took 3.427769689 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362852339 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.360817595 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370860149 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072497279 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.799508775 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088257938 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077734185 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095560768 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070720479 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267671178 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708227649 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091193673 seconds)
  done (took 14.036910654 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075182538 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068543195 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083477658 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082278295 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071490962 seconds)
  done (took 2.054161802 seconds)
done (took 103.263878055 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079256029 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391389461 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053186022 seconds)
  done (took 2.145536754 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081922667 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084523329 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08359001 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081959537 seconds)
  done (took 2.011092109 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07339993 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075012819 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084029071 seconds)
  done (took 1.901572495 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22151067 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137974647 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085564241 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08248349 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077277485 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078175647 seconds)
  done (took 1.912480086 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072054183 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073828731 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071825588 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075211156 seconds)
  done (took 1.962775155 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075521906 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052289902 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054680377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055175622 seconds)
  done (took 1.909950372 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086320763 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078443751 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077683401 seconds)
  done (took 1.913434868 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10590955 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084821954 seconds)
  done (took 1.863393163 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081292399 seconds)
  done (took 1.753944691 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098666853 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112649307 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128348853 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108429515 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135659161 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108461432 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085304741 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086199966 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076370895 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086487703 seconds)
  done (took 2.697158544 seconds)
done (took 22.274555234 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078057347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.456430905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35978648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090309125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666688313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356280357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989776521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091572234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112419946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067286271 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083579511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648944566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980695646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.414774718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967927863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.409467224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649638689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067686477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067619107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067587377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97595637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067230742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067037224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067959782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647529528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370704984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067437194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.407009941 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067406273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069397827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354700834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067470709 seconds)
  done (took 16.512716779 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070075267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117785456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07372044 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083606488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069617937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069058556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070735234 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068763944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118581144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067936895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08384776 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067090393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071139086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06812339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086639782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068184307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068412513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068188234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067724636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068073399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086280685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067163891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068059193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067746643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067356939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078750407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067743263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067442743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067954596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069700411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070314295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068582681 seconds)
  done (took 4.055238886 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114452055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124373896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073808297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102163123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111717838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069769716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142275131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092368632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126778964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067970145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084360262 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067700708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100047704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068151399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087142876 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067980883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068667246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06855284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067761225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068005559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086789526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067621033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068262385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068348667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0680577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081506141 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068340116 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067920524 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067876938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069825664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071705762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068790691 seconds)
  done (took 4.313783277 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071381813 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0751738 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082318438 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08325633 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069305895 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07187241 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072957133 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069139934 seconds)
  done (took 2.281774039 seconds)
done (took 28.845319772 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078973517 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069029537 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073071371 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080736388 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072278338 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078295225 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066508388 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073810754 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071435669 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072413588 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074107884 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067201729 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07022667 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066665652 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073200168 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067675631 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078659786 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071346028 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078757665 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079089206 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070093148 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072771755 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073494189 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078543978 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079593938 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078726467 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076957976 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072346765 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069136638 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070013903 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076178039 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083556918 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068113323 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078875048 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067232067 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067482238 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07097739 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067556366 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07894647 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076371001 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069424622 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075565814 seconds)
  done (took 4.751199033 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086594458 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09109239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083525299 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061077834 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066535925 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064488302 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087732532 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059407807 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059511207 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087119245 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055480949 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059335873 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062273481 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053851025 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058971818 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056437073 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061462418 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055200307 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058760648 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058907548 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05785718 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054018716 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059438217 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065174004 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05593967 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061170857 seconds)
  done (took 3.378735613 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073192968 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083330864 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088948822 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126176387 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103300564 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076546046 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077083368 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091222806 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084520917 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066403539 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070518784 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093194324 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087666656 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073112884 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06736744 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083849043 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081542908 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06843148 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073098779 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0909223 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083948233 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082912047 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09194194 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080178363 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066181883 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068970472 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070504117 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080462835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07195127 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076037503 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071019297 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071058662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068657864 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078243167 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070740362 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068446128 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089580281 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076537545 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07767446 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06746149 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07031565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06758588 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088628763 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121680035 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066351071 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073651738 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074447643 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075747611 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066834241 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085089501 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077735816 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066576007 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070022185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066397912 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066896893 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079505924 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068877789 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069471035 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075841558 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070005199 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085193487 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070977086 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08212372 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066712602 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074837757 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06633721 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067979723 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066016335 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091977911 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068373181 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106975402 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068209253 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068013652 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075789403 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074568398 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073215786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067876607 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081790884 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079498624 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070727851 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075627759 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070281952 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07025474 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086896213 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069516529 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068749048 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067961127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072985325 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069821179 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068573774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079540577 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067373314 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069984265 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083803381 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066762648 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068075649 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073039377 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071483996 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066425409 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077774234 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071666286 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067782516 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075950226 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066950341 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069645123 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076652752 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072871455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065285648 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071055973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072507214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067663606 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06801568 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069439872 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068255916 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074952416 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073430009 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071306986 seconds)
  done (took 10.529207656 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158808357 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151964638 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069674079 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155336826 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075640038 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078341846 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146545935 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093750464 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068007581 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06784092 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068357292 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109133785 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104682889 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115085883 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077955354 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067355808 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082410269 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115578389 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147452899 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141736919 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082497877 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07589468 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069369766 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068301229 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07040978 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077569617 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08520446 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075756957 seconds)
  done (took 4.431931369 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080376312 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095646716 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073044147 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088487433 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090068708 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066907121 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069706352 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068621061 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079301545 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.0781416 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067060831 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072881692 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07385484 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07068743 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072276484 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074315428 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07450763 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069127715 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070477775 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07240873 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077255805 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080367397 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071201397 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066925528 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07353567 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06685116 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064169078 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084159216 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067784405 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089001712 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065396925 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074505996 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080991213 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06836775 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067495118 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067492354 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067080268 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067499345 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06871354 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065566632 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065884158 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057361912 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066226761 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079089205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073252309 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056239053 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071998091 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072379357 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071906235 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064826428 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070010259 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069892684 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070164491 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074173697 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072006669 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072235542 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068279776 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065259027 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075106746 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067237715 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064444606 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065645625 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071314915 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065664676 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074666606 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071658194 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065624738 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066799284 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068741764 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073032138 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067186708 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07018541 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06493596 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069070135 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071414293 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06871106 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068028792 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065673501 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066750279 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067137003 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055311283 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066870964 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053068261 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069866652 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065390183 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065324107 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066821996 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071697311 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079410945 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068156882 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072567259 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067910395 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06603302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070216372 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059899642 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070103358 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082088964 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081944057 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066592382 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064864695 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080952663 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071433268 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066037128 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055976998 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074383236 seconds)
  done (took 9.123449752 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093150286 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087024911 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069835085 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082673557 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090684377 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086041481 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07455404 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075792734 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069008612 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081587127 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073119219 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075888582 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067905299 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076543186 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092420353 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075941921 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069224816 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076503142 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071722877 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099787184 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082688258 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081904151 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074541994 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067397958 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074972367 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079742699 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088235453 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079695617 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077531488 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075294832 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079288544 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088607732 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073475956 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071415357 seconds)
  done (took 4.417855475 seconds)
done (took 38.318463302 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.763379972 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.028866744 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.769080886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.181800699 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.855194251 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.030360231 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.776667777 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.766293265 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.106852148 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.803793721 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.022926247 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.797396863 seconds)
done (took 65.600730707 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.836046365 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.903209037 seconds)
    (2/2) benchmarking "String"...
    done (took 2.030914469 seconds)
  done (took 5.631208589 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.065780956 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.293333285 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.998861204 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.755073973 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.75801483 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.044074238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.563145946 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.280679997 seconds)
  done (took 30.392948686 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.004005856 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.953247404 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.436060601 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.473082316 seconds)
  done (took 15.610823588 seconds)
done (took 63.317802759 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.743926672 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.767590122 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.785169299 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.735879745 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.809157262 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.759015432 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.831856372 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.979016964 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.751387504 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.73516699 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.75829653 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.18342364 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.755940462 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.882967924 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.751169994 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.760539658 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.758232045 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.184353311 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.906749413 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.763797406 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.753863517 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.778708835 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.754188415 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.760024395 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.778656414 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.750187263 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191347657 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760491821 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.37095862 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.753016627 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.78324384 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.010708454 seconds)
  done (took 203.739306767 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.746154397 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.612137934 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.662425045 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.789037761 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.083540619 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.937732616 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.87291537 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.155168867 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.744207991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.760120668 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.904887689 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.742099714 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.915771098 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.693201897 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.748373583 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.740782102 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.913221591 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.928661012 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.741972571 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.984748717 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.749500343 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.808914073 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.75535104 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.883635365 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.761844288 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.832722846 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.894494148 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.761456296 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.934312684 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.872715946 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.740439458 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.745680632 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.963881536 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.612357387 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.739194342 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.754054006 seconds)
  done (took 168.170913452 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.88861488 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.738994286 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.7345117 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.735434653 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.750788437 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.734828169 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.861533422 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862796014 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.193949743 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.352600393 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.735623288 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.786672786 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568115362 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.733556249 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804710044 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.747292052 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.734982209 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.75173684 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.761355769 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736698908 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73478169 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860832836 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.747026278 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.908902447 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74155033 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.735522688 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.739401123 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.105814042 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.732597746 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740172057 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.994462974 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.732222239 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73398227 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.633617726 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.090852162 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820685621 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.732509165 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.741080923 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.733360683 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.955624982 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731267599 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.733620336 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.738028484 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907905776 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.73119601 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.859417611 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.732760289 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.22906731 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.732507079 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.734662862 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.631950304 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.732287135 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.39910616 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.730019961 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.73033918 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.735069355 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.731581278 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732328415 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.737566929 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.55016912 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.80596897 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.733863571 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.738622318 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738389553 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.731880658 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.816141394 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730625447 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.336570872 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.790063652 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.842605268 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.731108765 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853822001 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733924403 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.730172134 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797472054 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823219346 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.72862854 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.729208906 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.731645733 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.730533954 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.81079808 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.728588031 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.855815234 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73610222 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.731699685 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.780143835 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.80107017 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.72939538 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625385152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.729586374 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.730913558 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.035153232 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79723946 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.72910323 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.731038549 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.730333869 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.863489175 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852138521 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.500989764 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.731746066 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.462022842 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.729148093 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.873535924 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.730017019 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90491572 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.728156 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812908895 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.731303002 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.730712004 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.729765541 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.762503431 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.732467213 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.791735752 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.727008047 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.100497469 seconds)
  done (took 398.704554853 seconds)
done (took 774.255716708 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.411172644 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371542959 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.480797662 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.401881224 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.375802881 seconds)
  done (took 13.709965554 seconds)
done (took 15.380295877 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.817315468 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.822592729 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754595507 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.82154639 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750775899 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.819963823 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800645422 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.757370131 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.787717094 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.755856424 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.787587397 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754700472 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742014443 seconds)
  done (took 24.842710444 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.966979461 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.966219018 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801247881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.968546523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777387395 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.959999958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891074602 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.88229923 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.881300951 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747934712 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745123533 seconds)
  done (took 22.25832277 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.966392902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.972697745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805587037 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975822106 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785178433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.970548399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897231638 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.886855576 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.884669724 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747177099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.744969711 seconds)
  done (took 22.30995631 seconds)
done (took 71.080584686 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.739842614 seconds)
  done (took 3.410642608 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.765347233 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.903078293 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.746068622 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.743844908 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.739957251 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.740468436 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.745431371 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.740614304 seconds)
  done (took 15.79862803 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.735925106 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.740936359 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.739700836 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.740812017 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.736850559 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.739643483 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.737379204 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.739829311 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.740644269 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.740059618 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.737367499 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.73687934 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.738284679 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.738251976 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.741863638 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.738687491 seconds)
  done (took 29.495269109 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.738621988 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.737574542 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.738392475 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.739776196 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.739149713 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.738249708 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.738321411 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.739167038 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.738278314 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.739950835 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.740053864 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.737724097 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.739077864 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.739445104 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.741497964 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.741040553 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.738067164 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.73918359 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.742993747 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.739314351 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.740000662 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.738548627 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.739758615 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.739901491 seconds)
  done (took 43.420586358 seconds)
done (took 93.796480857 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.438084865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.184305138 seconds)
  done (took 8.29587806 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.742945615 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.742168693 seconds)
  done (took 5.199899751 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.740640611 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.741322842 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.742145556 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.740552936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.744562611 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.741724091 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.742332302 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.742421556 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.742987601 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.744820669 seconds)
  done (took 19.097689121 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.742384836 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.743193396 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.739615514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.742372159 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.746539472 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.739982102 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.741325758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.74227395 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.74408009 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.739978245 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.744905582 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.740426006 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.74189354 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.740537736 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.742607657 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.740971858 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.741619514 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.740896811 seconds)
  done (took 33.031708212 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.742466224 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.743031556 seconds)
  done (took 5.160822065 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739396081 seconds)
    (2/7) benchmarking "second"...
    done (took 1.741833336 seconds)
    (3/7) benchmarking "month"...
    done (took 1.741997747 seconds)
    (4/7) benchmarking "year"...
    done (took 1.740539788 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.740942703 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.742907897 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.74096274 seconds)
  done (took 13.865123142 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.74445624 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.904619219 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.976313654 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.426197142 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.746358934 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.748285112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.666932747 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.747670392 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.751291418 seconds)
  done (took 19.388004365 seconds)
done (took 105.711841538 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.55521188 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.737422594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.144764224 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.790322215 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.788847676 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.036473598 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.770196081 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.956207003 seconds)
done (took 42.455532764 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.822910342 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.269748002 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.299418589 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.093193395 seconds)
  done (took 12.339313302 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.729805325 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296793099 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.793798307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.422740761 seconds)
  done (took 20.121106029 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.115564822 seconds)
    (2/2) benchmarking "read"...
    done (took 2.116582889 seconds)
  done (took 5.922328035 seconds)
done (took 46.882924591 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750901858 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.75137752 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.749037498 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.751885695 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.754034968 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.748866995 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.749078774 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.753047688 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.755884597 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.75127621 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.753663134 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751955619 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750194894 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749754156 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752866843 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.749589594 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750726351 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.750296966 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.752977825 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750576621 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.755131526 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753067228 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.75010763 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.750173971 seconds)
  done (took 43.720294585 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.7529793 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.752159403 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.75293943 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.754288277 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.750384643 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.753112137 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.752592908 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.751141297 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.752499241 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.753093749 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751512957 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.751630242 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.7554989 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.750948528 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752982505 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.751774483 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.752753981 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752063632 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755864535 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.751592922 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.753432818 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751178783 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.752360435 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755310968 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.750104609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750986399 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.754621495 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.753207474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754955561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.753638043 seconds)
  done (took 54.268150155 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.759761875 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.763912204 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.753440466 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.75696958 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.75667164 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.755264714 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.754946666 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.755864754 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.755186049 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.754386853 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.755306877 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.75678755 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.755156389 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.755269587 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.75585511 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.75590869 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.755113801 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.756074387 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.755030781 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.756075257 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.756495039 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.757348706 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.75489672 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.753182817 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.753286322 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.753542528 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.754986237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.755727314 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.753140481 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.755830236 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.755121934 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.755792535 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.757116347 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.75505812 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.755217212 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.753963482 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.759769755 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.761747249 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.758036578 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.75357001 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.756859075 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756490193 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.757782476 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.756468676 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.759226604 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.757426476 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.755366238 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756714035 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.757615004 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.758116267 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.755395954 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.756550037 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.756506468 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.757287322 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.756288835 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.756097253 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.756793537 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.754749982 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.757871538 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.759584057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.759328327 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.757690492 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.757608793 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.755333536 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.757436516 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.755157772 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.754552653 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.758675265 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.757482747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.759040401 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.755367192 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.756058916 seconds)
  done (took 128.14711694 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.755019198 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.752820686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.756641593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753631552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753559595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.75873317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.753444869 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755712358 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754883024 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.758923014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757611009 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75728958 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755829337 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.760191935 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756985419 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.754668839 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758853815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756232231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.75725999 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.758210789 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758978263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.755765388 seconds)
  done (took 40.33148173 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759537251 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757860719 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.756611813 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.759223281 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756030634 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.760818992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.760515614 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758865506 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759892438 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757284546 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757808658 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760369079 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755279286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756045023 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757865927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.75632957 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759037446 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755990094 seconds)
  done (took 33.335400742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.755550949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.756862578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.759371627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.758721762 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.757973829 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758617915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757468272 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.759481088 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.759490826 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.75859001 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.761011602 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760235476 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.7606416 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756002582 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762315636 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.756434484 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.761133379 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757968526 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761250442 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75813234 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.759180771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761361036 seconds)
  done (took 40.389503797 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760636489 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760699699 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.757986969 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.758582166 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.759070365 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.760925 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.760824843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.756799455 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.761706727 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.76204669 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759257785 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.760238086 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.758933069 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757125806 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.761200103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757804515 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759910915 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757321579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760051025 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757528345 seconds)
  done (took 36.881229214 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76300833 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76215186 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761509549 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76229938 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764481129 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.761636561 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761508155 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.763252097 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.76243467 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.763807163 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.765654989 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763970132 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763030825 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.762323741 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763277142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763580693 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76488106 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763536671 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.763897147 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762095713 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.763432184 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763330441 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763525817 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763829786 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.763186063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764003969 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762739373 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.764663338 seconds)
  done (took 51.065864023 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762516918 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762114287 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.759701747 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.758503993 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.759947434 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.758681346 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.760576703 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.762014119 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.764575868 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764552761 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.760248614 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.763423631 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764209581 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.762717449 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763091645 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.762812513 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762150811 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.761138578 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759790577 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760229334 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.764231311 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765399919 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.762884436 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760313984 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75864825 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.76402181 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761899823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760304108 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762960692 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76240958 seconds)
  done (took 54.54980143 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.78086261 seconds)
    (2/2) benchmarking "in"...
    done (took 1.785273581 seconds)
  done (took 5.260013268 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.75978935 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764184771 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.764143862 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.762177765 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.764232627 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762928387 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.764185392 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760671001 seconds)
  done (took 15.797529604 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.765158364 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.766002285 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.763142996 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.763003009 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.764597258 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.76603976 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.773248594 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.764164928 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.768184366 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.765897123 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.771666074 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.774296667 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.770908606 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767754777 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.765516881 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767427004 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.764616087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.763515862 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.766496661 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.764609037 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76579567 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770562919 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767443562 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.762955692 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.767875301 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.779522988 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.7701852 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.764752522 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767291107 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.771669874 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.768418655 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.761996502 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.765825873 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.766745604 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.765698465 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.766989636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776881122 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767141617 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.774198805 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766165204 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766097102 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.762141886 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.770808704 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.770485246 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767631426 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.767044835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.767672387 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.76184999 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.768260568 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.770766916 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.771600143 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767269223 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.76379455 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.776584609 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.770074684 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776075658 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.768305706 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.774308341 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.775072364 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.778202999 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.782360667 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.776891582 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.76868804 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.76946002 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776498137 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.794244706 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776557756 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.763981623 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.766600875 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.766656633 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.777351714 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783637287 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.777465824 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.768784982 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768533454 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.767188447 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769945844 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768331346 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777309877 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.770903095 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.769754504 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766601531 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779282203 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791190049 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.768843201 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.771143044 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.769492724 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.767613129 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.772294614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781260345 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.76949328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.768757129 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.768511636 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.770014441 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.77198483 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.770302198 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.76849781 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773769895 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.767376419 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.768732932 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.769876363 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773239975 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.782369256 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768802094 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769822437 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.780074641 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.770204603 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771112222 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.781292617 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.770151539 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76895991 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.773080967 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78082729 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.767636146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775435455 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.780440169 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.768812259 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.773212117 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.768796231 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.770359921 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780627225 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.800055681 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.769276544 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.770134457 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.775715634 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.782998349 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770901347 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.776412374 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.768702352 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.767075433 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.769870785 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.771820203 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.770191866 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.77237204 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770460843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773351646 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.768089798 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.772223992 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.772150165 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.772072922 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.777674022 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.772768599 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.777209393 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.776347087 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.772877814 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.775373938 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.781256961 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.774762591 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.774055743 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.773727052 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.770405844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772125229 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.775699484 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.772978213 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.77382033 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771646952 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.774270137 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.773012638 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772571698 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.773289328 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772215352 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.772571374 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77763896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.772151074 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.779832877 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.772221654 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.770322327 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.771605202 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.774199675 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.774522247 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.774427613 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.771874591 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.776901574 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.782019327 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.77404717 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.773848144 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.779446293 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775125271 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772990583 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773030281 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.777260359 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.784796764 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.773570694 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.782645551 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.774258414 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773584814 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.773743699 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.776508653 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.774898966 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773798682 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.777569307 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.781136867 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791118583 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.785608824 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.776091554 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.778402287 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.776547174 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.7786087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.782336443 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.773634831 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.772947492 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774992067 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774716281 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775528976 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.781672444 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.775331881 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.775414394 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.774641341 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.77511073 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.776377006 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.774934739 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.776327756 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779553188 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.772728295 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775823955 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777172573 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.776189512 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.774520377 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.777366269 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.776769277 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.774994007 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.775542588 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.787331948 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.77313545 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777669772 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777017973 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.778325405 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.77807186 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.774022822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779317194 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.778580409 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785116628 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.778862974 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.777981165 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7834051 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.777990725 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.779082997 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.781504109 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.775923366 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7733495 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.780799227 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.78569095 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.777068679 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.778412911 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.777589409 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779520846 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.777825822 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.786857984 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.774816119 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.779656432 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.777541587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.781131293 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.774010825 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.778878427 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.782491894 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.78027443 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781557323 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778118582 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.777780088 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780630511 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.779373865 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.77688114 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.779756391 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781989016 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.785966921 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.78451525 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.78176181 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.781991899 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.77906736 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.781109664 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.78077442 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.779816852 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.780104954 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795195284 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.786822347 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788132464 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.78292916 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.780230677 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786912186 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.780594419 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.784416258 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781944374 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782543527 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.780391036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.780423323 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.777073538 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782109571 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.782355613 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783393802 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.780684673 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.783785801 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.778801047 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.779732286 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.780046492 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.780428789 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.777702011 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.781230731 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.779233083 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.785374114 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783119517 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.781684338 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.781487295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788859723 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785092952 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.783714959 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.781227425 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.780933783 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.781845609 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.781664536 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.782440121 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.786678956 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.788399747 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.783450906 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.793475594 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.783139995 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793551551 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.781416066 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.78588652 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.789690837 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.777027925 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.78000602 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.78418645 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.782189215 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791233992 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.781031269 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.785302659 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.785608762 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781367566 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.783209398 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.779891895 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.781546264 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782957398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.783307248 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792674851 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.785671672 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.786292617 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787141875 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.779421286 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.782359487 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.782326182 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.783236826 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789474948 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.782775483 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785858587 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.783059102 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784594645 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.782069695 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.781996212 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.783072645 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.780662226 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.783466539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789489603 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.786062215 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787627336 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.780998922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.795447554 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78264791 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790676795 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.782396186 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.785244167 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.78365105 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.78439471 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.786644816 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.783165072 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.787551129 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.783247392 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.789604756 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.782527526 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.784477051 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.788548436 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.784606689 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.783527147 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.784684194 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793777153 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80798823 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.785039145 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788823506 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.780402098 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.787018513 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.787701168 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.784074608 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.784474258 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.787120661 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796275847 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79234351 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.786468896 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.782633131 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785207623 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784780203 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.783064531 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.784076105 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.783919603 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.784498793 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.787082136 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.78522933 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791054406 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.784602833 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.78697447 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78746983 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.785943253 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.797961838 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.78504073 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.787444691 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78612857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.783801877 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.78633026 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.786929341 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.784358676 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788174778 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784467701 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.787382891 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795079838 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.7924391 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.788739235 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.785249055 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.785435148 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.788453929 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.787594558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78451154 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.784716422 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785713605 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.787287569 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.786564032 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.78839018 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.784166047 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.785627801 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.787234767 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784413879 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78998921 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.794045236 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786493939 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.781764282 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.784470321 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785154191 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.78542704 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.787353911 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.798732181 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790410131 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.797424766 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.798495814 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.790236435 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.788097988 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790720614 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.798451398 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.788466335 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.789858862 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.787544836 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.790100031 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.787688491 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.791354251 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787994268 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.796874886 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788677258 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.788745837 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797977659 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.790230866 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789520689 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.79001489 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.791891145 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.788034024 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.783884913 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.786485881 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.787900353 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795309509 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.7942045 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787591438 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789978818 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.787408135 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.790023272 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792665714 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.787426094 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.79052091 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.784526911 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.790767905 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787379761 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787416094 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.785483724 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.789654041 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.790161419 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.793722326 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.798267435 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.785765366 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791880022 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.790024473 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.790592874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790321541 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788869717 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.784886724 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.785194531 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.791435737 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789742276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.792268726 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.792629398 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.791024305 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.790151125 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.791269452 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790316131 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794532899 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.801083363 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.797415834 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.787092342 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.790277555 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.79412622 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.794188953 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.790500472 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.789441461 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792101973 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.79474798 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.78887365 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790013091 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.789962642 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.795529113 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810790895 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.789777198 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791286456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.792284505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797689648 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.790361416 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.787154764 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.78931148 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.794102122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.793935849 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.798779945 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.790335652 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799181162 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791598945 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.792366061 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.793419709 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.795054268 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.802214866 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.79536124 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790763325 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.791423539 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.798030224 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.811394663 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.790256036 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80282998 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82373141 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.793291776 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.792863009 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.791299097 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792294077 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.79119136 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.794813957 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.792485921 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.792303822 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.791979215 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.791919418 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.794639214 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800244265 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.793905927 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.790400061 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.790062161 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.793277103 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.79629225 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.788765872 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.792080938 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.791856607 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.792094505 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.793069755 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.793237137 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.793698273 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811127466 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.805900075 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.793129977 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.793282675 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.789856004 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.798215777 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.796388419 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805349799 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.799519379 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.79313812 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.792526822 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.795829451 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791578349 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.788253705 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.793855272 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.793459319 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793649319 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.790941491 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.80929859 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.801565045 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.798975572 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.795818908 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794147678 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.793110084 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795751296 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794230173 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79386171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.79805335 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.796117439 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798394059 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.793467818 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.793261113 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.797066088 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.803069111 seconds)
  done (took 1063.946685799 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.791319519 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791011317 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790793684 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791882156 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792176461 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791300047 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791215291 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791354498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.792281808 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792350458 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79242735 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791281535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.790820095 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792586347 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791880956 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792875915 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791248418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.791626721 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.791428163 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790988541 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79140946 seconds)
  done (took 39.348824195 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.795130084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.792887066 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791834796 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.794401508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792055937 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794855636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792470263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79466442 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795784459 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791618409 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796805171 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795011901 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.793022384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.792501009 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792981985 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795286442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.794095689 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792679447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.79458777 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79192072 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795417039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.792934624 seconds)
  done (took 41.188603066 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.796096461 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.797299948 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.795920746 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.793078567 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.797761083 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.79428231 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.795237035 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.795993761 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.795727062 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.799909241 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.796733731 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.797406045 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.805912114 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.801163142 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.801441083 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.797337907 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.940341763 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.797323263 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.797685387 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.798916473 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.794669607 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805565938 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.795412763 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.795647058 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.797554418 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.798793119 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.79877103 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.79783398 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.797695509 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.800042359 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.802412896 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.799166623 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.800089499 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.800576938 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.799445817 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.80113574 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.803319816 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.799363319 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.795996613 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.798447254 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.809142398 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.819609841 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.799564296 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.808129816 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.798226668 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.79839314 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.802549145 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.807061922 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.796218373 seconds)
  done (took 90.043696918 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.798972976 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.798687365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.796472886 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.798401077 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.79990562 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.798560523 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.798766554 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.799070974 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.795665128 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.795698798 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.798895183 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.796954345 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.796984502 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.799993737 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.799074211 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.797112651 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.796670185 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.796984698 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.796109458 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.797438856 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.797594954 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.801066398 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.800265231 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.797554184 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.799767485 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.797123733 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.797816704 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.800609917 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.797444379 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.797480866 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.800508946 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801285393 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.801673221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.798706507 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.798696627 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802275834 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.801096412 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.799255811 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.800844324 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.797881702 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.800877854 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.800800996 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.799585007 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.801588023 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.797688807 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.797855287 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.79751058 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.798784304 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.79939941 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.802116386 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.800977606 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.798495708 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.800617592 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.798078896 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.801608463 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.801847879 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.798744266 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.799028792 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.803008391 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.799493111 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.799650894 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803003158 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.800485352 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.802175304 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.802793347 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.799943714 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.800716477 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.801652321 seconds)
  done (took 124.085140229 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802537752 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.802248742 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802651013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803289737 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803299274 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.802099448 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802553092 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.802927631 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.803249204 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.802331105 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802002134 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.801937388 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.80428297 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.80173299 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.803086752 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801704201 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.80347638 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801636493 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.803136382 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803094938 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.80343445 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.803126559 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.803616956 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.804297342 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803998824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.804609092 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803477846 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.804258572 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803949361 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.805020789 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803803358 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.804625084 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.80366055 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.805056943 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.806596979 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.804192874 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.803645558 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804100778 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.804279936 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.804441469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804321887 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.805069733 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.803929489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.804664418 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805676172 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.804940815 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.805063737 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.806216493 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.803295853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804395956 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.804877419 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805510582 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804274511 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804146456 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.804719386 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.803700755 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80617242 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.805610754 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805357534 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.806492212 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.80513617 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.805138073 seconds)
  done (took 113.580313276 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806223995 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805370012 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.802520649 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.802425763 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.806361109 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803669628 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806212454 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.805471359 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.805553195 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.806403514 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806358655 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803121058 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804058818 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806512689 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803798881 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80351549 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804317812 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803403903 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806589513 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803634155 seconds)
  done (took 37.831756356 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.804226763 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.806540801 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.804450674 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803635447 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.806840135 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.803609574 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.806885792 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806023214 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803721741 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806863803 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.807979398 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806880094 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805353325 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804540681 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8064057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.805160017 seconds)
  done (took 30.625253512 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.806228446 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.806736942 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.807622174 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.807707824 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.804904027 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.806410327 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.808054124 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.805680295 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.806325243 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.808143085 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.807734621 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.807628653 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.808869009 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.808732547 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.805563486 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.808447278 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.805890473 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.806435689 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.808362293 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.808133553 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.805817465 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.805224727 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.809315547 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.809827748 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.806225703 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.805820625 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.806670148 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.807444731 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.80711614 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.808674243 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.806957163 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.80711049 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.806648965 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.8066219 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.810699286 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.80732311 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.809525469 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.809314236 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.810275917 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.810497169 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.810257913 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.807846367 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.810072792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.81045834 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.808326856 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.809316767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.807351391 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.807925653 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.807217484 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.807873159 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.809932648 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.810946405 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.810066261 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.809484699 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.810092561 seconds)
  done (took 101.177218941 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810868161 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809891696 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807987839 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.810348804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.811207858 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.808281086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.811076633 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807884828 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808243232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.810175782 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808746189 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.810082897 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808449825 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810244316 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.808588893 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810644608 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.808011649 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.807989374 seconds)
  done (took 34.308486704 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808727071 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809111963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.811208601 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.808962877 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.807972574 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.811724751 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807584996 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.810820985 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812301419 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.809493596 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808523679 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.811912757 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81003301 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.81207976 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.809721606 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810163186 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.811760561 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811835906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.808624571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810231629 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.813688871 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812741739 seconds)
  done (took 41.57057998 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.812892726 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.813112378 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.831362487 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.859652965 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.849375717 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.811556834 seconds)
  done (took 12.719531274 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810819126 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812200956 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808902341 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81247691 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812505112 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809960292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80984826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81156589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814823125 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814055895 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810341311 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813074946 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812736597 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811102808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813395428 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813676922 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811031416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811320561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810909133 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814171824 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811224354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814052492 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810809697 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811223882 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810518192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811712745 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813095783 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810964952 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812009154 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814705759 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81321701 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810640833 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814382559 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812390273 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81606375 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814514542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812496001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814651351 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814726278 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811981221 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.814780271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813925324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814654953 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812149748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815256726 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811687761 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811610322 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81089246 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811787692 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815009503 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815185062 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811757387 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816368044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814007627 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814486747 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81622282 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811780077 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812415623 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814781581 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812577862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811633947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815586615 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812416786 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813369098 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815510432 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813388393 seconds)
  done (took 121.390774226 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812882903 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813668658 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813283236 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814512939 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812622315 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814243572 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813131946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813290761 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813232695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814609896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816147403 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814300671 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814631712 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813378048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813514854 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813542554 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815409543 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813934552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814724538 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816695148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813158309 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81418036 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81506108 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814311226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815275168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817012098 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815255077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814235119 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814969039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815666931 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814580591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814733813 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815127084 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.815140295 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814889412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815794483 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814429579 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813555975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814463707 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817535576 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815024124 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816441902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815730872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813471508 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815917344 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814174548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81472833 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814704491 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815244851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815448918 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815872857 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815964488 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816335927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815721856 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814781602 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815731358 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815895629 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814842286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814488473 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818355727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814970016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815291609 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818717255 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815763073 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816119884 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815713158 seconds)
  done (took 121.53443227 seconds)
done (took 2478.781257213 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.879623813 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.913310824 seconds)
  done (took 15.540939982 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.982712922 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.934615615 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.819125069 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.852380381 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.817185124 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.842135903 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.835321369 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.816763337 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.820460132 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.81958751 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.819770035 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.006631947 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.814084936 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.817160275 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.82063373 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915124018 seconds)
  done (took 51.486568124 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.82333753 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.823665842 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.834965231 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.826311306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.823394736 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.835315399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.855935992 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827561868 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.855622806 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.835156482 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.894514803 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.831537202 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.823206326 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.872263113 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836459181 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.835576434 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.912451659 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.894167602 seconds)
  done (took 34.991673807 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.900903512 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.82425777 seconds)
  done (took 10.482377576 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.83201888 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.85168948 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.817792029 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.821464637 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.83160076 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.820744897 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.831074685 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.833907823 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.819198871 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.848760759 seconds)
  done (took 70.063084167 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.830922752 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.824126492 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.825302345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823741718 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.817572668 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.818885273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.824297068 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.821295864 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.499240632 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.859412978 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.831850338 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.830891492 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.825239157 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.826925256 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.822594913 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.848699287 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.941734867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.821242515 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.821709534 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.831556703 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.825138356 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.916453894 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.837136132 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.82412462 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.855041167 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.505292194 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.834088526 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.831911889 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.961522876 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.82156434 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.825310173 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.826444937 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.827911209 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.227269297 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.153466831 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.824587774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.832576504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.83336493 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.822902796 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.99988195 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.827361511 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.83233512 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.817599402 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.139206576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.905021849 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.86589921 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.187592446 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.827828143 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.827991072 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.857265274 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.82956196 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.831779525 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.840152542 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.33666873 seconds)
  done (took 130.417614201 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823780828 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.395697556 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988086893 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.825203026 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103171829 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063394578 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.823066131 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871495244 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.8252403 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071649096 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000219073 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94247748 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820894425 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.82331058 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.825023853 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.820069298 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.975877792 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.894227852 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.825936833 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.822438625 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85955138 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089909064 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.950550481 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825595273 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.844906255 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051465573 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.950579201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940497858 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.325303837 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.824358434 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.891615487 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.824598887 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.824698572 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.820336626 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991375124 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934401577 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920167874 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.823478722 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822686769 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.821829476 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.489352828 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047123074 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.932305749 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.960625427 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.074359209 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054252048 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.471879495 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.822132915 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.463448987 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.021807605 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034820332 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.08072556 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.951295515 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.827904435 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.072671554 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82278392 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822935109 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086337355 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051258749 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.941910733 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825776918 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.824988311 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.823320046 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.141905455 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825561412 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934679795 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827313043 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.824542188 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93906303 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940857883 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.055285913 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.072467551 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.855140816 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.783660906 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.336428841 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112270359 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.895374711 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089787674 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.827528925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.82417138 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921740454 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.575074679 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.006434209 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.146942952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091386798 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869026434 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.430608109 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.827132448 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.074677796 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.07647106 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.054857898 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.069218326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.993640195 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.124133715 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.826345678 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.826223879 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.05554944 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957987609 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.830510658 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.191331941 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07546863 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.560925822 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.857511986 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133829685 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963944973 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.831240969 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.454636513 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.829258099 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03260426 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.868374592 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.829527208 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827289521 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.074145229 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.699202419 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829243422 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.618788069 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.894514343 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.831532871 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091943633 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.830966861 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069062309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83075798 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14047403 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.340365197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870253797 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.019284445 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070639076 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.624586324 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096625355 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.143117499 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.953541447 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090394093 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.652401877 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828763942 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112739815 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.827277311 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.829039612 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.998514105 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.826330502 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98666298 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.833100546 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093678635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854926806 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001451073 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832023303 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.105304226 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.874013242 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880727095 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829534441 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946366919 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828322208 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.87259396 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011959424 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832246811 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.828225214 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.407034952 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.828665033 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979362902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.12841573 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854688728 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900155871 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358668365 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830609242 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925809757 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856993108 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.441348377 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.831809037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.003017671 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.83323203 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.818181373 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.83072517 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.143871651 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.05003731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830732521 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.828874347 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.62786061 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.538464255 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8305406 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.011448521 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.073638403 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.483904641 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05423842 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83185528 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962250024 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.833667527 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.907870506 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183573862 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.831147601 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.833269459 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.831028219 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.83193844 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832707009 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061864897 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.857540514 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.518450361 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.969773072 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076980462 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142203575 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.098264826 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87907922 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8306816 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.099132148 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.832895188 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.898784928 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.832362793 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856280569 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082368784 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835035093 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063860535 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12350534 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.878462684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884087121 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.834118263 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832864585 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.832790132 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979487281 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934642541 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833588736 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.834947574 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.953357376 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.96255211 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022553372 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.424331648 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.01569014 seconds)
  done (took 894.921001629 seconds)
done (took 1209.652944018 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.832856741 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.837791617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.823284423 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.8380492 seconds)
  done (took 29.100342806 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.845607896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.842870881 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.842180985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.843191875 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.842256251 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.841446656 seconds)
  done (took 12.828793606 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.880727517 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.83385523 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.837787957 seconds)
  done (took 21.321414777 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.910362726 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.24267764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.943416319 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.282868061 seconds)
  done (took 10.15104504 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.841700952 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.841797446 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.843121795 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.84229601 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.843893887 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.845995709 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.844795101 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.845194492 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.846638401 seconds)
  done (took 18.367301889 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.004423188 seconds)
done (took 97.542228112 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.848118346 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.038507381 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.053356644 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.858293782 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.91322915 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.863171335 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.835410894 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.076019807 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.970489394 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.902953119 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.342070472 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.882174406 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.088039738 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.860913604 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.064807354 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.721435809 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.820356735 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 3.367195897 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.129809127 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.999627773 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.926256049 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.343538862 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.518924307 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.842255204 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.807620508 seconds)
    (26/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.864952404 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.003241082 seconds)
    (28/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.265945211 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.040155364 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.921947556 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.015381335 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.177572193 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.958519816 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.354039851 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.17211143 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.839275846 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.63740953 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.83888659 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.016223305 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.506247476 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.987264867 seconds)
    (42/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.92331807 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.220633313 seconds)
    (44/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.837855517 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.83782478 seconds)
    (46/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019691054 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.866242305 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.131681875 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.949100416 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.130935359 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.840464828 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.436414633 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.094285805 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.170758531 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.887555794 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.974850365 seconds)
    (57/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.118414779 seconds)
    (58/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.349873588 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.8686437 seconds)
    (60/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142182746 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.202480331 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.843274025 seconds)
    (63/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.874441705 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.895148754 seconds)
    (65/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.175835658 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.424032146 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.817014199 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.94858575 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.012948288 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.899085086 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880987711 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.362606159 seconds)
    (73/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.002917498 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.206180863 seconds)
    (75/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.942791595 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.839064433 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.224571509 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.841927986 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.851479241 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.482364221 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.94338359 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.863713247 seconds)
    (83/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.074099193 seconds)
    (84/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.975944451 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.983585933 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.827844599 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.938146327 seconds)
    (88/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.035991729 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.842558742 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 6.742221907 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.842182388 seconds)
    (92/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.912590604 seconds)
    (93/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.436676727 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.005503638 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.828759413 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.735468982 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.903986313 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.842438936 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.444680027 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.868648897 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.849940347 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.114490229 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.042839499 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.82911656 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.070007161 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.501438348 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.925455175 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.964860696 seconds)
    (109/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.074451761 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.057905244 seconds)
    (111/309) benchmarking ("sort", BigInt, false)...
    done (took 6.843491681 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.846736827 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.144660332 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.829814295 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.456935772 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.727380931 seconds)
    (117/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.839699929 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.871759949 seconds)
    (119/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.97747217 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.227999191 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.458973108 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.205437894 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.873648496 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.039300441 seconds)
    (125/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185652745 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.12078051 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.112506447 seconds)
    (128/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.980811685 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.976560022 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.059069692 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.842664268 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.629019295 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.221182722 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.84492116 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.852954664 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.26617568 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.191028206 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.92967574 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.831254863 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.136552789 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.736966628 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.847369547 seconds)
    (143/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.824199871 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.168489045 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.141445157 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.897193667 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.735619278 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 2.290132337 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.868935401 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.435677396 seconds)
    (151/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.94499502 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103293882 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.879742443 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.060963351 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.12595964 seconds)
    (156/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04767486 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.926034287 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.921109599 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.865886502 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.084239278 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.206953627 seconds)
    (162/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.353692874 seconds)
    (163/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.179321928 seconds)
    (164/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.947588995 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.908449494 seconds)
    (166/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.972469783 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.866871313 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.904366825 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.116161624 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.070675006 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.537056357 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.965692772 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.173325418 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.930890099 seconds)
    (175/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.84917427 seconds)
    (176/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.842050084 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.927234999 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.781587116 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.939903142 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.169854917 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.970151668 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.220252225 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.099214156 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.917611247 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.002330135 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.973559371 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.807089788 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.372815079 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.850908808 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.922858507 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.830743199 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.90675726 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.863708453 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.029461141 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.937288818 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.170301785 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.847092629 seconds)
    (198/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.47307485 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.927227787 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.831439944 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.262680692 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.8448491 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.224603023 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.499692302 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.433623826 seconds)
    (206/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.872806068 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.552956872 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.542406701 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.833086434 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.97825361 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.890141582 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.906843473 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.158250629 seconds)
    (214/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.83259135 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.723868454 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.260322291 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.795759865 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.848035786 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.982418231 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.235265305 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.858734107 seconds)
    (222/309) benchmarking ("sort", Int8, false)...
    done (took 4.813379772 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.909727499 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.871001296 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.906692463 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491019496 seconds)
    (227/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.461442565 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.847521279 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.88187966 seconds)
    (230/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.54411472 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.06169442 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.529108632 seconds)
    (233/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.943704953 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.221000304 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.887354971 seconds)
    (236/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.958703919 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.212170505 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.972272236 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.833028234 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.984422802 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.856374016 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.133466858 seconds)
    (243/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.053917193 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.893746575 seconds)
    (245/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.965923254 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.413426146 seconds)
    (247/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.11257335 seconds)
    (248/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.224892355 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.854588617 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 4.728575212 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 5.611345125 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.746742268 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.651480073 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.856637178 seconds)
    (255/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.973014183 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.833110178 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.790479587 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.932798575 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.243558986 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.000111028 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.15870508 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.945950649 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.879469814 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.086909573 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.982162973 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.947940714 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.980289327 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.87951486 seconds)
    (269/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.354801839 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.238862827 seconds)
    (271/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.992749364 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.955808812 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.756584648 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.841347607 seconds)
    (275/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.98432429 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.472313035 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.018079473 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.833976875 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 4.272492636 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.885831014 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.931889623 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.432491459 seconds)
    (283/309) benchmarking ("sort", Float64, false)...
    done (took 5.648699243 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.094339356 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.871234645 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.150746191 seconds)
    (287/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.023840472 seconds)
    (288/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.258310838 seconds)
    (289/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.971302801 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.835356227 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.01249073 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.931891611 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.16146678 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.981405044 seconds)
    (295/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.977190533 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.196803646 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.710986421 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.045185793 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.891925552 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.98057668 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.146188048 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.044974182 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.643381011 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.965385886 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.694828763 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.183003479 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.131882787 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.284491977 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.147816492 seconds)
  done (took 1018.073039306 seconds)
done (took 1019.860663027 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.886815059 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878640424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.86189518 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.884018887 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.97580222 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.893141094 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.873408568 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.86494009 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.910055278 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.912627193 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.861616346 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.890400592 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.864193778 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.863691925 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.862518904 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878001935 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.16858968 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.88455193 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.879496822 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.873059048 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.880425085 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.862751549 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.9120821 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.892499363 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.867447884 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.86502245 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.86728227 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.884173013 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.977016107 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.867036701 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.867400501 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.875181042 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.169121138 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.883510457 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.858161207 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.886218236 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.877152773 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.873548898 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.868106413 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.897781623 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.305018205 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.868047388 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.867090995 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.865842367 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.866082871 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.868684808 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.866204233 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.870102098 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878468748 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.879223172 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.302605552 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.883751715 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.869627551 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.865726061 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.876428616 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.865647063 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.868523247 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88147345 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.885062028 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881751141 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.161333454 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.891582838 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.867505113 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.883759732 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.873746759 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340921857 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.864502247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.870599502 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305861891 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.871960964 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.345292993 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.878162283 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.868103909 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.880834106 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899269291 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.171378778 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.88315561 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.867224914 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.87409634 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.86595641 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.877772931 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881960783 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.871872471 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.867727915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882406095 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.898912564 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.878646191 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.869970959 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.876928253 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.888500668 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.875633933 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.878904973 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.871341215 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.863652274 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.87820401 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.870688655 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.870700729 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.87153081 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.87411401 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.877791111 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.306233464 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88773254 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.864703341 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.86601977 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.867660073 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.882630901 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.306701502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.872695331 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.890749374 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.91792697 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.871330163 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.162325939 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.893771632 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886349415 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.87864714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.872028694 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.864876897 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.163512709 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.328985825 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.887678031 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.872719728 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.868337476 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884995889 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.870924186 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.865461456 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.174874887 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.891918017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.884488917 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.989970773 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.879519122 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.902395781 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.869212462 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.874265468 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.902364121 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887693236 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.901563664 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.874973044 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887327796 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.888757417 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.866616486 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.882077945 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.880179833 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.872816988 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.877258081 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.865439925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.9016218 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883907313 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885691739 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.892789781 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.992347586 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.868375651 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.16545543 seconds)
done (took 293.48218741 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.940285189 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.869178254 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.971899857 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.868386982 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.955318045 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.970206351 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.864999456 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.865340391 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.865763327 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.24619023 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.86778589 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.866983042 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.867687186 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.865260003 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.951509969 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.870176896 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.864435794 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.238290509 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.869403556 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.940773353 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.862869155 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.866533325 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.868633917 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.283376715 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.863512216 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.870433801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.952290783 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.870832384 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.214893583 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.873688438 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.863276605 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.245364856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.973122381 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.886553503 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.879869345 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.876029404 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.967490936 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.874610821 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.965990903 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.950579116 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.97990171 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.910413276 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.862173456 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.863839753 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.871739881 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.871358509 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.868036988 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.897047921 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.871412415 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.866194026 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.21073718 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.879045098 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.875923693 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.868382236 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.866853796 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.891639933 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.868295357 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.871537221 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.960215099 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.870574398 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.945007298 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.252193194 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.281594636 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.870019334 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.863640268 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.867711009 seconds)
  done (took 184.532155227 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.938172343 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.948860744 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.938441339 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.874053291 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.921582612 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.946497301 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.874492326 seconds)
  done (took 15.238843752 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.879172517 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.874924493 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.92142536 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.922759825 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.8719952 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.023973178 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.871862769 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.883541916 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.869300975 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.924863285 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.873376525 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.872696714 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.87812816 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.8681892 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.920704428 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.883958936 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.987372676 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.873744194 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872087104 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.028542509 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.868269884 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.878310059 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.939944801 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.885339239 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.873614112 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.880018072 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.456057545 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872577873 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.868213236 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.873523331 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870532172 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.915931287 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.872904563 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.866696987 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.869653495 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.990196162 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.873178901 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.869998462 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.873371619 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.873075639 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.872536607 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.873623539 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.873565535 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.87028826 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.872964101 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.897884698 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.872046526 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.874806997 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.873869085 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.87362063 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.924745632 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.873343673 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.874203774 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.871196485 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.929951149 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.880550112 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.875029598 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.87234137 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.873703111 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.871001838 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.032268322 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.923052343 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.874194183 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.924423379 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875023882 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875732325 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.874107408 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.874607601 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933514176 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.873966543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.924306184 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.872419885 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.035826786 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.335148526 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.875672274 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.880302952 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.878626579 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.874707981 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.875538403 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.880267229 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.871197744 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.87778409 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.881963756 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871230177 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.869653782 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.986704496 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.981363625 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.870338215 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.886044242 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.879879167 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.870313384 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.926395423 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.874305265 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.87096959 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925509275 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.989376322 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.940903847 seconds)
  done (took 206.643803867 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.879360229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.881866191 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.876315929 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.89132314 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.874460703 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.872948661 seconds)
  done (took 13.074806687 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.87630715 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.875534493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.875248933 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.874866568 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.874657001 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.875791355 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.875081095 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.880392027 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.879117807 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.874727133 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.875267898 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.876129626 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.875668738 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.87456825 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.87589493 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.876124807 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.878491629 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.870265328 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.875087696 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.875295262 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.020122718 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.875468022 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874872564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.878804685 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.879916115 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.876992105 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884728247 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.875793957 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.874591293 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.883921212 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.877242902 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.879570416 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.878086613 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.882439224 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.880908237 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.881997414 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876575459 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.876377406 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.874059634 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.87806291 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.877720129 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.875966222 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.875612726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.877771828 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.878413235 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.882028067 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.878808379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884987415 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.877358818 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.878956434 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.87820121 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.87571367 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.876943186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.878517859 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.883251693 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.883756946 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.882761241 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.877843521 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.877172638 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.878546204 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.878585365 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.878857076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.879972913 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.883210411 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.88481647 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.878140618 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.8807813 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.882728388 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.87759673 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.878501588 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.877741155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.875736387 seconds)
  done (took 138.164393893 seconds)
done (took 559.46369258 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.141023843 seconds)
  done (took 8.944227021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.917142801 seconds)
  done (took 8.81911425 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.411364436 seconds)
  done (took 10.221752009 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887865474 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.896432841 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.88174322 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.875067291 seconds)
  done (took 29.35898871 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.974263128 seconds)
  done (took 8.783671228 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.892032258 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.873620305 seconds)
  done (took 15.611348145 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.955845028 seconds)
  done (took 8.767066227 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.994563471 seconds)
  done (took 8.822440308 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.882856677 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.91114442 seconds)
  done (took 15.617729267 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.864459467 seconds)
  done (took 8.675928489 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.605686231 seconds)
  done (took 11.426505634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.881399756 seconds)
  done (took 8.708107055 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.933205168 seconds)
  done (took 8.744335196 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.984612389 seconds)
  done (took 9.795052954 seconds)
done (took 164.100778169 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.881441684 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.878961737 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.879869696 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.877642633 seconds)
  done (took 29.32772179 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.917200925 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.916218971 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.918829966 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.930887887 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.922221512 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.915910797 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.907959741 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.908182245 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.928642614 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.921869889 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.917922347 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.918836405 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.918065168 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.909373461 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.91803037 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.920488839 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.92850667 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.923657121 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.911356418 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.919634906 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.885456648 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.928234346 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.921893303 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.888379948 seconds)
  done (took 47.809145475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.084059431 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.955384895 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.040509066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.939057348 seconds)
  done (took 9.830627594 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.935549323 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.936969276 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.947453697 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.989254363 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.017478148 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.94707246 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.912724684 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.908656327 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.892223483 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.939891414 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.013377028 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.95439607 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.023488181 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.884366323 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.07259774 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.885449684 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.885901791 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.938647441 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.993568221 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.002170355 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.886330984 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.936123855 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.941133698 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.953694422 seconds)
  done (took 48.610687827 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.883757682 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.892769718 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.891940687 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.884579635 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.88570704 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.88719153 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.891566214 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.887350555 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.909978025 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.888592782 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.8878197 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.8875345 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.882883476 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.885937855 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.885633786 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.89727069 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.898193432 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.886011419 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.887026858 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.893334683 seconds)
  done (took 39.609967078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.880497204 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.734447331 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.232233376 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.135999168 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.882536146 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.881574147 seconds)
  done (took 31.560412583 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.899192339 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.955658391 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.896800434 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.944447037 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.023064466 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.892538603 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.891063475 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.956924295 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.997533691 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.954991129 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.908511652 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.913323634 seconds)
  done (took 25.049530026 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.883711479 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.881745322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.882939722 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.899001593 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.900144429 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.896300759 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.899572207 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.882756624 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.900590164 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.905096426 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.895052885 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.900100147 seconds)
  done (took 44.545287742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968022428 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.932701561 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.926244978 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573477144 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25938714 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093274799 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.490159772 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223049552 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.88708945 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159371318 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950380031 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986793994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13912346 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321535129 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91294656 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35020748 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185389842 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092434832 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910374228 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58936055 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951288533 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.999507429 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.64365642 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.943411638 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093341726 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.018359751 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.144435622 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889969922 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023566507 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92168694 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896526449 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890150112 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160281796 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290985742 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991390098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89564372 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.50465061 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.605998319 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.875767463 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.710144653 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.657159863 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.011212465 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895826474 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886646725 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821327893 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.9666069 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257482865 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.892267858 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.601891562 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886375111 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895087054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98132423 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.889648579 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.704097672 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79917386 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.885095146 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.88276481 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893515094 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45934801 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031397692 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.003704348 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.85355604 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.979975856 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648652126 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297085562 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.034913393 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.889264465 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890651667 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820858022 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.646234023 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943204172 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215101444 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.905265237 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536767933 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208954367 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.040356296 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826786913 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152300709 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36168413 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.854044365 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1141998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885791718 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825779405 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.833083892 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821356431 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161528073 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925309511 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.664695035 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932673284 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.217048481 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899728299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907676174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911959858 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110562172 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.770193178 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889636843 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.75770925 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030338229 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907789547 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.219246984 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822388065 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.888201137 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145793548 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.098976191 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.895300418 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380735451 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049487742 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385723635 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.933435582 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.979988731 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930734271 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.158319338 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950424188 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.021044495 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942265557 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887161566 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188359852 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412522555 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.020101704 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.963780452 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015891979 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.20984738 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917063137 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975381963 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898146414 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890657794 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.709894437 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443186447 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.888204388 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.891004368 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899472842 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931812803 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.892962293 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835508875 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.512994141 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99468284 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.903083958 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113650448 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398161494 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198088673 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825289365 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24197083 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97999504 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.118880573 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.538733913 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.969221263 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151559663 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912437131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.924623009 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93283928 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911140862 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992267996 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913717618 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.976370652 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.17934937 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.89379421 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.897991584 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.701182734 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.928084874 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892045416 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.895617909 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648601542 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163015539 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919596988 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897799329 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.780047329 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.906477075 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957342408 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899268322 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903781191 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.432351347 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.603439935 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.901679441 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.481342176 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116193336 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906904955 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.650589506 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009059959 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.97651885 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167562553 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959011246 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.827194077 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.606876023 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.590945616 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892631996 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83073464 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.894376246 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904603873 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905837128 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.091528589 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166352469 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94213155 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.597821496 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.936924982 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904116625 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.899498299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896353406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.4029807 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.042710322 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.018802516 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934271086 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039102863 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.907981778 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829568081 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.898707528 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902709185 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896099543 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.895987482 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928898131 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.600361292 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274671992 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152168076 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.509274969 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909003545 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.644685905 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.954725481 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.896609941 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.639454215 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147365133 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.925757269 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906787016 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.907698946 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.674791775 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.602777087 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46685742 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206861047 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216819978 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344550544 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.05121694 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919621043 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233669998 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831332564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451612143 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956408832 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242485382 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841653215 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981817193 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.544961917 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2435968 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91094571 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125194753 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295181885 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.696826707 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042865793 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10820823 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931098548 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.983770206 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853687193 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.418551475 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040570382 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.62788019 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105639222 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232928252 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.638687143 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.025316128 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.897276983 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603909094 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985846852 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.61558979 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070618127 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.018175562 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857254079 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384140407 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904925063 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.123788696 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246736785 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005585761 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.016585703 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837930046 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.909800922 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90959073 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.900125031 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.896526949 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.762353657 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.15393262 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90940501 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832816174 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.943558511 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183167879 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.806411642 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.906564057 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901520788 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208983422 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380686376 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067380298 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.936938882 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.412279682 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907774799 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83427497 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834202277 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.591575041 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905079999 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877619949 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121147771 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.006487896 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827104836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915560733 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980996899 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157749782 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.914036364 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172543965 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180277898 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603842171 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92603155 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.999646446 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626258001 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.011552814 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902898853 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137862144 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658723807 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126288642 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.969741998 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.861301089 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.900574281 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117327293 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902740603 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833397312 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132971609 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621682661 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.982932317 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208908666 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981548401 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.827874636 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951663191 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.996191274 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914839625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986193805 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913307761 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.91614498 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914183039 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947895969 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837446571 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.027835699 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.915675007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99790276 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038379306 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.423803941 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.907915626 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179091041 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275670634 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230259836 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969704713 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905770306 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905062551 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840406988 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053742666 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.130897984 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179719514 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035709143 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.020799675 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927152768 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.643206594 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.050634227 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149543677 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181848755 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.805118811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352535825 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943257278 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.907977698 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912395932 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.11535916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129727317 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223774009 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053248054 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.921588774 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262484898 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179233974 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.907456361 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905253977 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499137855 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.992321779 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.609677732 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.952353634 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842873113 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183704756 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914668845 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28339676 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929368069 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.067475879 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.685196355 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618721111 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198965417 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.891795359 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.969776472 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192738239 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295515447 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222806255 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975254479 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915078002 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.018595177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057672927 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.785537483 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907326244 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903962261 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957347679 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620098607 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919015191 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1882708 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222937443 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.906927131 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.794748681 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932800017 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.919914723 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133839682 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176960016 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165892775 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921780289 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917965921 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.726467071 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18037762 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97550081 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844269302 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.914125621 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010314537 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160611577 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933278141 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.36396695 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.624438686 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182780579 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.912919558 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933321856 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00549701 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273627677 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237297247 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.453287107 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120503478 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501385524 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437104162 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213527156 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.915933208 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.005429338 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21299408 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.915532465 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.931688185 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950453789 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.177017634 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232218118 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.973776491 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615670146 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.884680477 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.254466264 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475740188 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865516483 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916867722 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.97372391 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915127332 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.04221411 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926694784 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.800894853 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00169173 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.700656497 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184465105 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.918615128 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.905257275 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.696695023 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.134957803 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946647705 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054994778 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913056001 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.588035709 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.26462434 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172683638 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.934158714 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.921861256 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.922708247 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915299024 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90424126 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107736602 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.108868633 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215889788 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.963511373 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.955446738 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920029273 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.130182776 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129732 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.865469157 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059350763 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929641227 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957794507 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.821771431 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415180039 seconds)
  done (took 1687.454927026 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924073286 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.933781848 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.942083602 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.985852678 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029935974 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976962832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.099927226 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.948546107 seconds)
  done (took 57.693934329 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.920686277 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.138432689 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.924362211 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.920369372 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.927112151 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.915845267 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.078588125 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.927081843 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.930966602 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.929075005 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.923033225 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.91459551 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.225309075 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.945186502 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.920136889 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.90725729 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.925657683 seconds)
  done (took 75.241933229 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.922574529 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.118569553 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.946268886 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.931659641 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.927782498 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.929488472 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.71668622 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.925692703 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.920504001 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.032293509 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.553544475 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.926596394 seconds)
  done (took 87.706874966 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.925867007 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.927862888 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.928927383 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.929968615 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.92525313 seconds)
  done (took 11.493126931 seconds)
done (took 2197.770278863 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.200299017 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134241449 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.143696806 seconds)
  done (took 6.132144852 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.056460089 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.102866552 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.22468583 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.230722575 seconds)
  done (took 10.456747573 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.195113906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.294528985 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.11046981 seconds)
  done (took 8.438405979 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.306002667 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.910431949 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.015009756 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.906192641 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.905721511 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.906416779 seconds)
  done (took 22.559334312 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.911863009 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.913734449 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.911504401 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.913949037 seconds)
  done (took 9.49151164 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.893947967 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.699327042 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.891776375 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.907550709 seconds)
  done (took 21.231345576 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.659010433 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.670789821 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.655102918 seconds)
  done (took 9.824712438 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.546973167 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.834709139 seconds)
  done (took 9.222559784 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.176287388 seconds)
  done (took 4.015271061 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.043511999 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.180279566 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.38551697 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.411711207 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.475576918 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.77921589 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.218762757 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.15168401 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.303717648 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.350637337 seconds)
  done (took 25.139998749 seconds)
done (took 141.792527034 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.285213972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.275500052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.118071278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.286202586 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.129162583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.117137286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.130083897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.270271279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.750117087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.74850633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.285892354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.12887652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.080373975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.275694997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.081214271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.273707331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.136309997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.296562083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.941061073 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.137500853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.129196285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.884662631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.127842408 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.895147496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.127886087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.070172198 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.476449387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.273925401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.095554471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.486518187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.070271275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.294972433 seconds)
  done (took 170.521083536 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.669529282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.910998952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.909449705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909875772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.329958174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910547283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.911919005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.90826873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.065642021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.05456841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.910331614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.336438424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.911675803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.910467956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913000963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911928469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.218040127 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.731757008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.926498669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.929791536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.933308549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.286112239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.936204719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.344271399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.255974254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.934938838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.911832495 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.934902144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914251535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.924615623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.927428635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.911669311 seconds)
  done (took 209.342315501 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.913945056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911096842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.915097216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.912512256 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.91875936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.923296339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913224741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.910735687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.678636436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.664347337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.917733227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.918687871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922505877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914074918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923568676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911203707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.923702815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.923871795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.920716401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.922932481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928217199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.746417718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913796751 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.73662998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.913865811 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.916819971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912978732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.919298675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.923401585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.922266236 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.920433118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914569914 seconds)
  done (took 222.396314453 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.111177476 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.920866958 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.921613218 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.852082622 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.921507998 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.920779914 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.917667866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.11069347 seconds)
  done (took 19.537923111 seconds)
done (took 623.649652642 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.354431891 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.194377043 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.089040576 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.944734814 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.185522001 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.970977706 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.94100325 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.002099626 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.656742541 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.004923123 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.632728949 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.955793148 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.724040533 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.959153445 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067373855 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.995124528 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.482375947 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.572207774 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.117326582 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.012570761 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.103807054 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.902895091 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.010104148 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.693458215 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.745128399 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.939077646 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.133182969 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.48672619 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.947176985 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.106689566 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.641550601 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.328999579 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.946722625 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.939614063 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.99199 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.974784873 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.305673221 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.945392541 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.063333888 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.713676895 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.001602108 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.542010697 seconds)
  done (took 105.173778255 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.912384415 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.912417825 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.910997236 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.911847166 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.911900225 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.911561075 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.911220136 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.909958859 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.911554318 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.911513184 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.912196373 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.913793504 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.911484371 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.914377734 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.911543566 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.912091406 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.911762116 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.914279046 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.910318637 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.911433536 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91177447 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.912130244 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.912061321 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91203393 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.913460943 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.912582574 seconds)
  done (took 51.571315037 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.925128176 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.068029208 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.15016741 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.940382196 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.924744729 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.9298038 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.943407667 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.930877203 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.928141056 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.927776902 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.01736136 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.931595615 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94519763 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.148548386 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.936379443 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.924002746 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.92535691 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.925438559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.07191847 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94232956 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.947330091 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.930134334 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.944428851 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.940036741 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.928384484 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925723199 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.929797585 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.356535938 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.934604535 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.016531071 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.968118759 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9474452 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.31349284 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.157940968 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.975983497 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.932342997 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.924983964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.021157953 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.931963304 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.927334365 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.943030566 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.930794677 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.148867612 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.415518111 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.939119935 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.928338838 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.368562797 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.028213304 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.966826979 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.934895909 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.154178484 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.938953305 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.927520076 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.929001961 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.96229276 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.934982105 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.926675456 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.232616971 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.934923925 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.944041979 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.932749796 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.927738677 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.079971805 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.935135198 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.069496873 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.93752126 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.934260374 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.929717907 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.148658227 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941193961 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.423635987 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.941478354 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.92870232 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.017619535 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.075307419 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.393678345 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.938835315 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.083292383 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.328547164 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.948813425 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.936532623 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.347194637 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.954622874 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.934458211 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.92945963 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.929288442 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.92814478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.972483801 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.944052216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.369236684 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.426382504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242939992 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.952076015 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.9457819 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.928532779 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.233007879 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.936045015 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.928331937 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.145684139 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.43288986 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.940304263 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.937180239 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.409053639 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.940924183 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.948140071 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.937883046 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.154977515 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.939367043 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.974357239 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.9294244 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.935575975 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.934215819 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.948422985 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.937798163 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.929134993 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.400157042 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.035763363 seconds)
  done (took 238.301932429 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925689308 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.922098883 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.923683414 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.945251118 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.924549274 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.931297237 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.924986052 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.926226994 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.932419281 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.926200226 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.924949651 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.92747956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.927513915 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.932847433 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.436400203 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.93626927 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.538528471 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.929037868 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.925930944 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.941449295 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.611203872 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.932612961 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.929498249 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.925174832 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.928384881 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.928479131 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932023648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.97160938 seconds)
  done (took 169.72080201 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.935486668 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.118039445 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.949568389 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.971445828 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.943024656 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.9323545 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.957809945 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.952858219 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.940504174 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.931436335 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.932639886 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.996416561 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.942601736 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.068061754 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.963534168 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965783997 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.041108382 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.939842945 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.93278124 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.933006044 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.96334386 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.930268899 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.996902566 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.060475002 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.951144314 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.053387441 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.937978143 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.934337972 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.935231519 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.053978505 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.94717975 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.995687136 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.965287307 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.953685244 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.056988605 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052789481 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.039792683 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.962247775 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.940124261 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.933997418 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.931492863 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.921807038 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.05147825 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.949562686 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.937471898 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.044157588 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.953595304 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.936669354 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.943123547 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.935159475 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.948802664 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.955283495 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.004335637 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.068184715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.967370216 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.960455914 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.962498563 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.236076121 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.945287277 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.035267262 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.927202571 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.054199735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.955611928 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.92312841 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.934699458 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.938588294 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.96414375 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.966735063 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.044624076 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.943728338 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.037058472 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.969582747 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.942756489 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.93440935 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.936974842 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.053299825 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.055063635 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.970984478 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.975138838 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.968570386 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.933063237 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.938349739 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.925605635 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.955604669 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.940522673 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.056176537 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.055762416 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.94290727 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.937595677 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.939301721 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.939135059 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.963441614 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066091852 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.972975762 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.036963787 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.010173055 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.015110714 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.953055183 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.95086648 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.942374431 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.003697201 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.951796723 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.950257701 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.283424342 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.010450108 seconds)
  done (took 209.736457869 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.034553844 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.417457958 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.995382273 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.995863885 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.230740336 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.373792945 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.738226681 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.988217726 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.987285949 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.014089326 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.147992688 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.052949789 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.006759211 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.974891334 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.394553543 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.980125777 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.98935165 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.009987769 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.990892493 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.578803804 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.295252448 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.105108399 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.984544543 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.088506932 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.967342496 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275056523 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.310997676 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.372407928 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.023445925 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.337978018 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.322775429 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.679641014 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.198578393 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.229747453 seconds)
  done (took 76.965872579 seconds)
done (took 853.317906609 seconds)
SAVING RESULT...
DONE!
