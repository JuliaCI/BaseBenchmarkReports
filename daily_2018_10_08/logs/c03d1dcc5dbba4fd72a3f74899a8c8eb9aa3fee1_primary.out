cset: moving following pidspec: 4751
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.229639639 seconds)
loading group "string"... done (took 0.4607066 seconds)
loading group "linalg"... done (took 7.549207676 seconds)
loading group "parallel"... done (took 0.172081133 seconds)
loading group "find"... done (took 1.161648461 seconds)
loading group "tuple"... done (took 2.101091243 seconds)
loading group "dates"... done (took 1.333682916 seconds)
loading group "micro"... done (took 0.247457239 seconds)
loading group "io"... done (took 0.646165077 seconds)
loading group "scalar"... done (took 41.052345693 seconds)
loading group "sparse"... done (took 12.552125136 seconds)
loading group "broadcast"... done (took 1.105090279 seconds)
loading group "union"... done (took 13.97561042 seconds)
loading group "simd"... done (took 4.714519996 seconds)
loading group "random"... done (took 9.519608817 seconds)
loading group "problem"... done (took 1.948721801 seconds)
loading group "array"... done (took 22.218755351 seconds)
loading group "misc"... done (took 1.418916488 seconds)
loading group "sort"... done (took 3.547057867 seconds)
loading group "collection"... done (took 19.178919593 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506877512 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135205343 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131821747 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145369605 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199160351 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14095558 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154546416 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.111737741 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.935015827 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178905017 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152398526 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.50593756 seconds)
done (took 5.041423195 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.218148135 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092788514 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101261868 seconds)
  done (took 0.859500374 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076392021 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143766741 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092255193 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077963618 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093292326 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076402772 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093313053 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076868588 seconds)
  done (took 1.32782947 seconds)
done (took 3.160495607 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.723245514 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277778294 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20488919 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457192315 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194533781 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211503354 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67725555 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336503197 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251404396 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098835663 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142960541 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383692229 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134347881 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68727473 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08828585 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120945746 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175822318 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44881961 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081210167 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108601073 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115295292 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141635274 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12621207 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089601644 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.181884424 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080754131 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.189678797 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106244833 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079388468 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286325286 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199569344 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686973472 seconds)
  done (took 10.796254998 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109441967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131799269 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095549767 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138053598 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131234324 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097950398 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082922517 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094704482 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119861861 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173433131 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127713871 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12032323 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093335391 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081419761 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112701744 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242057361 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118053963 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102788282 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09882838 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102606421 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121196604 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111595823 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106715815 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091605272 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165222841 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.218445529 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111665285 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123840874 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096003224 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112434241 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14326208 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140715345 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092394662 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07831931 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169080252 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121987318 seconds)
  done (took 5.062993932 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184322444 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118463533 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165401989 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161624506 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138300183 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157963628 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110835321 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241427688 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.091730852 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162845625 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139930081 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113584453 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079793658 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097006003 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093661371 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.607386513 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160990937 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133104314 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094712013 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103859563 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098186938 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364242896 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086690879 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095061489 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081815336 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081195561 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157946801 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080962324 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146916637 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104561173 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099240292 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130817177 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19180245 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125694162 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116231906 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095394335 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077696746 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192265535 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088070625 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127697907 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094971361 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102131542 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135337049 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134609529 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095774021 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079853485 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202576159 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095118465 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11121787 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.915094111 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180244298 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090818509 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096228196 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32069887 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096585059 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098057789 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075944003 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.250786164 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180169726 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096687257 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079361314 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095255331 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080626746 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380362104 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095496899 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.697988342 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083573372 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106302235 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08215309 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095399199 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101949034 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085746519 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113148248 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078793974 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098174214 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077623365 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095181005 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079921776 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107032882 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1008125 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079372969 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161968735 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078129789 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112669525 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125339787 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082499837 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093632358 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128502433 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081904953 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095824364 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131337242 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079575907 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108263009 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097013694 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140597085 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079416266 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160180342 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080298316 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09291479 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108105492 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09869163 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119776717 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129068123 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111720894 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080924463 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10061544 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075806807 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094183569 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147105817 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0924429 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079798385 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098606913 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075729254 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108346662 seconds)
  done (took 22.229482653 seconds)
done (took 38.760255917 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32551319 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09994192 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.099913722 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099772781 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097410964 seconds)
  done (took 1.468188266 seconds)
done (took 2.188589532 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295781839 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1697578 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09395793 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164706351 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092290764 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172131387 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157018296 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110740358 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216044188 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076459278 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162103182 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093149651 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076137889 seconds)
  done (took 2.626796426 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09455585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113229955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082186974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109845944 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075949969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109683682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091387888 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115500658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107931395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083622527 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091904506 seconds)
  done (took 1.792167642 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092364313 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110917302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081249649 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108263524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076033476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108776997 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091987619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114074022 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108296161 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084446702 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091431634 seconds)
  done (took 1.786062813 seconds)
done (took 6.916727671 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089530819 seconds)
  done (took 0.804380186 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.911375943 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.920603187 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.110810776 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148847925 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.295242149 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.189386513 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470808706 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126978842 seconds)
  done (took 11.097109189 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.142535285 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084150283 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10279162 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081469686 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102072757 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081742244 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096257896 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097729091 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082470417 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09742505 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081898956 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099989853 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096894301 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086002453 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100687997 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08401597 seconds)
  done (took 2.301626321 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118451514 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117761792 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104576147 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107250026 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086033083 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10252866 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104684625 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089188463 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100378049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10176123 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090326364 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103321572 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102157514 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080246441 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103821208 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106715868 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084852749 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104171042 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105475394 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089119321 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105461449 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094069021 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086110853 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104203217 seconds)
  done (took 3.219184446 seconds)
done (took 18.142480151 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158127836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106246051 seconds)
  done (took 0.98888639 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093730612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110965589 seconds)
  done (took 0.933293346 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09522608 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093588483 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120723192 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107513736 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079704679 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093828437 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117030877 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079398126 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094366769 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079362113 seconds)
  done (took 1.693233261 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081969381 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108134918 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099772757 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094753889 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102511577 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093160028 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086882723 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097171598 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107298826 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076078708 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101631891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1132731 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085496677 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114154189 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102952002 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082338055 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099631135 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097870553 seconds)
  done (took 2.478746116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078826379 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096392343 seconds)
  done (took 0.90719155 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080892858 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092325751 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080120761 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095766366 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093539569 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075318122 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093012346 seconds)
  done (took 1.341768475 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.467731303 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134706558 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251204216 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084570689 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.117214136 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.3018995 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09660258 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083639522 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100974908 seconds)
  done (took 2.42555238 seconds)
done (took 11.497506384 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092573719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1153181 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110754321 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46152241 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.1049186 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096620709 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.157966005 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247232723 seconds)
done (took 2.123274482 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147749686 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32266452 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112490666 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066522036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093758587 seconds)
  done (took 1.333899589 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078875523 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098424381 seconds)
  done (took 0.91465743 seconds)
done (took 3.135015313 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079846074 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095835297 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077253382 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095999182 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.076289576 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093149854 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110449215 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096960785 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080256633 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096871348 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096059726 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07867525 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093266933 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077055071 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095408072 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079486012 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094980803 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076758216 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092467926 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076342694 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095066401 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077508734 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093222675 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07763622 seconds)
  done (took 2.878153189 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09818854 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097486779 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10138439 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084826092 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100332964 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084385061 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101595333 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095986767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08505402 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097939166 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098683801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084031423 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097963982 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084221802 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097303519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099310048 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084331996 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095956619 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082786768 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098901034 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101124424 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079882837 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099687933 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1008756 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082897612 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100060384 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082207402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096471728 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101054568 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083787493 seconds)
  done (took 3.540548718 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084176609 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092740203 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077513491 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100469582 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077046801 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096084388 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077044905 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094941748 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079006287 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092944172 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079155643 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093523807 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077226119 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094877243 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078342 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096671575 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106209782 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076978513 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093566794 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078269893 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096662808 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077420294 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093754007 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076262081 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09371489 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076747914 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0938361 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076568407 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094621323 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077300715 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096165926 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081526038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093592268 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083696071 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096509978 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077005816 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096792796 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093677886 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078640687 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093655504 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076553205 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094695887 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077075853 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100457537 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078239641 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096233089 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078041092 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096294606 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078078616 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096985203 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077830438 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093861811 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07950114 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094254225 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097022219 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077390829 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094645056 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076801051 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09516087 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077989591 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093497533 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077230043 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096004553 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077897923 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109589922 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084534376 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094125102 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078882383 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094726533 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080358296 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095931973 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108116931 seconds)
  done (took 7.068805564 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082459557 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104733137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079556917 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096178238 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075882118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094804426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096706994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077322696 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096677093 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083964582 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094255642 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080110361 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095661809 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10640246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078196446 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095909324 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084013173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092640789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077984744 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097793479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078514938 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097349877 seconds)
  done (took 2.712902314 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20598286 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102853098 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140688474 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105719811 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081843785 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106223556 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100773755 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086256001 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101172045 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082379848 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098616711 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101186998 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08217905 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098647962 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099342332 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083690811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101507661 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084089432 seconds)
  done (took 2.612888574 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091896059 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097013536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102001172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097026587 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098045501 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082656849 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10291021 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105875778 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083219195 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09685046 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089116149 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099263024 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098814977 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08045279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099403675 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081009655 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099837383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080579341 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106409965 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10258847 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102757199 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089337618 seconds)
  done (took 2.838705493 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096374095 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098836497 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115842359 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082678487 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093521127 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078631667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104578465 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08027812 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105091201 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098789138 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081123926 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096208025 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08624461 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09597529 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101735997 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08019289 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099984438 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08127971 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099259483 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076481062 seconds)
  done (took 2.606698148 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101917147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099062516 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098723219 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091108809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098776545 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082984414 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10872281 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098920854 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082633124 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124286377 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098206034 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082164679 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107992326 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103729453 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099052788 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091403876 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106778532 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108384452 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083218363 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09786893 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123106547 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082802262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107516165 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.206391001 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083153705 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099182286 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0987951 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087729214 seconds)
  done (took 3.609468676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080937583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096898855 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077851703 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09531018 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079087401 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096200742 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078089676 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095406006 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08092869 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095236284 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080972973 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097513653 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080899284 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09732158 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080939602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097249865 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082230526 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095344843 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077432384 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094386781 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080511416 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097742483 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080093491 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094504949 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078437646 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097340319 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078781921 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094966774 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080810062 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094519847 seconds)
  done (took 3.395062259 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08949795 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10426257 seconds)
  done (took 0.952189887 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07899272 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113148657 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078697019 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100629028 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086361717 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097665279 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106310608 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085884591 seconds)
  done (took 1.504467324 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095152055 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108148207 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083050716 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110270456 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10848203 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094397171 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15953773 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099525766 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087084823 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096137125 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111701682 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080130933 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103630212 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080225404 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102932044 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087344849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095960316 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087226256 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100092851 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096549182 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082353227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108324971 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084291815 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095756127 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082479164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108126854 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10763443 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082699086 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10213511 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108461703 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087405516 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092564023 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081253757 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099874367 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079633896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107276444 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110611143 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08357423 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10758668 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082551167 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108794768 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093552585 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086375837 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10374372 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091614927 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09875731 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08285032 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093488974 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09595797 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083032145 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09403159 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081022234 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092918534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088281648 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101693058 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111506868 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080571645 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100000857 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083792195 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102103589 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087947641 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100063276 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083695471 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097317386 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105097718 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084951231 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106162127 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076501076 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09300017 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079525777 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105940097 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120642848 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090227731 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099118819 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082762931 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096633637 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101822124 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082692113 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10536179 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089997012 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098366242 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105754731 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088672359 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098715293 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084437766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105036478 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096131289 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083362923 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095838516 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095714155 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09744659 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078942317 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095791419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106571954 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085129165 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099277963 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079265758 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105912211 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078358188 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099327779 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082331296 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099445993 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10695398 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088049489 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104865057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106358922 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08810717 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098344743 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084246544 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094921783 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082403369 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101389854 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106148224 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075432519 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101122531 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08341712 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099722103 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089372902 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096853867 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082659644 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107048461 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105660612 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080696508 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095509259 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084786422 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098231002 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085612159 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106254261 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097557057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076867809 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094022624 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085199204 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099078243 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086388013 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103954263 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10138376 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076093268 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097058712 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085784418 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105416838 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098539637 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082274588 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103178011 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08242223 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098533387 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087243118 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101350488 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081560778 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104068033 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100670016 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076619804 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102448059 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084053705 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098377362 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085408739 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102157103 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101769319 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083402962 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097369811 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087157873 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100781601 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080609964 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098365586 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096989413 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090922589 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101082071 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077521213 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096722384 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090625699 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096807189 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081213397 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098444117 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101455842 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083308324 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097101637 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081005817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100306779 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11053757 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086875593 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100499364 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086993096 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109054611 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081801339 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100962565 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099662091 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083192486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100200021 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088494253 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105270048 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104798654 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084717951 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09646015 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087582082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106381554 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081666302 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096983822 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081042351 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103143038 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106403954 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085605479 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099815462 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080259778 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100094206 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103603688 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08561542 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099898139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081468463 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104418983 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081700608 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106199937 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100209608 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090724762 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10274632 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0767906 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103410949 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0974428 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087269135 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09419804 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080196588 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0987496 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083468269 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098632645 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084918405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094390857 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089594526 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106771621 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099376554 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080772106 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100127736 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091046758 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100451349 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085746737 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10264869 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104101597 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094823509 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099023815 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084996567 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108878267 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100121482 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076448336 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105821092 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081567442 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099100914 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08176786 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097614805 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085010004 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108382821 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104344979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076335117 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10153994 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081109526 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098701775 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078177737 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106391399 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103025997 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083411757 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108401292 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083810576 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100746576 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103508854 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08223456 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100976686 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084397494 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102608859 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082733202 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.1020908 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081830876 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102505171 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098244638 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079485275 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101240514 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082460851 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100495927 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088514778 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101087052 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08258672 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102375008 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10102914 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084126439 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100020122 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081608591 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103458692 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083697921 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100067002 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085757056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094917231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107913496 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081973194 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107339461 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082765191 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096982372 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088041408 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103228222 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106198686 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083805217 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100408594 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083714336 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099603915 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085715344 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107814999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097525728 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09148277 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105399468 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083825628 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103185149 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082236758 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101831632 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098630303 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083811527 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101008262 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082346368 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099434234 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087121925 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103760297 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082193918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102374389 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101346686 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081871477 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100858278 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077330434 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098721217 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081983802 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101582771 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089426768 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101565023 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10282623 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081364268 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100838495 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081605886 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096458996 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09115699 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109528883 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101549484 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090111867 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099348907 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084568988 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10969921 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094229912 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080328315 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097598132 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080809401 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10790483 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084190125 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108221618 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100103496 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082145938 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098139141 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082775817 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098949538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078116926 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09854899 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086182414 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102769994 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081972927 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100441056 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102470427 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084042076 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107212322 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081741493 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10195028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083547049 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097822665 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081769258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098758197 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103108244 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083894006 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098196907 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080288591 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099947522 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085053783 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108929398 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082070419 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102515812 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089217089 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099851272 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.1034916 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086826552 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09460296 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086038854 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099616824 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081886137 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099227813 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104118123 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085570981 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102176089 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.088840427 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099887512 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083132282 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100235006 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098424647 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083004982 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100098372 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083104144 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100146315 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084109477 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109479024 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080772216 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102637381 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100021895 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083403391 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10514733 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084329223 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102483732 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108552623 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08583163 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10114678 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08874097 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104761012 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085660701 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101600131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.101998524 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089085289 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09924871 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090623292 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100184635 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083763203 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101784769 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081040315 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10078359 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100266738 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082129958 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105758219 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084412349 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099920457 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082280968 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098804115 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08362337 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104190255 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108356673 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086056876 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102836803 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077564109 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097579919 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084405368 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098913461 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08368259 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103448571 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10696674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085808522 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100953986 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081850109 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108605245 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107179466 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087240492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098312686 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088284651 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101490141 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085244407 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102736249 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083695342 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10253193 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106534304 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085406946 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100648319 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091225792 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105564106 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084192464 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103144366 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101386534 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083483613 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096055214 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084260375 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102648576 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090116219 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103998093 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100629515 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092543429 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099541701 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08342448 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105079986 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082068341 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107672729 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095460407 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083132544 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102154185 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084173048 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095896738 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082075802 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099364297 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085575108 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100678888 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077994585 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110004862 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108366367 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085781303 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099746471 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081499358 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09614001 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078276568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100143848 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083318904 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10310746 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109927319 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082845149 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099735457 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078280786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100686797 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085431822 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104273727 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079293861 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097583657 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099613046 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085093561 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107223785 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081798453 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100983766 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086206642 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104177577 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081238365 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105820757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097596163 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08679088 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110917662 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083705271 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102486185 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106392386 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091481325 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101682579 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079399861 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102358534 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085495922 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101463113 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102730263 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084447384 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114478264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086037972 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101082428 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081919988 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104684231 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100268453 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090954517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102479193 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084904581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105665903 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084519933 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111746753 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103663026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090152713 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103458913 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084840624 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.1009533 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100684604 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081441225 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09970403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084335136 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102805523 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0880455 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109707776 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10008297 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092558956 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109198807 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08841726 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098103045 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081761293 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101049426 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078548777 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103157134 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099299719 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082070929 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099339177 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082269219 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10316035 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089652819 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102818945 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084379696 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102931095 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095928081 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085429479 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10420019 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084962053 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09842767 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083959445 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102495919 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088553396 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108216541 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102313063 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086213924 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.1032895 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084914109 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097385693 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090319942 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101037442 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085951757 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100681805 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083448023 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102955334 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104694318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089163386 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103263103 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085312449 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114703552 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104450714 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080748134 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099359626 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088560761 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099733061 seconds)
  done (took 57.041922727 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145203084 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080563394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096782639 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078946861 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111473173 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098325664 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078815501 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097517424 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080538243 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100308017 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078947714 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096846459 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106981276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122436022 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092730273 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102967374 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096406766 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080221678 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097088791 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079375406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107801192 seconds)
  done (took 2.836001845 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104445345 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114541933 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113718653 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117085386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088706856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113033825 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113400142 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114280326 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099115079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109845917 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116741257 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113325648 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09056885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110277618 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109091961 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091893881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11864108 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108090242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11393778 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095045053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111165804 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112276257 seconds)
  done (took 3.185104713 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083630319 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100439985 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084066955 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096407335 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082554557 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096248475 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086849966 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099429129 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087434132 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100346883 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081149656 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100147057 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102765288 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07786841 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100370506 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08087348 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.148790842 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.104984969 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082040507 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102445496 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097414166 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084801384 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097187191 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079318921 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099705 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087047144 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10237096 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081261187 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101359671 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081515465 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101383603 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079884177 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103623821 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101672999 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082199812 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100779252 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083353662 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100456936 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078387029 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099463457 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083741725 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098336459 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083523311 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102987559 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080477258 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100517245 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084533827 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102432988 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096502409 seconds)
  done (took 5.383559809 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103976685 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158289109 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08450926 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141564572 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117773493 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111120332 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086994879 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140822475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10131436 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082327226 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121079536 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118559084 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102369289 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088277771 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106121907 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10191105 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085532384 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10171738 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087858102 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102039977 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107893988 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09006222 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117363559 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11591591 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107167371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083253444 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102451423 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107259555 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096928002 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106898021 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107463802 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090392948 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119422591 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104169836 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083340412 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105666331 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119745256 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084229915 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105930595 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099413503 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087278578 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107026139 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109219991 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101167518 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103838159 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106895486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085078774 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100008171 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116317062 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087280298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111672309 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117847805 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088519845 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10399176 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107711446 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118491096 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08589236 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100337962 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08762452 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114864206 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100364217 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088864655 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117252441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105469199 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111312472 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099368267 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107882263 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106685322 seconds)
  done (took 8.024990426 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094392226 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109798728 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118963748 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119709645 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090603798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.108868587 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109402111 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090827802 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108915329 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114545606 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109459503 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132187788 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085376367 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11451917 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109645284 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091869163 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10959485 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110323018 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090100388 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110920092 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110078063 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118788 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091125363 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117652736 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139940095 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104822739 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09049332 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110696773 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119918876 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109865533 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122683084 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091335175 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109619518 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119224884 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121551546 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090585756 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101649877 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108817938 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091097753 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109602952 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10419849 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118746088 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090758492 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104089931 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109490151 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090262087 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119754292 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123166903 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112755755 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096908745 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110547767 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120062949 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109465713 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091467582 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119514592 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146162795 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118846774 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11922645 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109827674 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119350282 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100273684 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127179263 seconds)
  done (took 7.590944153 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106175932 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113954691 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116713347 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099526557 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082639369 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107496834 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082446331 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101596371 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113722262 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093835269 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115401543 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108653478 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111366313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096245283 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108494479 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112084364 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088620849 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107584175 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112831253 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107092964 seconds)
  done (took 2.909033168 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093304816 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12294608 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084612238 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111135532 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107467534 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09131489 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106385868 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106594875 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085866335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106663751 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095981028 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115619983 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104680473 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090939233 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115947946 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109312125 seconds)
  done (took 2.472173376 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095728729 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115798133 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.11788499 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08511453 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102248029 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080778551 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104198457 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09962108 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080555702 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119839059 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08448036 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106926677 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104152823 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082653664 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099918008 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087258233 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100368 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082737886 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104516736 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120544247 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095222353 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103216822 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104251793 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086848486 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104483585 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089121536 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105016608 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100750352 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084120138 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103897697 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084030531 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111577336 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099643853 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083805745 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102056652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08243069 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104191329 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08495874 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107088244 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102927569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083041045 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103387108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084815012 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105672529 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0805861 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105163445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099143151 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091325475 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.100996409 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084624806 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103767107 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1061124 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086393276 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114385812 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088133282 seconds)
  done (took 6.180224797 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099077477 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107383026 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080649427 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101890929 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087579028 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106848927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107412458 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087691695 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105501003 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083047781 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105989576 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08872628 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105985699 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106996399 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086257929 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107891967 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080164376 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106758023 seconds)
  done (took 2.589692656 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090087291 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103670964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092726237 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10406311 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08422231 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107557764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080489812 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103457033 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10268188 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084317877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104255388 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087415192 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102256419 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086961598 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103817406 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084919947 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106480143 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102266638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085254536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100772052 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088015564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102009554 seconds)
  done (took 2.940038222 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117501251 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124041163 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092793906 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.226672962 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103074137 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130418159 seconds)
  done (took 1.62731057 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109300349 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119095051 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105219273 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106874456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114439495 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104973812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087036682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107048359 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116967174 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100979771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105835475 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116526211 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11587741 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097037138 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113280725 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113627699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106889249 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088724872 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10503173 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127261889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086493063 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115940441 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106579283 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086508535 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106245667 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115939352 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115845598 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12094589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086930894 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11649263 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113623829 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08736971 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116805509 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122153502 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107592607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09828457 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107308256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127195575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113136491 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09568814 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108185301 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113809024 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096348483 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112796618 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117046481 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106242003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093351868 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107308801 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106549027 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134481291 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093195368 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115841184 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114078125 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115958895 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116031765 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132846035 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100727418 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11581027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114073475 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121384437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115468855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093718709 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116053186 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120584645 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113464921 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115629694 seconds)
  done (took 8.056138898 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101867821 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125755694 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106611051 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121452748 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096901392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106922251 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106389926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087942088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106537815 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105469121 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150535469 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088616408 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116591619 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116697953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107412352 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08715589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106765702 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116934605 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087494214 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133889108 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108140725 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116312253 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116511074 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096184563 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120613329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113305347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107118731 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08808711 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107087399 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106025835 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093356817 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107335972 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116620648 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086292275 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116534481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107687664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086645186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112315659 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106604519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112817662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096575364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126635834 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107085165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1072428 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121583989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088604194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107533966 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086229991 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108255207 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10630918 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121514491 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10232029 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121586667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116356798 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106894895 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087401732 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107695457 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107003929 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087692512 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113649989 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117083488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107483552 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135077741 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088871949 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108414739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116080322 seconds)
  done (took 7.943908805 seconds)
done (took 153.237577493 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098022006 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134981674 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094887179 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167342201 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104684577 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118553615 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137041384 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096632208 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106003221 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085960274 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105802405 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086618099 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16938612 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084955196 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105643993 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106745844 seconds)
  done (took 2.641103042 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197865409 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253286525 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102681487 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104294584 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089658638 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108901432 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103563876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090806635 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107751441 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0849806 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107708901 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087127038 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10480355 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085880778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109522975 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087396346 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105608633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087307019 seconds)
  done (took 2.861437509 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112294709 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.171603521 seconds)
  done (took 1.133336314 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118520541 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17911299 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29207769 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15469793 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117834339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125677847 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155525344 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129126893 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196137821 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121122141 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120724337 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098524659 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139232638 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115799339 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094030239 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117504792 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141036953 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093054272 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114779131 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114301281 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116089687 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105056778 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114350368 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092736853 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178700631 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119048898 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085212683 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105452135 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114511524 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093972006 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111971912 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123690896 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097978849 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173257161 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102105132 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174131292 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097444762 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110891712 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114490663 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091555354 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118804408 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117749303 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104435661 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117105925 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086941085 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117368155 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105239388 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08520357 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112505227 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116892344 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094370207 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11201067 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15415551 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11764467 seconds)
  done (took 7.470811239 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790253868 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163210448 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090077418 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877269702 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13745608 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103513899 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77134498 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1325307 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232036334 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755764394 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134075355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121147869 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225093281 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236078227 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926025836 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308698263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.666188399 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101370587 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149011687 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151196964 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118293759 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13548496 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128938205 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452438986 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094723824 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111631125 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115762964 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099791316 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157853578 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124826662 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113442102 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176904444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.264561739 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182969422 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114731922 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089328809 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110553106 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167497442 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263973848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212732632 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180190355 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088157557 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110407176 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121016146 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109168117 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108364201 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162178797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194411316 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171717426 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091240318 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119635993 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119360449 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119758699 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164921802 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119001215 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284601837 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317907953 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111094742 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118420282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104551108 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260315401 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121301213 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221206659 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115464233 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209671358 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109572903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757838762 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189349813 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090213009 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117340324 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117056944 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094277339 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120445759 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170467774 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392089132 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123770286 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09307524 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1109779 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202927484 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124498295 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110211539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160419222 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114826764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098048598 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124155287 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122571017 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169792417 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.226356285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124146353 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118835211 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094054354 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123395329 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114743791 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210873465 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216618695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161476119 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206762974 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122434626 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161703559 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187127651 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098635184 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192874918 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096647995 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125693918 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121649658 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213291694 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144657208 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101081412 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115775231 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117568123 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148155238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125011142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09758982 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166971693 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501158163 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165699734 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108478276 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126650143 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097995717 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158942622 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11630276 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260678644 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12006834 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168496396 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11727711 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087984389 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118368701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164053245 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123316312 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098087535 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122092299 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117742018 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232234041 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215116706 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122214138 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220455073 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184103411 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118274569 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171549674 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120167621 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167117187 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119481385 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121265071 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095566129 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787373124 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122037666 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098660779 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115200976 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193942392 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110523496 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101757243 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124296446 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107156848 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795836417 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125861491 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120382994 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102418138 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118662564 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118295655 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096125884 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114964811 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161448923 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229442322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120066861 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117034752 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103010173 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178353748 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09574948 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125246534 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123117751 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103142824 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120123944 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114784904 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102346438 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189250782 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161618286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218843719 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.593793133 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090642281 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124108596 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226802873 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090700055 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285980776 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119445108 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221996176 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16356523 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11967046 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313783495 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166373949 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196674109 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125774721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172480277 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087065243 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118312949 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168410147 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111718407 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116651674 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162191482 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124015126 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101276953 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95820901 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111188268 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223944454 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10778503 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171429407 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094217466 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121147925 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288438479 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111132984 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106682813 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184718388 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093762389 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12504505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.724660576 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125043404 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122101815 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117265385 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21905983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162741477 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097493805 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119925531 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120243444 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163246459 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205271039 seconds)
  done (took 43.814157293 seconds)
done (took 58.763798582 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273453154 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213784339 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256542726 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167715368 seconds)
  done (took 1.859666602 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.167919659 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146645164 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119391837 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106141754 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14771355 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084800821 seconds)
  done (took 1.646911546 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351714526 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268642057 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237006235 seconds)
  done (took 1.734420681 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286927641 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250236177 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353149098 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412030288 seconds)
  done (took 2.300200952 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207035377 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130568029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110325673 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103827038 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194595335 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247142829 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139826538 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199872519 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120804189 seconds)
  done (took 2.374828753 seconds)
done (took 10.79520538 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Int8, true)...
    done (took 0.252586846 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.222742639 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.263857509 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120248551 seconds)
    (5/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094113899 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.14821713 seconds)
    (7/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.200360658 seconds)
    (8/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.250479029 seconds)
    (9/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.246966461 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.169347942 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114118288 seconds)
    (12/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.233527687 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093884209 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.206350254 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122428859 seconds)
    (16/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.19859018 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093972062 seconds)
    (18/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089858951 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.176190498 seconds)
    (20/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.137070164 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115508741 seconds)
    (22/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099256439 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123719752 seconds)
    (24/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094603454 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091703724 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.217396002 seconds)
    (27/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09838245 seconds)
    (28/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119411637 seconds)
    (29/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095346774 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.223269224 seconds)
    (31/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.200423204 seconds)
    (32/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197352544 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117566537 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.20636657 seconds)
    (35/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167014735 seconds)
    (36/286) benchmarking ("sort", Int8, false)...
    done (took 0.21888894 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.16680042 seconds)
    (38/286) benchmarking ("sort", Float32, true)...
    done (took 0.229803533 seconds)
    (39/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203235503 seconds)
    (40/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152056042 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135642508 seconds)
    (42/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.213073974 seconds)
    (43/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141470413 seconds)
    (44/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.190203408 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099750631 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115483025 seconds)
    (47/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.108630149 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110897755 seconds)
    (49/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.088296605 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094191371 seconds)
    (51/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119994757 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.166376256 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119664933 seconds)
    (54/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166351276 seconds)
    (55/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.244684641 seconds)
    (56/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114191281 seconds)
    (57/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117808089 seconds)
    (58/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130016788 seconds)
    (59/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170378166 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08896142 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098567874 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110470657 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092808363 seconds)
    (64/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.098850606 seconds)
    (65/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.161059736 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135121119 seconds)
    (67/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.184234428 seconds)
    (68/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089904911 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091827209 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068461849 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112785009 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11179175 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.133832591 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13441972 seconds)
    (75/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150332873 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18470452 seconds)
    (77/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.150592769 seconds)
    (78/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098214453 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.109241509 seconds)
    (80/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066813108 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114608701 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101580711 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134437519 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.197113966 seconds)
    (85/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120013116 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095831138 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181180797 seconds)
    (88/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087545911 seconds)
    (89/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122566571 seconds)
    (90/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116038025 seconds)
    (91/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099021657 seconds)
    (92/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118144898 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.114928124 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.18398024 seconds)
    (95/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.152801712 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085728003 seconds)
    (97/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115815515 seconds)
    (98/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.140747854 seconds)
    (99/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.150794467 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.139005584 seconds)
    (101/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162369603 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094372938 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066487577 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183364682 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.18801869 seconds)
    (106/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.150938405 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.175694175 seconds)
    (108/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.088787206 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067630004 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.106374179 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0929601 seconds)
    (112/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173158592 seconds)
    (113/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090068774 seconds)
    (114/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120427965 seconds)
    (115/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067064982 seconds)
    (116/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.148012847 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.179517907 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118075037 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09425595 seconds)
    (120/286) benchmarking ("sort", Float32, false)...
    done (took 0.172987335 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094386734 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108465668 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136415066 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092517589 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116092055 seconds)
    (126/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089268923 seconds)
    (127/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.122605664 seconds)
    (128/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.119199797 seconds)
    (129/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119014551 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094528398 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183113336 seconds)
    (132/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12501141 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119058389 seconds)
    (134/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.160693342 seconds)
    (135/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089646189 seconds)
    (136/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089686007 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108632707 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066419687 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108233902 seconds)
    (140/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128979539 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115700276 seconds)
    (142/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089206264 seconds)
    (143/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114141489 seconds)
    (144/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101177966 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118865741 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095261269 seconds)
    (147/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.088691988 seconds)
    (148/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086264184 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128007974 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086482203 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089372097 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085793701 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170731972 seconds)
    (154/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12690059 seconds)
    (155/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.115288402 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090092849 seconds)
    (157/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095189794 seconds)
    (158/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109450213 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066992319 seconds)
    (160/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.1083935 seconds)
    (161/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067540995 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114145827 seconds)
    (163/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133873188 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163382242 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132410886 seconds)
    (166/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067252761 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108533858 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066170894 seconds)
    (169/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067351674 seconds)
    (170/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.089523022 seconds)
    (171/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087365281 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115468124 seconds)
    (173/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06847089 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115075358 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086562721 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114535168 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.114298341 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125168264 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113113584 seconds)
    (180/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088182905 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123161225 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.071673696 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066078492 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08939443 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068612431 seconds)
    (186/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.148599441 seconds)
    (187/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086532931 seconds)
    (188/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231655691 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.223102273 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109262457 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085870446 seconds)
    (192/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108034499 seconds)
    (193/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066704356 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134604052 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.170317944 seconds)
    (196/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067110634 seconds)
    (197/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137267996 seconds)
    (198/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162518736 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118613881 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094038012 seconds)
    (201/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105631574 seconds)
    (202/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067434844 seconds)
    (203/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145907485 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067314606 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108332033 seconds)
    (206/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089545236 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114739068 seconds)
    (208/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067742961 seconds)
    (209/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066786134 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106702172 seconds)
    (211/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068934084 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090131098 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087722976 seconds)
    (214/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090141241 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102987789 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.410968141 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086045317 seconds)
    (218/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144198067 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067239066 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113211142 seconds)
    (221/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.08960016 seconds)
    (222/286) benchmarking ("sort", BigInt, false)...
    done (took 0.241531326 seconds)
    (223/286) benchmarking ("sort", Float64, true)...
    done (took 0.231222121 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067705355 seconds)
    (225/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077628398 seconds)
    (226/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.09337552 seconds)
    (227/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067529041 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094235665 seconds)
    (229/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116583166 seconds)
    (230/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066762829 seconds)
    (231/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08924036 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166541257 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066531816 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087118417 seconds)
    (235/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111373563 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08690789 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108457634 seconds)
    (238/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095167166 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107630273 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067364581 seconds)
    (241/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.097178574 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078884743 seconds)
    (243/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067308916 seconds)
    (244/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099793453 seconds)
    (245/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109627886 seconds)
    (246/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089480997 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08597956 seconds)
    (248/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.088984236 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09284722 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066776516 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117176924 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085793663 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123794504 seconds)
    (254/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110411991 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 0.149042435 seconds)
    (256/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118589648 seconds)
    (257/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068746539 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089751563 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.132955323 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108975528 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067297517 seconds)
    (262/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.0889844 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094085011 seconds)
    (264/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112102519 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084870137 seconds)
    (266/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235219654 seconds)
    (267/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116801796 seconds)
    (268/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068142303 seconds)
    (269/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067578412 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108310016 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091572541 seconds)
    (272/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100539785 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095076421 seconds)
    (274/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136232749 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086036951 seconds)
    (276/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090433809 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179559215 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093799574 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122495428 seconds)
    (280/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08580089 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115742877 seconds)
    (282/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093180439 seconds)
    (283/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.08903539 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085918763 seconds)
    (285/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109198049 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08705947 seconds)
  done (took 35.82348609 seconds)
done (took 36.702102742 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099641768 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146825665 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095867117 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134327286 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122609664 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091591238 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116856709 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097285129 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122888321 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123670396 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098234136 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092332271 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096337124 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119530776 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095743922 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137738223 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121629587 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093254649 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117299345 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086012479 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11682997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086215873 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110437337 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069859248 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120127451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093684501 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115341096 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119092925 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085992958 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108997804 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091752352 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115641919 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086403079 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122256657 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093677961 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116686498 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096372115 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118525487 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110414225 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086537412 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117090734 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086228237 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115844881 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094158455 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114444552 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091882933 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116760138 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099406121 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137480524 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11400433 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09408247 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120371605 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09560126 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116985806 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090822998 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118411138 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090958438 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13839142 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11818156 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091426714 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117556128 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09447624 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114826699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094146992 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118153613 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11973094 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098124632 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114392268 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096885962 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114669815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086284784 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117616267 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090874712 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.114347148 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09520872 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119653753 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107829588 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092636526 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116186326 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091982561 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107805258 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088695904 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110260592 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092741802 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111596617 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069295672 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113673205 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092500003 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108030114 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095451141 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115152328 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093789683 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111135266 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098508718 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109537533 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091628182 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109953201 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086673854 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112093954 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090808085 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108982395 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089674184 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118525105 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111314285 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092949018 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121911884 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086294077 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115700195 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086083727 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109372577 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100951861 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119755802 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087166739 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115450846 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085653746 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117670339 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086396256 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109810693 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109964284 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086614074 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116197901 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087661996 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112660132 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093323906 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124160311 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086022975 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112674197 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090184802 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109702141 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091953098 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1098673 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087205572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111497758 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077313719 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112922455 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087152965 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117024793 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089506129 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117707031 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088159146 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118594874 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091122263 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115504741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115040512 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087079587 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073951166 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115384942 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08938948 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11232422 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086776717 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112364865 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086359459 seconds)
done (took 16.78192277 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088331809 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181599766 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149258353 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141735425 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107376377 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110674937 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120311053 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118271174 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112428029 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141411958 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109979453 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13005869 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145775661 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086487045 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111050292 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091354003 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111742893 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101963478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144671843 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131508003 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162413931 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086881525 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.1447651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133653943 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119630311 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104934807 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110891064 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091767991 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113134551 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112440376 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1318887 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113819577 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087963 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132190448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103812216 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118554949 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086762099 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118541129 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087369532 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111250601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139422782 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13311166 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092064344 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115927122 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09129508 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112736701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088649635 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120099044 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097270864 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114792405 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125364829 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154664328 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09023288 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120608569 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086715198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121620311 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12065645 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089434577 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110949294 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090692093 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110225734 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090831122 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12562701 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139801792 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092048635 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120450168 seconds)
  done (took 8.539649311 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104276358 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137805462 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105725157 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129568679 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109921399 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087702169 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111210259 seconds)
  done (took 1.730109493 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087707092 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133232586 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111663349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134914582 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130991301 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112608497 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122110782 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08880588 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131080297 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08982585 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13312457 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149091022 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090169886 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119888041 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136627428 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089167208 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136955631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089021119 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116314505 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110912241 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115885113 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134473343 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091660651 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112758347 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10358658 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113487637 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161370958 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094903975 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113948606 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091831665 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110408205 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15028229 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102650565 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123455286 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087739659 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129150253 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127270789 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087005023 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125261624 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094106225 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127040767 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089540769 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114554984 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086750617 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116908294 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098806909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117176306 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.130398994 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092304682 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131863697 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089429877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126706683 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09006072 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116092852 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089895079 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118296437 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097712376 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114350042 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132582211 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090042397 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129680623 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105136287 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126626716 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129929711 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092026254 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126455651 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103541069 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115694467 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08989364 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116476738 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104714707 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110967037 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114985145 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099827889 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115511273 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112580176 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135937238 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09065289 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124014928 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11272388 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089513318 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112757893 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11185864 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116948782 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08903993 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116455684 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092342149 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.110940774 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087992875 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116641799 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087323624 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11488549 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09181937 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113508565 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091101759 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129509806 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113661974 seconds)
  done (took 11.749359876 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090104675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113315945 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092496042 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114132882 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090881895 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11402966 seconds)
  done (took 1.572964422 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116712727 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116095031 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10333139 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119503678 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155223642 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103050132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128514552 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122326409 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108111354 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126236468 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127701135 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104798293 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135135252 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119824778 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104173283 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119607816 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127729002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100383517 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12550893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096331772 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134893836 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120101275 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0967146 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130472143 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116697902 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095691312 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124643944 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104251977 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126104813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122050005 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095686959 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116903141 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096012757 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121762287 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128267114 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095095912 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119266818 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117328261 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100185116 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116337249 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105111838 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120340433 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125252722 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0945026 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122828136 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118972955 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095059266 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124445899 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104107985 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118491567 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117854213 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095743153 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118824935 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094513091 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121467066 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124854281 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094355671 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128826308 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12046147 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096356581 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117162119 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092481548 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123386437 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11690629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104326897 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118702795 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120480242 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096045727 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120880916 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09602023 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117810155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093791558 seconds)
  done (took 9.161760714 seconds)
done (took 33.700089432 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673716544 seconds)
  done (took 1.63364857 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.837107557 seconds)
  done (took 1.796956876 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.805424719 seconds)
  done (took 16.796040479 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.487569971 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.567415113 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.971559442 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176274217 seconds)
  done (took 3.162436838 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.932930371 seconds)
  done (took 1.913214817 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279758187 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232244661 seconds)
  done (took 1.478531141 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.762186129 seconds)
  done (took 1.738574486 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.412603196 seconds)
  done (took 2.376785068 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321263813 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182384753 seconds)
  done (took 1.478737201 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.543552181 seconds)
  done (took 1.513371648 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.655977706 seconds)
  done (took 10.632582618 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263640689 seconds)
  done (took 1.240410721 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299804127 seconds)
  done (took 1.26784478 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.280035491 seconds)
  done (took 4.25708863 seconds)
done (took 52.254979081 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098941807 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125452095 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102545629 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122374113 seconds)
  done (took 1.420607804 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100429686 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119942806 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101065035 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119091665 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124604094 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095546465 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122077598 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100819613 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11883024 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096896652 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119272391 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119089583 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098834036 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120357475 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093644679 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121898268 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123070491 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096027878 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123101141 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096077981 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117138496 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097445252 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122454952 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120059315 seconds)
  done (took 3.643643942 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099506698 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117618932 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096136341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117023956 seconds)
  done (took 1.406366003 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099547851 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129256233 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104885626 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124393899 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129113386 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10503333 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11641281 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092276093 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117403203 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099737377 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.113970216 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.137362441 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105775139 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123231054 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101495174 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112358558 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090975474 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129165842 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122709493 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100457213 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116593199 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099030353 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.113606605 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10857758 seconds)
  done (took 3.670634976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169396103 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126929116 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136772101 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095842456 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159043259 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.13850248 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087969323 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139840158 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087179874 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130144265 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116697787 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132898882 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127717895 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087693751 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112170963 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087814755 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127760725 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127884839 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090334774 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126376992 seconds)
  done (took 3.398517624 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097442085 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115747844 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088567895 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115075944 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100332704 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119753356 seconds)
  done (took 1.62401792 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090419225 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11267214 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089620202 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112749363 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093947386 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113171075 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088648637 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112971447 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089732278 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113636278 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090061465 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111728002 seconds)
  done (took 2.206396691 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.497643363 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117612463 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118893004 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088662553 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120034108 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089931788 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128006583 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092754586 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139769225 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088817444 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114793868 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092828707 seconds)
  done (took 2.677070663 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236072259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12375626 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280556748 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361773464 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153781508 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163450513 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274844392 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159741203 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195305815 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147858077 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227831842 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194691547 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150647182 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189165851 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136353894 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143686941 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187610993 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248351203 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150629066 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209435376 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203543004 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165320587 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179659941 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150384613 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111314844 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190155819 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094531544 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128313348 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22984725 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178007683 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187681854 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159604757 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145407221 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23325717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244933051 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19363141 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274773111 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13252788 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162952514 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142129142 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261791258 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137097654 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228615228 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154405887 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103994946 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217446984 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163659962 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175378351 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142974209 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136619095 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19629746 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240388608 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192379199 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136745956 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295286713 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147707324 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157209055 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188151389 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248062833 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224229318 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188433601 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119995236 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18574595 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190254167 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208685355 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150030015 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180741444 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145745977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181498651 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188923805 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164080551 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201712135 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178814875 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136630759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168918523 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170991706 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173832643 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257471219 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183866094 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121110142 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168333766 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147849956 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129641023 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168057014 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124077177 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214079728 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141038336 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162272168 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206783185 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156875642 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159003746 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217876665 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182266727 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146598026 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083651372 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150941519 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153787178 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175440827 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137903665 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156968425 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154650911 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128057954 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169025276 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097036869 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207689715 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091505693 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171577868 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207515866 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099488068 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159834543 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151282203 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148315608 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175873883 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194336661 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138646459 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13151862 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208484675 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1767435 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139731548 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175133734 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224254171 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117496876 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146927631 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224149341 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215268954 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137880791 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22555037 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151752563 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107461566 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131504282 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180614485 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154268382 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160358802 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130451764 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181319035 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230005806 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098825549 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137538408 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195131713 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132277634 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13082673 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151944992 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14550357 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110389233 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141226047 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143133085 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174116613 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175974008 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153449203 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164743732 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148226238 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246437877 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138652069 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148587768 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122320099 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119137588 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190680693 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223476976 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102938913 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22925484 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170175203 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21924589 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167737301 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106432036 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176418853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129514849 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092591026 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216201487 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166795034 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160511929 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195225728 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218444688 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178294558 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.206627244 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16397216 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173783081 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163253974 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154030467 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11053183 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158963536 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156789633 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121708382 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137085389 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107078177 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147882854 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140675703 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130606005 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195589241 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168751303 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213052028 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156529172 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146309566 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179291989 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101521857 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199204356 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177094138 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143029998 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196948244 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191502897 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209861753 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116720575 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22540806 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093326823 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123681427 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140484504 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167783384 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13145874 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107299551 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160505735 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179723438 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204299637 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171513516 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203461761 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197750596 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189810221 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094677565 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167207092 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18206451 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200092131 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.152245802 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137849678 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150997298 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176528231 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152527069 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252360133 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166275914 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173754478 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229904278 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123218335 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130529928 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14802694 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175760855 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151481228 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174046205 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145718975 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137812253 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158984953 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102512907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18298969 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183793807 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161967339 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184772975 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148728912 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208995108 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100820461 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159575016 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157673516 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164243729 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107114858 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174201303 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200746151 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144907315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164850938 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212325374 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105203081 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304569121 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231595281 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192679254 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135901184 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153315408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160045387 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161809907 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170102615 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177473711 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156839029 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185821397 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157713357 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134601555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136505098 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121889348 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150728337 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130964857 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146873731 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175847219 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136008545 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186554056 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15257641 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157505495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17052871 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148724328 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141385467 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122543639 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242211316 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181167172 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237471345 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149339586 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177113504 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203890662 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124885984 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129018793 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105452126 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176381905 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135031583 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187368647 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.210895401 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196276727 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204132664 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176605573 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111679652 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118913399 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156142985 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168447934 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224707544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121909311 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144402379 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228173158 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10994456 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131667387 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163927017 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284588047 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143352685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192953857 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106777027 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27475156 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124468194 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105200905 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161309457 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232208118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133824442 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.148770072 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168521138 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160688959 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161752126 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147694679 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215746398 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210323488 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222393308 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181805061 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10381355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15456131 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198395396 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190617612 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154222745 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11054643 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230198597 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192399912 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219788067 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113069585 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165924773 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192656787 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129732911 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210279111 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132706603 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205011377 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133551223 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189636527 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151364073 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137403818 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174859255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.210425916 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113126048 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211228973 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182161872 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132966775 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104602866 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163248414 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202499009 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151426303 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099867257 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179117322 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123677406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189201605 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257725147 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133036687 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153815901 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144477192 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108610848 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152263245 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155974289 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136919015 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159683602 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201305479 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133767183 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189136844 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224656183 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169734454 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171431769 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143403923 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690305058 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128883473 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193749903 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145132581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204232659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149310316 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17126998 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158347418 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167653252 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217606995 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157391567 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229166309 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189925573 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176480494 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130934439 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1560399 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153116747 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141568644 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151301264 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165298839 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158521666 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.116913313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203766547 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163312086 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105478544 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138776354 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224242418 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120494069 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210096004 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177443864 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109943342 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171940498 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212551287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131705367 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178413163 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231719849 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114118048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147387336 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132450492 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14861488 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257162041 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09809921 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213573849 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183161398 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157597828 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167127564 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144556799 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190452134 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155326523 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209172348 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114678017 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155900891 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156029612 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136529068 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128411522 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153579653 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164786546 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121359668 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156983842 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163362143 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191427341 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122533857 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141822346 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278373681 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175865677 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240785304 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106926657 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134272475 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161035839 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148774416 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174408068 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177621426 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13404847 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132051537 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108738295 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.153338305 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111576589 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153974269 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187723564 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161566247 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230309608 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134156521 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274630842 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11252503 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153723268 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087330753 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129696697 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14957144 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144360218 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152894428 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189526916 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257713569 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144697096 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105367957 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145239785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125251365 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132813483 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16049669 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1632221 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178429694 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141427058 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081071319 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154431781 seconds)
  done (took 81.400758048 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169942612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131229581 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145155988 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199467789 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173893644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267814476 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210456824 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251786323 seconds)
  done (took 2.618788261 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092772988 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142902033 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154104152 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1309393 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090903682 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117187062 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339034602 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.129939329 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114996303 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121347397 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.168691999 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093726103 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.539160073 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090290332 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.116817511 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105793198 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091834345 seconds)
  done (took 3.700129745 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.0142708 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.473709712 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.619687438 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.18759413 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156010181 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.115682807 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.661240076 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094381877 seconds)
  done (took 11.391632939 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115156718 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134589252 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122661435 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150589765 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1386936 seconds)
  done (took 1.73882876 seconds)
done (took 121.870195742 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097669256 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12566949 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097230894 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127473757 seconds)
  done (took 1.504445495 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093969986 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070517663 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098768743 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074124083 seconds)
  done (took 1.404168937 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18563962 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.164473615 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.375347526 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071230964 seconds)
  done (took 1.547257893 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113540869 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130724908 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104059281 seconds)
  done (took 1.427683649 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106467118 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127453253 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102359658 seconds)
  done (took 1.412789559 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105332456 seconds)
  done (took 1.18063639 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10679426 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135016982 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107427549 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133902647 seconds)
  done (took 1.559022755 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097844859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124808593 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108274372 seconds)
  done (took 1.405648485 seconds)
done (took 12.859651318 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102833323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41409692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.409678552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110079574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718847428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380203063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.018745415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142815827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162467697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093597264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137113443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671830237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044151174 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.370030736 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004850202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.365164063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699601727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118947757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091268786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11947444 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001971945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091881041 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119005863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092658336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709237859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396557859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120467658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.364436829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091927265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124152517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381652601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121445493 seconds)
  done (took 16.854080769 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095329353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170442481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120896071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120844353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093920767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121920329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092877801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176500033 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119999427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110161781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119544547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122371324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094469219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140519638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092643134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123284641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091735153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119476438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093079898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137529764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117890068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094061369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11845099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0933288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133342165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093485362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118941957 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118052455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098429753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124420551 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093510475 seconds)
  done (took 4.733790667 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13978239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180313732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126706079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126096018 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.165753714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121582647 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195127091 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117132388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180490613 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121349364 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137343195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091965778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154816877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119740601 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113684649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119564345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095866446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120159062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092177061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12161962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1375756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092419532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119609199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092745728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120173677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107408905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121887384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118021544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093367266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124149321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099096375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121592919 seconds)
  done (took 5.070488364 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097338292 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12348866 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108977898 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135208403 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09422454 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123903606 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096736996 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122109976 seconds)
  done (took 1.983919188 seconds)
done (took 29.718749161 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110990457 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123818268 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10650368 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131258048 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101500392 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.129002774 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091108992 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13070883 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131617222 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101494287 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134524962 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091422856 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120272002 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09154372 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132429753 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096615589 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130595305 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101257672 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131992145 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129196712 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094701212 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13049887 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101809015 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131602199 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103359225 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131227427 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134113083 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099132888 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119972689 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094326943 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122646182 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102540294 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121816461 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104045062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124548904 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096905116 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120418693 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094009244 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130074333 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130821985 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09878102 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131516139 seconds)
  done (took 5.911448579 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10647742 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.136836642 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104317533 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080322766 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114327122 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079553639 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.134749843 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078217547 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108383707 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107169571 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073326326 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.10384858 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077542025 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099596278 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07682296 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074339888 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106117533 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075323096 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07578586 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103535959 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079606179 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072698195 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106683325 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078156436 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074700835 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107907704 seconds)
  done (took 3.521118862 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101165803 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132367125 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1132595 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182521719 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158346922 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099897626 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13007947 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137061375 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108309359 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118569152 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095998965 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147376278 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10949565 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127499887 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091375434 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134620312 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132721596 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094616665 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125803075 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111322124 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137436983 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102810265 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138438956 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129940589 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092013469 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120457426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096381785 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.131965517 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097374642 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129736032 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095532367 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122358322 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12006491 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104380545 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123512855 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093839732 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139733167 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102438794 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128254793 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118989703 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100052661 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119627018 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113958282 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159499888 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091421197 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126835295 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122200653 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103541285 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119383836 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110917802 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128363036 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09113083 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123606654 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091476705 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120106886 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106342548 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121369413 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094403425 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128586216 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123797288 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105485087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122084259 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108086473 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120910831 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099444352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119144658 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092116944 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118420011 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14094708 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094349573 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158817339 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09286491 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122118179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.1008797 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128104481 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126057307 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094255092 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135153291 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102372039 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12390917 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102063923 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123749614 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095314219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139088994 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123444467 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095578404 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121239791 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099301411 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121052991 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093452619 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133906328 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091940195 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12308795 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109642995 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120346524 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119736432 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099657006 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123718094 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091257647 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13330576 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098098031 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120997986 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129760818 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093639979 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122257177 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103475666 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123604487 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091217482 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124561439 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098305987 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120314091 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093384283 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123173613 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093443841 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129553355 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125573525 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097445336 seconds)
  done (took 14.626032669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.224670073 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212782469 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.202613272 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.287534048 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133182877 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113632463 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.207652486 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153158096 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121574492 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157593228 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169724662 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179520356 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139239459 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.208345912 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169148464 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093377791 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140622933 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135524471 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.239174045 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255266275 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14226482 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102376216 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158621371 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157853077 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134939482 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.129934073 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10950791 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.13260937 seconds)
  done (took 5.713654991 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108038577 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153419025 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097941212 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143062944 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1464397 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091891376 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125681792 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09436216 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134249735 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133064718 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09289302 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127115849 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099742836 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130439557 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120757603 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102914933 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128868248 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094384125 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124609796 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097676383 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130877648 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101591932 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125630263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119593193 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103400475 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120185063 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08650074 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139690447 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120883271 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115137981 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119461065 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101346684 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134781461 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093959041 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121280776 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094878795 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122918027 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094331305 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123082317 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091462103 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120324147 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077017014 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120753033 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133981875 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099502047 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07933261 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127578724 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125355406 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094090202 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118266976 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095805621 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123046919 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096044711 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127904582 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096095777 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122043293 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096709266 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114066115 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099125339 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123280417 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083713758 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119220629 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097829862 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115158059 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101358857 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126070335 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091062224 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123445709 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096611312 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12698996 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094452511 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127734053 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090589123 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123895008 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094904175 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126421247 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123274039 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092851698 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120117173 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093261826 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075651691 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122220226 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073650626 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123864027 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091114808 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120679019 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096179953 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127692861 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136574609 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095241456 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130229457 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09362425 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12065758 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095937779 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111319962 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096012697 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137594424 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139281422 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093455965 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119650744 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106906134 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124366272 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092106739 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10415978 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102855845 seconds)
  done (took 12.805894353 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129782397 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152071406 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122771081 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111970745 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154714743 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155223955 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100680701 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128463227 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095748292 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140377238 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093275349 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130221714 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093570206 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135840732 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154729261 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102803886 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123187891 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107800424 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126626807 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167588872 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111610411 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.1404906 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110319669 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121909628 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126768196 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111072403 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158775481 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107410585 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135634412 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139529832 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107023145 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158979567 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140546251 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097862128 seconds)
  done (took 5.410769917 seconds)
done (took 49.0712362 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.198724352 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.38872767 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.173029133 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.990820156 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.207358615 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210733483 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.190709885 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.179101082 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.416329999 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.176586552 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.400226658 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.588020566 seconds)
done (took 59.221807166 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.256065218 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332870946 seconds)
    (2/2) benchmarking "String"...
    done (took 1.510806504 seconds)
  done (took 3.944900923 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.810669515 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.042191415 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.429146948 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.172108763 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.188544653 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.476154786 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.715636518 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.433636135 seconds)
  done (took 27.557540652 seconds)
done (took 41.670324291 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.164303678 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.189288746 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.208415839 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.152490776 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.273163887 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.195391249 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.567520887 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.191927699 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.190173538 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.168321547 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.173717662 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.173968648 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.181638623 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.575620958 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.177913114 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.179307967 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.189462743 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.679978813 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.528607004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.189823094 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.199168122 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.23551399 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.178780542 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.185154301 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.192615182 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.174909177 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.186574388 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.184826173 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.165468158 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.175399864 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.265371797 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.69224423 seconds)
  done (took 189.293420302 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.174009769 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.298908682 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.366047387 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.216157267 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.794426824 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.370182081 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.316612954 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.845822819 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.188266206 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.175495123 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.490245178 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.178340096 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.541798285 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.145096256 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.204330968 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.205442512 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.363624571 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512042439 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208565797 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.338357599 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.188906628 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.535877156 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.463196155 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.41192072 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219219547 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.255669804 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218382029 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.184358768 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.376378766 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.310178317 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.201155275 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.177853829 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.70050268 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.030557181 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.184732761 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.19284349 seconds)
  done (took 149.687066535 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.173872114 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.173403593 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.17348189 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.202227885 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.173116228 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.65658495 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.656415217 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.670231914 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.385557211 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.262105464 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.359026462 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.173454576 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26405494 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.189449532 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.176041843 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.191165521 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.216188075 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179155919 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.174715052 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.65747843 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.187321597 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.370056546 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.340637768 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189377194 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.202973305 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.562663355 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.175596811 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.203155552 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.491617587 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.218150483 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.175406468 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.466392554 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.227049551 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286297839 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.17686475 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204062205 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.176544349 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.447230738 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.176283503 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.176075507 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.176711843 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.178242174 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.767551299 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.180120891 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.658776636 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.176122237 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.044911393 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.176323778 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.17638674 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.558770879 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.673955894 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.194573026 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.176780049 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.179530611 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.177354032 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179404583 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.205398382 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.555906803 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.258106395 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.178664478 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.168273653 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.192885378 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.165450661 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.362327894 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148213147 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.551242812 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.201731853 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.251578048 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.626392473 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.142870572 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235424207 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256693133 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.140112352 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.140682503 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.140150205 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.140354773 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.24777604 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.141092139 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.49075536 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301244863 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.154765036 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.233175645 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.236919581 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.140402425 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457867497 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.144589978 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.140597825 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.809504365 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232408505 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.140641161 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.142416362 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.139393866 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.489967665 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.622170024 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.29206413 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.142724294 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.617210342 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.141994964 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.13662854 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.503356103 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.61129587 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.136900119 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.725901915 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.141865598 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244085327 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.296411245 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.147785024 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.133876326 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.222003724 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.139034654 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.190088284 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.137832748 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.133502049 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.528624937 seconds)
  done (took 358.298026367 seconds)
done (took 698.385655717 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.710393929 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.715249327 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.809483049 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.703865045 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.675277894 seconds)
  done (took 9.678079357 seconds)
done (took 10.740652328 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.296811796 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.295759141 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.181310593 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.297086064 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.157827802 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.312831281 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.275992564 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.149751401 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.221142763 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.199274677 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.222984859 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.176665237 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.160246088 seconds)
  done (took 17.007839391 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.425594256 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.455492575 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196407999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428525526 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.172483034 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.427375674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.316602505 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334282956 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.336031534 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.162644304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145724204 seconds)
  done (took 15.460601438 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428855895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.430770707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.197928964 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428227216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.173944883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453340193 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.327430926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.345288487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337368233 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164080515 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145990581 seconds)
  done (took 15.494251136 seconds)
done (took 49.025209176 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.142018682 seconds)
  done (took 2.202457018 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.173206071 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.331313986 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.157973243 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.147622537 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.142378342 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.142979608 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.147751858 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.142825337 seconds)
  done (took 10.447632293 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.141267978 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.141459327 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.1417759 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.138897322 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.140885832 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.139354425 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.139243011 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.139354926 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.138670317 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.1399086 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.139981022 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.141199448 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.139408058 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.141360352 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.142356864 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.14212065 seconds)
  done (took 19.309977436 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.14162328 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.139455965 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.140415532 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.140445633 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.139927616 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.140430887 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.141363202 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.139955996 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.139560227 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.140432122 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.1407483 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.140723093 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.14024835 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.140739399 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.140421525 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.141264702 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.14069204 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.140344264 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.14486221 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.140555928 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.142139051 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.140949196 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.141124111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.141023254 seconds)
  done (took 28.443747229 seconds)
done (took 61.465523211 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.71251166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.595634942 seconds)
  done (took 6.371331712 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.143595344 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.143036143 seconds)
  done (took 3.352274674 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.143121995 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.142966219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.144187295 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.142995631 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.14271574 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.143680542 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.144025049 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.14404262 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.144642391 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.143232542 seconds)
  done (took 12.500081059 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.144165516 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.143261852 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.141315082 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.144801406 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.144249222 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.141692544 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.143652742 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.143822424 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.14360144 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.142166272 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.144637215 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.141770363 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.144191717 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.142139042 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.144404264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.141979706 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.143341997 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.141834244 seconds)
  done (took 21.641649333 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.144884227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.144388948 seconds)
  done (took 3.354743928 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.142815111 seconds)
    (2/7) benchmarking "second"...
    done (took 1.142563017 seconds)
    (3/7) benchmarking "month"...
    done (took 1.142271777 seconds)
    (4/7) benchmarking "year"...
    done (took 1.143008143 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.142142201 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.142798274 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.142483563 seconds)
  done (took 9.063071933 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.14484439 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.323199003 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.417486434 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.729066559 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.145392216 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.149526958 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.022327787 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.148828879 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.151015968 seconds)
  done (took 13.297024628 seconds)
done (took 70.644491621 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.13051063 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.152064153 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.27228205 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.154008952 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.158381399 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.483962647 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.174144307 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.261013782 seconds)
done (took 36.852742097 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.148916423 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.122494321 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.750130551 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.10916323 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.132534975 seconds)
  done (took 18.17286082 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.059189047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.462438129 seconds)
  done (took 4.574065346 seconds)
done (took 29.958790072 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.13297655 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.132118841 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.129109228 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.13083218 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.128505715 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.129185025 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.128742706 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.132247824 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.13156932 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.132130881 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.132389554 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.131896985 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1288697 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.12988396 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.131645053 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.131425232 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.131726709 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.129494297 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.129802193 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.130190092 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.131941188 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.129859847 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.130483574 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.129547664 seconds)
  done (took 28.189535921 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.133209985 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.131535895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.133158934 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.133021827 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.130182349 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.133443791 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.13279725 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.130342437 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.132879229 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.133143026 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.130469834 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.131089053 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.133191152 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.130441023 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133114554 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.131965964 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.134179361 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.130502248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.133875206 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.131604672 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.133349679 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130830346 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.13181089 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.133668981 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.132472649 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.131195716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.134288933 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.132736433 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.134000455 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.131715602 seconds)
  done (took 35.02467543 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.138468817 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.139646292 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.134336562 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.134074725 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.134901399 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.134189568 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.13426221 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.134147365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.134343445 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.13457576 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.133866865 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.135199812 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.134399026 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.134704804 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.134899604 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.134894827 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.135417357 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.135283933 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.135056255 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.135611379 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.134517469 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.135695355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.135556887 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.13523538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.135194414 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.135428176 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.13546823 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.135071053 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.135695672 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.13541804 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.135974119 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.136815915 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.136354682 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.135715463 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.135388779 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.136315387 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.140421823 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.141534032 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.135870364 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.136703696 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.136356278 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.136506647 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.136456744 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.136535158 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.135746085 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.135651469 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.136443119 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.136420041 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.137776445 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.136958786 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.136714342 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.136889206 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.136990284 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.137896101 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.137153927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.136815878 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.13653597 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.137537064 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.13708354 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.137356582 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.136862177 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.138386182 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.137455097 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.13730326 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.137745565 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.138345039 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.137966115 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.137730706 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.13706372 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.138293759 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.137490873 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.138026037 seconds)
  done (took 82.872607908 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.139491006 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.13502186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.135544164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.135833346 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.135365927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.138824519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.13606697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.138729438 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137046256 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.138782558 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139593223 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.137328548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137092564 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.13950371 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138993847 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.137291855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.139679459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.137170314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.139157059 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.140454355 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139816065 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.136683035 seconds)
  done (took 26.093103253 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139310231 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.142180098 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.137249816 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.140563917 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.137077324 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.139547456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.1394747 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.141449862 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140162857 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.137532023 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137529611 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14027221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.137086807 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137905976 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137914749 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.139205721 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140239804 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.13884005 seconds)
  done (took 21.56376762 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.137182528 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.138474338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.14087438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.138188696 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.138136782 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.140653877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.137644066 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.141299167 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.141083093 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.138975719 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.140325455 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141722851 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.142360988 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139603917 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141124534 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.139384761 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.141393221 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138694189 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141595988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.13925716 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.139417214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.142171855 seconds)
  done (took 26.140689812 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142635268 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.142428526 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.139322618 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.13991881 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.139096724 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.141926922 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.141977661 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.140029741 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.142971164 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.1428581 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.140076047 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.142184794 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.140997501 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.140524634 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.140901172 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140629153 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.142036728 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.140996051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142318987 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.139737885 seconds)
  done (took 23.886241711 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.14409485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144505653 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.144670782 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144446974 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.143652892 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.144004602 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.145038392 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.145820978 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.14493745 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.14543827 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.14474735 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.144355494 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.145401217 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.145256701 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.145219861 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.145142699 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.145012213 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.144439552 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.145679565 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.145730891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.145160656 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.145009771 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.145977239 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.145373834 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.146394459 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.146166275 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.145432456 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.145952242 seconds)
  done (took 33.126724727 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145751893 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.145233787 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.143511462 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.143896273 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.14328347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.142660917 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.142787382 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.143412836 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.147080037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.143190508 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.145851356 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.146508972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.145517122 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.145949372 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.146621769 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.146178412 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146224245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.144023732 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14322308 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143485591 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.145881052 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146698624 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.146918638 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.143631267 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144401935 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.14738026 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144476036 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.144757193 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146586923 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143819447 seconds)
  done (took 35.415085355 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.165771911 seconds)
    (2/2) benchmarking "in"...
    done (took 1.165109959 seconds)
  done (took 3.396947052 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.144416149 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147071081 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.146835804 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.145198036 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.144679902 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.14757213 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.147639807 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145016558 seconds)
  done (took 10.235479719 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.147056983 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.1478373 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.147448369 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.147862821 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.147077394 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.147648625 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.154263434 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.165110011 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.148355467 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.148265948 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.152905139 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.153906132 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.15078219 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.147446366 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.148205357 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.149502219 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.147661791 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.148932116 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.148597352 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.149462488 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.149162112 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.150932368 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.150813122 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.145913106 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.150669849 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.158348274 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.169359598 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.14948809 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.149463343 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.152348331 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.149612959 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.146760557 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.149818249 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.149325049 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.149996162 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.149789521 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.158001042 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166811207 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.156362919 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.16688912 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.151209208 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.147676506 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.151009183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.151769461 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.152152323 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.151191681 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.15124224 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.148429199 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.149632235 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.153083598 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.154722185 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.151367706 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.148431715 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.153965239 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.152539595 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.156907206 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.168581506 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.153657039 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.158033004 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.160675355 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.179982946 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.172496329 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.15322397 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.151285644 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.16025283 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.170944956 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16031862 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.166257742 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.149565934 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.152400391 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.159084029 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180930814 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.17369488 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.151690192 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.152112003 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.152800848 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.152439934 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.153240831 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.159885407 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.172512241 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.153012204 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.153084346 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.161906941 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173142522 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.153300961 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.153024145 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.153497491 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.154180133 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.153774467 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.162208341 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.169531288 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.15446113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.152412698 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.152849113 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.154195358 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.154166147 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.153035252 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.154424024 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.151751419 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.154176336 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154104733 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.15671669 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.161021142 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.154209371 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.15441136 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.16008065 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.171590881 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154853805 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.160735427 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.155217033 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.154956764 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.15502916 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.159933179 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.152786968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.157264977 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.161613201 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.155433399 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.156756077 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.155314788 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.156125103 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.163928386 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.176797675 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.156116505 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.155900618 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.160208018 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.164577764 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156300028 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.157974286 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.15645347 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.154090074 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.153862774 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.157157747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.156625532 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.157206092 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.156176117 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.157175049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.153872368 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.157144685 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.15662806 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.157607039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.156986382 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.157541798 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.157566586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.158408639 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.156076179 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.158905158 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.162652561 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.173875436 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.158049264 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.157090005 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.154868013 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.158045389 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.157592692 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.157682119 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.156856399 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158128892 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.15791283 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.157265578 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.158273878 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.157751936 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.15866573 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.158323275 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161754286 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.159301114 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.161583959 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.157147952 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.155376739 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.158515373 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.158391672 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.158128211 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.159069394 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.157450777 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.161038675 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.165453922 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.158625062 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.159064659 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.16180242 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.158857785 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.159193699 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.159629282 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.161094003 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.165346847 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.160844834 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.165756003 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.177342673 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.160260654 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.160948482 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.161594924 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.159532838 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160123009 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.16237806 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.165393519 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.170792319 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181712282 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.159914651 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.163302155 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.160821329 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.164458513 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.164299784 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.160308998 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.161763702 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16171199 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.160772325 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.161115288 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.161691656 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.161467158 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.160149148 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.162213166 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.161307875 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.161607733 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.161973232 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.162155923 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.162558123 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.159068153 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.162257019 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.162045116 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.161611373 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.158660456 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.160409215 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.161514332 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.161864369 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.162345852 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.167965245 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.159336255 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.16275789 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162796753 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.162232016 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.160817874 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.162878816 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164783279 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.162443384 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169614868 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.179130829 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.162904444 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.168454045 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.178863749 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.161888016 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.165618291 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.163307419 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.160472535 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.164778303 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.16953485 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.163283476 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.163518381 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.163460769 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.163226722 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165383846 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.168353469 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.178222006 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.162833609 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.164201198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.164419266 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.161473783 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.164623625 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.164635994 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.164119222 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.165840113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.164745572 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.164740348 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164410392 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.164553699 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.164742149 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.164823562 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.166825971 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.170133766 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.168345024 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.164542366 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.166559217 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.165286253 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.167576473 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.164728597 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.165330772 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.164595348 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175650499 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.187410681 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.171663444 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.183494693 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.166169931 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171833995 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.182891859 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.167756123 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166063264 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.166126661 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.165664884 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.165506155 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.163802676 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.165846963 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.166530089 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166952055 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.166395916 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.170070679 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.166997577 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.16590154 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.166704431 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.167675534 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.167409381 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.167181997 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.167161459 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.168079829 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.168871684 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.166107357 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.167674394 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173242702 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.184192953 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.168429305 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.167945723 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.167052988 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.167021279 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.169020138 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.16793115 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.170108479 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.174342411 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.169572569 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.174934801 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.168269833 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.176222802 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.168058795 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.170608906 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.174312272 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.165398357 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.167396886 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.168182481 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.16940571 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175877117 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.186158694 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.168578443 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.172488978 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.168980508 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.16829035 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.168742708 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.168596925 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168616191 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.16931113 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176843438 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.18637546 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.172498149 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170390412 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.166785206 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.169683943 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.16856238 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.168590664 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.17219281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.169706856 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.170374778 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.169779215 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.168747337 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.170219316 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.170741204 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.170079704 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.168063183 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.171108702 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176693176 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.188218489 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.174001435 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.170905664 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.176802221 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18809405 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176833096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.187754436 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.170201695 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.17140038 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.169977157 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.172127537 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.171004922 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.171969374 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.170486769 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.172354217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.174390665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.171192537 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.173399426 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.171966222 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.17168739 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.171896377 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180006978 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.192256695 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.172341683 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175300918 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.169483445 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.172564948 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.175261846 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.173098455 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.170306893 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.173748747 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179346548 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.178842863 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.172938511 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.173442731 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172224466 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.174018793 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.173899083 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.174208044 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.173039285 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.173294776 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.173275015 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.173194782 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175572079 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.173864458 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.173726062 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173973023 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.173955878 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.183468679 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.192695262 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.173705459 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173162215 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.175423263 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.174525036 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.174424311 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.174285537 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173730803 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.174739779 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.17509971 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.179010537 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.178852561 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.176201952 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.174182836 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.173353902 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.174329895 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.175101241 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.174694624 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.174116939 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.175218493 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.174850409 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.174796666 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.174959933 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.173211231 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.17487437 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.174221671 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175466126 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.177001165 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.180137225 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.174880724 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.172185187 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.175447447 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175908976 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.17485135 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.175765986 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.182691773 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196728096 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.183937885 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.181406821 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.18092295 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.176196501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.177986716 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.181418764 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.174634016 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.17670922 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.176510303 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.176815647 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.176809661 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.178479661 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.176982815 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.182400076 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.195022124 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.176114524 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184508005 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.195164608 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.177340731 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.178447322 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.179759342 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.176398436 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.174606711 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.177381321 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.177560046 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18399661 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.19651883 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177650882 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.180615166 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.176853215 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.178587408 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.180461695 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178138533 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.178703771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.174759383 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.177562372 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177574714 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177943087 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.175866079 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.176814033 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.17814762 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.179907153 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.183150595 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.17536516 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.179541813 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.178430296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.177921839 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.179459471 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178937348 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.176717911 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.176479205 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.177784769 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179373212 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.178058069 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.180735428 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.177757494 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.18195242 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.178964365 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178922459 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181217502 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.187144986 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.185184383 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.177582373 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.178193036 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.180633669 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.181205166 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179828272 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.179757229 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.179202705 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.180184114 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.18005194 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180683268 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.180249313 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.182347626 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193399681 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.19775464 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180106886 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.179921105 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.182865119 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.180865235 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.177121186 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.18161587 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.182666241 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.182456027 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.187331993 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.180598459 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.187189372 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198107656 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.181507205 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.184351596 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.18296124 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.186160138 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.183001851 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181161007 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.181443799 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.184416137 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.195391567 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181389152 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189928013 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206875158 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.199317723 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.182440026 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.182391509 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181467906 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.182474485 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.183204733 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.182724283 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.182687226 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183278869 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.183196304 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.182904705 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186803188 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.182860706 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.183294646 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.182737811 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.181587953 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.183593855 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.181034529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.183861708 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.183062076 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.183553304 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.183103471 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.184137273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.18339482 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193890685 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.207411599 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.182847312 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.184207073 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.181044886 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.186334484 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.186033169 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193047182 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.189257267 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.184933841 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.184156924 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.185706532 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.184047312 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.182768754 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.18395176 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.183536581 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184157805 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.182653644 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.195601576 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.208514169 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.188796398 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.183422323 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184676857 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.184407176 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185232874 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.184521739 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184680852 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.185364634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.186121562 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187798844 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.185270127 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.184763703 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.187750268 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.190370264 seconds)
  done (took 697.977761233 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.182949745 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182649209 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183111409 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.182725367 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182554613 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183056716 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.183205721 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.183142861 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.183266715 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.18366474 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.183716182 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183585029 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183212094 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.183358565 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18349582 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184087778 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184309207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183015636 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.182866591 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183985021 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.183573971 seconds)
  done (took 25.951868026 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.186076269 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.185056738 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.184970394 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.186818438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183910985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.187065252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.184785748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186703194 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.187283537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184993149 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.18814559 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188297164 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.184976124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.186026213 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185093261 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187244906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.187992197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18508753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.188994507 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.185210711 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18800766 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.18641199 seconds)
  done (took 27.202260206 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.18830749 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.188740154 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.187593719 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.185908498 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.188196701 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.185348722 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.189268754 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.188807013 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.188964732 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.188422156 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.187179235 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.189420825 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.193992455 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.191791847 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.191496987 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.190293531 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.332739406 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.189014064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.189836083 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.188911466 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.186165202 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.19446559 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.20559437 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.187232968 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.188456034 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.189903657 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.189794087 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.189530853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.190418438 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.189984264 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.192575265 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.189321187 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.189527429 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.191775299 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.188476281 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.190978953 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.192254972 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.190979191 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.186239592 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.190385609 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.198720711 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.206035368 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.190207735 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.195715125 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.209223002 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.191709066 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.192427585 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.197525616 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.187707784 seconds)
  done (took 59.613027448 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.190915432 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.19083255 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.189439471 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.191211336 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.191247218 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.190723449 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.191287209 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.191982383 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.188862549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.189131272 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.19197938 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.18874628 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.18856261 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.191749971 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.191655927 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.189436023 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.189943032 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.190539356 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.189193707 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.190106952 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.18969093 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.192323384 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.192295912 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.190271761 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.192840477 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.190590684 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.190391653 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.192422816 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.189436885 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.189637161 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.192449018 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.19333516 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.193142848 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.191085677 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.191007462 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.19231156 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.193606826 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.19078759 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.193420915 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.191660511 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.193056387 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.193868909 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.193762316 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.193169416 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.193403794 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.190957495 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.191344394 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.191482387 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.190829101 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.194565363 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.194193865 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.192063298 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.194367699 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.191804793 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.194878976 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.194772085 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.191590957 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.191395551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.194603297 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.192076713 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.192162608 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.193993703 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.192193761 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.194409561 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.194534203 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.193161394 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.192310839 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.195685424 seconds)
  done (took 82.155351111 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.195147736 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.194772208 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194758572 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194661353 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.194846987 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.195121589 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.194982805 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.195779088 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.194704011 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.195935063 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194314586 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.195928889 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.195492627 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.194835 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.195375093 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.195587435 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.196142571 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195939343 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.194867622 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195708645 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.195805202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.195554492 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.196009198 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.197107149 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.19602468 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.196079504 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196186059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.195936114 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196373248 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.195910023 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.196885561 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.195910744 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196435033 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.196772063 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.196462061 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.196987599 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195798123 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196677777 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.197208627 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.197167573 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.197761111 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197920842 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.197134572 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.197541291 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196709835 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.19730804 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.197061111 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.198075131 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.198372414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197611555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.197477792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197709441 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198684732 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197707323 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.198097243 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.197986886 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198895881 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.198342365 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.1994482 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197696366 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.19874554 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.199355035 seconds)
  done (took 75.299901401 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198508332 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198693147 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.195634004 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.196626147 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199039716 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196297113 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198859524 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.198244457 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199045746 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.200040485 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199287757 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19671945 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196942942 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199383798 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.196798924 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19726885 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196990016 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.197447095 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200474751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.196948035 seconds)
  done (took 25.07416785 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.196955825 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20002608 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.197511346 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197477803 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.200568582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.197464514 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.19988688 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200395262 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197724098 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19977096 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200436042 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.199974102 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197825793 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.197800139 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.200800326 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197887474 seconds)
  done (took 20.296901065 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.198133974 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.20091307 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.19987868 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.200840309 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.198424434 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.198343938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.202028963 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.198854755 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.198874126 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.201224961 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.200850131 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.201854316 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.201034509 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.20109834 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.198307056 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.201413672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.19915315 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.199393359 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.201785204 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.20212374 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.199734052 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.199813428 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.201660751 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.201941188 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.200082525 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.200961043 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.199740417 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.200335953 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.199869744 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.20248981 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.199699339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.20146806 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.200306325 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.201062238 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.20293164 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.199701795 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.203265058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.202841569 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.203119498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.204363638 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.203375026 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.201279262 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.203002525 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.203315193 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.199875458 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.203150719 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.201141341 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.201403041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.201511089 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.201724389 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.203316198 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.203665238 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.203122322 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.20545099 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.203389684 seconds)
  done (took 67.186317277 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203760565 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203541015 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.20225668 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204903367 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20443 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.201283697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203729667 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.203610839 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202224378 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.204530492 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.202811379 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.205445852 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203093229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204696157 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203560522 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205081832 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202604776 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.20247672 seconds)
  done (took 22.78325409 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.203540994 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204042248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.205052702 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202116005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.203064363 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205989067 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203298989 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.205733596 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205505605 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.203393519 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203610847 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.206238207 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20583817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.206188523 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204691929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204553485 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.207074209 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206539659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.204049226 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20387304 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207316172 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206120506 seconds)
  done (took 27.627754224 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.205818633 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.205321486 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.205119241 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.220843909 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.222541294 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.227140292 seconds)
  done (took 8.408278111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212187624 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207436558 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204623805 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209009304 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206922505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204883363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206083311 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204676662 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208554738 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205676197 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205201648 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207602405 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208474683 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205915517 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207733824 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20829806 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205676579 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205782279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207307476 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208096708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206387451 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208273105 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205322122 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206174081 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205982854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205299721 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208182635 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206735712 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206175174 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208804755 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209922366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205853518 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208770816 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206847067 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210511126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209409137 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206462513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208886152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209374947 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207074503 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.209175846 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210067744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209089086 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20731484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210251129 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207160463 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206609439 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207643341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207552624 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210149416 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210661221 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208819656 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210288078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211164172 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20998587 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210768913 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207796647 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208111772 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209890322 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209284992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207281831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210978915 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20845552 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208298676 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21054363 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208495676 seconds)
  done (took 80.870333836 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207882481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208373792 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20848587 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210378454 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208725182 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207908286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209092951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208900778 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208984905 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208679122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211682752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209019605 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209204767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208942805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210214363 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209163279 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209404899 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209852089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209859766 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213348574 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209735925 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210058532 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210082131 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209848006 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210345529 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212254339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210285004 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209877336 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210460653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210429644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210798509 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21032913 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210313179 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211331412 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210693731 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211015854 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211366201 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210672671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211027485 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214398274 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211568634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214200157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211106548 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212286472 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21159871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210509301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211438891 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211896706 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211520045 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212454759 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212584194 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2120462 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211871891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211544259 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212402899 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212388568 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212116818 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212245434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211531503 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214823086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212094886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211302196 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214962796 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211901496 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211923445 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212826338 seconds)
  done (took 81.047976127 seconds)
done (took 1628.492546247 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.378551757 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.330199315 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.212667592 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.210211605 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.213336762 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.215922985 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.210472884 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.213796701 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.213399088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.213971581 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.212712421 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.400006788 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.214984096 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.213951076 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.214141207 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.308722563 seconds)
  done (took 41.10758072 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.23899542 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.220755998 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.323631554 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.237353509 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.243052955 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.393571354 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.275035915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.221581995 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.376770344 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.260299774 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.662650788 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.24281248 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.220303787 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.248684836 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.237022957 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.391705515 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.451877694 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.665705582 seconds)
  done (took 28.042305708 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.632618616 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.229152116 seconds)
  done (took 8.995186062 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.237707395 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.220695609 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.222188975 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.219684512 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.211778724 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.213599034 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.219699212 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.21340582 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.60268924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.33512518 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.227910673 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.230848639 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.240189098 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.222944224 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.21915521 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.257568486 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.422422005 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.221515873 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.218010445 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.227098236 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.222008056 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.308998285 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.260466913 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.223580657 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.337630964 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.60787373 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.224887305 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.229028102 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.400463952 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.221107828 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.220876558 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.221254878 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.222756294 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.097880698 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.638867506 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.230126801 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.245907198 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.231480378 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.220597183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.36637109 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.22372909 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.228910068 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.216666662 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.651184953 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.350104245 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.337361994 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.383611299 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.239727083 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.22442153 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.281622874 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.228236109 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.224250033 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.264309185 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.987816333 seconds)
  done (took 104.894964078 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.266247619 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.604291349 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.38303015 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.233500197 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.818311496 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885801394 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.232556437 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.481004305 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.258811514 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.218376878 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.500342933 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.696794036 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236535921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.235423053 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853987884 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.273323905 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.217815005 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.92488412 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.234238098 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.218235592 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.699898724 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.219113384 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.218071567 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.467627427 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.254813856 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.650844744 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.525126895 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.631229113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.23758294 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.217429364 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.658054519 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.241352889 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.224148193 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.218709236 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.468841072 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.551761088 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.548164599 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.23617595 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.240551817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.221209005 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.224737758 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.646873687 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.552197783 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.234300607 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.219884058 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.649502091 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.234648517 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.221062636 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.224943358 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.417486404 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.848187544 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.219628937 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.530396368 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.220131599 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.514343681 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.221004321 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.278398583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.680460879 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235502638 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.263511693 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.284490013 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.220888915 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.229180147 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.224526918 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.224879355 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.547422903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548149097 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.224696325 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.541291377 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.668793468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.236248971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.739771086 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.109544569 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.238368156 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.292065528 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.221103363 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.745904281 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.687471594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.254610126 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.22087198 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.532711286 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.241555005 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.492749143 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.236477759 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.236328588 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728529692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.227417536 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.276756973 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.22204838 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.239055629 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.851478381 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.22773213 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.479693841 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.241875014 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.223142832 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.222320558 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.250231937 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.227097854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.222789161 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.227280806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.724917044 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.241142017 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.364108422 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.239473066 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222999453 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.223688116 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.223887048 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.224412709 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437355719 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.711280666 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.242649685 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.22334161 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.223990983 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.229734719 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.492151752 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.226744052 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.50699977 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.23971893 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224396264 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.229879853 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.9224035 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.241602838 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225002412 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.224191309 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088820358 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.437865111 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.240070246 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.224196027 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225751131 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.239642935 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.383254228 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.241165231 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.301700981 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.227768377 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907000379 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.269320549 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.246380607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.507254886 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.233351853 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.071278203 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.243568765 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225710373 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.518465404 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.480564516 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405914714 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.2282975 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.24186208 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891515201 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.281023582 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.36169317 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.244700227 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307076277 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.422549914 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506586579 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226633722 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.838955924 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.226709442 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437442769 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.235891843 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513888561 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.68956365 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.243080568 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.232649037 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906516431 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.942987014 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.041111814 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.226719572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.492646986 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.195222781 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.710103555 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.226792771 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.232948649 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.644524586 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.228571435 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.23329058 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.227168011 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.227496842 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37416957 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.398260406 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.872731061 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.232273573 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.654972995 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.257579305 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233480444 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.230040617 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.22765957 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.575483586 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.281860348 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.229783486 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.240032914 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.229853947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.232272396 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.67879091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.13793944 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.232704281 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.377976979 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829950315 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.249794617 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.229295903 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.878144341 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.475439887 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.718560783 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.282149237 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.51738677 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.250147686 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.265349596 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.77383791 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307585126 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.679275784 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.245862587 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.230113595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.79769808 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.245033114 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.287799866 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.229564164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.228734386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.733555734 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.244914677 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.230272724 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.387803598 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.254334361 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474294074 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.230848735 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.234599041 seconds)
  done (took 1085.015207654 seconds)
done (took 1269.184536156 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.229852308 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.235272232 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.217094369 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.237774999 seconds)
  done (took 26.069871352 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.24999598 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.23958672 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.241633763 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.240050143 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.243360519 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.239990152 seconds)
  done (took 8.60809138 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.291388574 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.234550421 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.239446348 seconds)
  done (took 18.919811376 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.432291789 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.449964231 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.552709377 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.28549435 seconds)
  done (took 9.875309844 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.23997422 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.238866461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.239740388 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.242503826 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.249093614 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.250301913 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.242431043 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.242751066 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.250797261 seconds)
  done (took 12.349685409 seconds)
done (took 76.972919817 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Int8, true)...
    done (took 6.233845702 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.651844558 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.851839635 seconds)
    (4/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.376067419 seconds)
    (5/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.358065093 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.234390497 seconds)
    (7/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.330293448 seconds)
    (8/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.72130591 seconds)
    (9/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.720877369 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.453185894 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.470303133 seconds)
    (12/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.304563882 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.281611533 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.410105958 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.280682507 seconds)
    (16/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.017109402 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.261452071 seconds)
    (18/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.692221364 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.20718062 seconds)
    (20/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.266982867 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.260845866 seconds)
    (22/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.588916338 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.351503569 seconds)
    (24/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.262218652 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.216687771 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.328231468 seconds)
    (27/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.339731723 seconds)
    (28/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.234801421 seconds)
    (29/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.279149365 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.23515894 seconds)
    (31/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.230747812 seconds)
    (32/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.160197996 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.367524697 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.217575829 seconds)
    (35/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.46392274 seconds)
    (36/286) benchmarking ("sort", Int8, false)...
    done (took 4.251072591 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.688348649 seconds)
    (38/286) benchmarking ("sort", Float32, true)...
    done (took 6.235707627 seconds)
    (39/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.051179611 seconds)
    (40/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.444376201 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.236074108 seconds)
    (42/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.789028238 seconds)
    (43/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.088038768 seconds)
    (44/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.009033858 seconds)
    (45/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.375557329 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.346238603 seconds)
    (47/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.322154901 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.627845781 seconds)
    (49/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.831566509 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.503751822 seconds)
    (51/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.237447846 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.238285312 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.311613462 seconds)
    (54/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.004857236 seconds)
    (55/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.209249649 seconds)
    (56/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.322762614 seconds)
    (57/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.363157289 seconds)
    (58/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.437585742 seconds)
    (59/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.184044089 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.218325285 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.323631309 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.295429215 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.686163806 seconds)
    (64/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.529939885 seconds)
    (65/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.444681152 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.680958222 seconds)
    (67/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.219924522 seconds)
    (68/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.334227572 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.21967563 seconds)
    (70/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.234571876 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.286967541 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.848509093 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.073736093 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.108213289 seconds)
    (75/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.220692248 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.219827997 seconds)
    (77/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.433742065 seconds)
    (78/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.24822638 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.382392676 seconds)
    (80/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.821571012 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.947216703 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.24037006 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.255567323 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.219820251 seconds)
    (85/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.256386794 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.260526064 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.234591582 seconds)
    (88/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.246600101 seconds)
    (89/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.266691233 seconds)
    (90/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.322343245 seconds)
    (91/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.241340502 seconds)
    (92/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.314078682 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.750315937 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.581639159 seconds)
    (95/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.99351997 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.798113737 seconds)
    (97/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.266759883 seconds)
    (98/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.417462247 seconds)
    (99/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.606803887 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.251195059 seconds)
    (101/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.241755982 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.455251241 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.866620955 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.235864121 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.227049606 seconds)
    (106/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.469970235 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.22228496 seconds)
    (108/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.222044858 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.778004146 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.373012597 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.266967917 seconds)
    (112/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.222485115 seconds)
    (113/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.305795514 seconds)
    (114/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.240638325 seconds)
    (115/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.643880098 seconds)
    (116/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.596562069 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.756357513 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.280329544 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.268076204 seconds)
    (120/286) benchmarking ("sort", Float32, false)...
    done (took 5.227670401 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.51421109 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.634935106 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.620660541 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.955960872 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.503632753 seconds)
    (126/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.338784261 seconds)
    (127/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.389135957 seconds)
    (128/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.592203088 seconds)
    (129/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.365920967 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.343062239 seconds)
    (131/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.670695969 seconds)
    (132/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.937369751 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.259407917 seconds)
    (134/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.243112888 seconds)
    (135/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.711465623 seconds)
    (136/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.307292784 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.123167295 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.572454869 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.978775165 seconds)
    (140/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.589796127 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.286810197 seconds)
    (142/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.367620697 seconds)
    (143/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.565242324 seconds)
    (144/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.350807102 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.266002461 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.34248996 seconds)
    (147/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.832072355 seconds)
    (148/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.03952641 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.536046582 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.822176433 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.228036261 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.327101356 seconds)
    (153/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.42771399 seconds)
    (154/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.011588927 seconds)
    (155/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.489033748 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.237208545 seconds)
    (157/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.254018752 seconds)
    (158/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.254664751 seconds)
    (159/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.070870263 seconds)
    (160/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.243480806 seconds)
    (161/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.251868677 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.445811733 seconds)
    (163/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.242238334 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.234145137 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.260934308 seconds)
    (166/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.859023299 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.069460238 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.324895778 seconds)
    (169/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.72575807 seconds)
    (170/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.225334435 seconds)
    (171/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.245585474 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.286501658 seconds)
    (173/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.226290782 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.286304731 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.247799159 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.963260627 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.080147738 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.957475726 seconds)
    (179/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.348255388 seconds)
    (180/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.264589492 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.288366813 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.597620016 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.906640795 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.244402789 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.234667184 seconds)
    (186/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.585071105 seconds)
    (187/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.510531367 seconds)
    (188/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.264157363 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.348792437 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.266449138 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.305073574 seconds)
    (192/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.961465974 seconds)
    (193/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.060059471 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.26800989 seconds)
    (195/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.267892943 seconds)
    (196/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.218584672 seconds)
    (197/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.083406094 seconds)
    (198/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.36048149 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.904300111 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.462943385 seconds)
    (201/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.228626148 seconds)
    (202/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.489415369 seconds)
    (203/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.005181304 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.229676956 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.648328956 seconds)
    (206/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.326714793 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.269817876 seconds)
    (208/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.046155477 seconds)
    (209/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.426213547 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.303958218 seconds)
    (211/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.242298864 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.24381821 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.2503995 seconds)
    (214/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.429156512 seconds)
    (215/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.545369878 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.267239652 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.131824542 seconds)
    (218/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.23836101 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.256123422 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.333690067 seconds)
    (221/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.330937029 seconds)
    (222/286) benchmarking ("sort", BigInt, false)...
    done (took 6.25466926 seconds)
    (223/286) benchmarking ("sort", Float64, true)...
    done (took 6.247744615 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.229428165 seconds)
    (225/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.967290479 seconds)
    (226/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.23021152 seconds)
    (227/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.022532725 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.03859934 seconds)
    (229/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.372096282 seconds)
    (230/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.238844115 seconds)
    (231/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.23060802 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.23051146 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.687736411 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.255314348 seconds)
    (235/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.301652511 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.123788926 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.975324649 seconds)
    (238/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.259108986 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.451528491 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.245783864 seconds)
    (241/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.605648003 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.28606621 seconds)
    (243/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.250228497 seconds)
    (244/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.966015963 seconds)
    (245/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.625746879 seconds)
    (246/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.231838219 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.593801586 seconds)
    (248/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.443132253 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.292296099 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.258814277 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.652423368 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.594625946 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.39963623 seconds)
    (254/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.335714106 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 5.522667347 seconds)
    (256/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.275095136 seconds)
    (257/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.231115458 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.268913901 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.374752684 seconds)
    (260/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.25768169 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.507075491 seconds)
    (262/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.406627874 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.33303809 seconds)
    (264/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.252540878 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396114809 seconds)
    (266/286) benchmarking ("sort", BigInt, true)...
    done (took 6.250806283 seconds)
    (267/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.33644188 seconds)
    (268/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.72946825 seconds)
    (269/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.233339395 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.381377186 seconds)
    (271/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.266808674 seconds)
    (272/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.233070435 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.043587879 seconds)
    (274/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.280472712 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.839998324 seconds)
    (276/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.483807597 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.344532995 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.294536884 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.565090189 seconds)
    (280/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.587573704 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.275402225 seconds)
    (282/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.278511136 seconds)
    (283/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.243143696 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.873785913 seconds)
    (285/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.265104524 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.680920472 seconds)
  done (took 906.892281001 seconds)
done (took 908.046011094 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.285279914 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288871463 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.262682445 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.28477011 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.381750065 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.291137193 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.273431016 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.266250795 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.31160707 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.313126176 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.270606109 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.290525878 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.273179418 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.271758612 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.263421624 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.286692154 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.258486209 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.273063208 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.289244591 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.273953105 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.288855824 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.270856713 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.314716163 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.292021123 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.269042198 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.26823697 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.276128 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.29191572 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.384319469 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.27591949 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.267669671 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.283553578 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.258582047 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.264360813 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.260836908 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.29321829 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.28461236 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.27412291 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.269228143 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.305578967 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.63732387 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.287295793 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.275226322 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.266653303 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.266965453 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.269689087 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.27419239 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.272978446 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.287522482 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28796002 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.626632176 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.304472595 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.275770681 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.267388168 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.276928372 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.274366679 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.270472577 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291865286 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.29395345 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292053175 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.247821213 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.271538116 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.268519037 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.29097037 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.282100011 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.665166475 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.278464425 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.271573892 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.638598147 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.286528773 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.664033763 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.299801886 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.269300413 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.290151845 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.30794815 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.259813985 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.263249244 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.267819651 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.283959026 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.274826193 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.278523743 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290879591 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.273635681 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.270097055 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291068159 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.296320317 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.279099141 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.277298982 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.276994939 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.296823359 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.284457653 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.288522292 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.272864285 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.264461055 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.278858331 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.272298448 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.279999189 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.279258511 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.273629883 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.28022945 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.63901459 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310813005 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.266427132 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.265996454 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.26988053 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.291726542 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.637600365 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.293464411 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.291565248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.317516548 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.272489436 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.249899389 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.28149158 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295262724 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.279038909 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.273039567 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.266482271 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.249990334 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.631978427 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.310069105 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.272479152 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.276533683 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297658953 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.272523668 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.26732353 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.267048834 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.272861767 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293793566 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.400837066 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.282534293 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.311244836 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.277000824 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.274580007 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.297140213 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297204908 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.310913285 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.274391715 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297536843 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.296311034 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.269864335 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.290078785 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.281894541 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.273181601 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.278814348 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.266947824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.296247386 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294132344 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294072453 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.293149878 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.402302349 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.270664845 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.253199115 seconds)
done (took 215.166220582 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.33445131 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.268243444 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.363351732 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.269036315 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.371705392 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.372369371 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.266640412 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.26676231 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.266963594 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.664222608 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.268507541 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.267721377 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.261835159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.267712808 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.354519237 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.270509301 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.26686417 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.626198144 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.27065129 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.345633011 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.26425923 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.268548422 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.270162446 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.673641616 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.265566012 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.264434227 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.346959803 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.270796543 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.635326503 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.270169421 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.270014451 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.635200858 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.363766933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.288836795 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.281362446 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.278624593 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.374728387 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.288920188 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.356534968 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.355973503 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.365860076 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.310681076 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.273292709 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.269943794 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.27298153 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.2724117 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.26898709 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.299104256 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.269176774 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.269904919 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.628775766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.282250622 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.270782071 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.271347817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.269859167 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.302038775 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.27147554 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.273296135 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.366143576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.274091089 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.337919373 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.676901443 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.669139909 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.272145147 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.265965756 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.270674145 seconds)
  done (took 144.425065633 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.339040008 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.346790362 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.382416811 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.291091511 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.323912374 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.386729279 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.290738253 seconds)
  done (took 10.544285965 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279068903 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.274773531 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323342343 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.323341681 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.273660844 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.451330134 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.275013201 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.284785944 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.272913645 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.326552513 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.276988351 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.275813522 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.281671934 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.266882536 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.322680639 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.286186408 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389661673 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.27677172 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.276453488 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43591084 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.272500861 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.282110975 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.326768789 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.286100991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.278254177 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.281832809 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.094220515 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.275680722 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.2729384 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.275523565 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27373662 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.353560237 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.275870381 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.272504764 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.2730478 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392043684 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.277228883 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.273638655 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.276511243 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.272924487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.277305321 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.275694653 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276479674 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.273442176 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276289809 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.297659623 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.276928124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.276460904 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.276857448 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.276949434 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.325831922 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.2775983 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.273781474 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.273963975 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.330600088 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28388054 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.276973708 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.273728318 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277532918 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274742442 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436517239 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.323953117 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.277113266 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.324502439 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277430873 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.276868511 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.27743476 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.277638432 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331543399 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.277666555 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324681056 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.275680486 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.462577265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.300465055 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.27935371 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.279533315 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.280429088 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.27863379 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.272743164 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.282473844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.275562877 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.278572019 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.285744652 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.275354845 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276084468 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452980547 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386685035 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.276453663 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.290077805 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.28455045 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.276632676 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.330671166 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.278811047 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.276313372 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329745339 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.392577556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.331416705 seconds)
  done (took 148.016347594 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.283860072 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.285954376 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.280793319 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302828026 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.29635116 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.278577046 seconds)
  done (took 8.917608038 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.281352731 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.280288183 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.279169403 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.279355076 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.279832082 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.28109666 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.279753434 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280203007 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.283186532 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.27954591 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.280506263 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.284784066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.28153067 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.280924337 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.280552753 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.278816728 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.280431896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.276879764 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.280384918 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281244917 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.375200448 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.280334215 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280036701 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.281267019 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.285165115 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.280753307 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.289572568 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.280215571 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.281595974 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.28885338 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.298683488 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.28304452 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.28153687 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.285855582 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.283659487 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.280795231 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285337342 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.285500217 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278780808 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.28399601 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.285779884 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280993397 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.282087953 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.28679633 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.282969508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.287357839 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.290787176 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.290914398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.282373822 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.285765602 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.28630891 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.282804017 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.283058472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.286427755 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.284986939 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302073829 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.290085162 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.282850988 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.283417294 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.283393385 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.2836043 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.283446484 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.28560835 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.286364741 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.291722523 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.288550858 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.28361292 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.28795115 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28400605 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.283945576 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.289488262 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.28182463 seconds)
  done (took 94.722755719 seconds)
done (took 407.806208759 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.547257085 seconds)
  done (took 7.741147155 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.393176404 seconds)
  done (took 7.589844766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.594169856 seconds)
  done (took 20.791756796 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.320127182 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.376470026 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.299456456 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.28865772 seconds)
  done (took 26.481130839 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.513012734 seconds)
  done (took 7.707946154 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.277840685 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.277587323 seconds)
  done (took 13.75216965 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.596471774 seconds)
  done (took 7.792044834 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.561463268 seconds)
  done (took 7.757417146 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.293737493 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.296738701 seconds)
  done (took 14.040219102 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.261295592 seconds)
  done (took 7.458215754 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.999312978 seconds)
  done (took 11.197470179 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.287889972 seconds)
  done (took 7.487237166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.306908981 seconds)
  done (took 7.50383642 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.877751704 seconds)
  done (took 9.075608237 seconds)
done (took 157.570557414 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.279817691 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.280882086 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.28173178 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.280896391 seconds)
  done (took 26.320974354 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.321057118 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.320850548 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.322428759 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.338095567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.324880306 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.32119238 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.314910717 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.314064463 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.332579325 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.324248809 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.324005966 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.326004263 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.330822761 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.314526627 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.324985475 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.323568438 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.333151707 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.323362445 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31453066 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.325507209 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.289732405 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33409454 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.325514296 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.290568034 seconds)
  done (took 32.912557506 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.81039924 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.359515926 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441967288 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.340231032 seconds)
  done (took 7.150883678 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.341848572 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.342776752 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.354748521 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.391772468 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.419712925 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.35146915 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.315832702 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.310851218 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.2981747 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.342929078 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.41831999 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.359817188 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.426096015 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.290244194 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.476441953 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.290468874 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.289444462 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.343149923 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.39321733 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.407726193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.290521522 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.342207041 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.346163076 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.360673657 seconds)
  done (took 33.703922652 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.290612882 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.30895122 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.289925375 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.289575187 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.298328742 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.289882574 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.290285363 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.292075042 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.290437257 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.296089823 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.289803563 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.303230033 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.28983147 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.290358884 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.298146018 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.293101801 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.297224628 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.291069753 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.291454733 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.298140317 seconds)
  done (took 27.07938156 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.284801378 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.138279957 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.636459959 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.540597758 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.285147384 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.284285049 seconds)
  done (took 27.371304694 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.356679974 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.499342238 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.291558448 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.626241771 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.716246389 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.30830829 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.292499808 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.517778354 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.817565967 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.809541501 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.345621103 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.357137432 seconds)
  done (took 19.141711993 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.285528279 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.290614109 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.299659926 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307744535 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.342867875 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.313332468 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.299164642 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.28600964 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.351201327 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.366289324 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.3159081 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.345282831 seconds)
  done (took 37.007048719 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374357903 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333476053 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.186512209 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35872541 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00621321 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499180723 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291023799 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972363513 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.310559848 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563221086 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287855035 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377728949 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543179966 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297696408 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292620656 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.24120381 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529046793 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745326689 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285547499 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147251097 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304274815 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.283001073 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.213809836 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.500654626 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508833375 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257113128 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.538761125 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.055517394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550319443 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294055105 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290117038 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279175072 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553828648 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916544708 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392973332 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482434248 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306548783 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.824862736 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.263422781 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.140145035 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282690694 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296886051 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290476899 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280315764 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214290499 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284615154 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981204404 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.303170456 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.991121523 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.280023999 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528554193 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376903652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.284116506 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.887248964 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284017654 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.24962884 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.284198463 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371992444 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871553104 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385696972 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283874376 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.221521659 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279663789 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16211669 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874713968 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.302703836 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.284699793 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283914624 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215349693 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.14937515 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298105693 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42975123 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.306128502 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931339502 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941231357 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300253958 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.212988816 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803803595 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292849689 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.221407043 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508672326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.05958396 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217469475 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.229653449 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.216546416 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948536919 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290793539 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.788716097 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303300958 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98721147 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.50503434 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322204953 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306247859 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.505347522 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.162028919 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282436922 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.283719118 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410921097 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305424336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.968939506 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234597511 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.287769862 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537911705 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.495653373 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293490262 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246674904 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756491707 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311014773 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.305128941 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.293749537 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.49324165 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.852594499 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316000483 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413338497 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303076346 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.062712499 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988026529 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295264761 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.295049421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.284957223 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542146874 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.004198544 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191522725 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352937232 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290980455 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28502136 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299773741 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135137114 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.166976146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.475527359 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313649352 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.302144575 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.285383024 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234795392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.294779922 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295337885 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.063996791 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.508757555 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289622305 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56663876 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220192163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433422878 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294929864 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.507336372 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.446301368 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.307723525 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54443183 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28565304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305691645 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.303205642 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304698873 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386871091 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307817448 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.286149758 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.549069309 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.291420623 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.290629712 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.175339849 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.065668806 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289803499 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.292313653 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288595036 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843729163 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279558754 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292166989 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177836876 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.301553386 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354811173 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293664579 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493105888 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.436040962 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312386658 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.311557544 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.286060252 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516409333 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.297622304 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.161316589 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366872405 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.741494883 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.861350818 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317702738 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.22176416 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.99962622 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.980984949 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28937517 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.486623762 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288521711 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492592491 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320514805 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295762386 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.846477754 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306973248 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.165622615 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.29592553 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301787792 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.294556928 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290361121 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.446312809 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.446580896 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299167393 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.306835271 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434203859 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.303985466 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22361364 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.805990715 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295067187 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290644695 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.064796393 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325309313 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163937012 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070179428 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567288521 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295000344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541107809 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254512829 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.322987311 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.290215624 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295515124 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298044516 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.304344776 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300173569 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.30214463 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.171450822 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.729019032 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862376945 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981352841 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816516583 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539702833 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.310458921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.204095713 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.984818821 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243777702 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947862791 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.518515623 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999064372 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253855623 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752276676 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.47059763 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047729402 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543029191 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.521175788 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518538719 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.311379041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544952942 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505540196 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327745795 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300701523 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.228123499 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.062957891 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83028075 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311615375 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374222521 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991561533 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315742272 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.071918022 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.30292388 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.951662826 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686979853 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.940651671 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.681223849 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304562262 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311918442 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078635602 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.316768231 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.818810934 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894862318 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323528563 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.756934259 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248609851 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.500685027 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.323213398 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.292440851 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.769266783 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.292980543 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.565742215 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54630432 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230931342 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.302479494 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811308943 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.165403095 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.301251365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296334611 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00519753 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303965997 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578045374 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.299257401 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.4642559 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313307166 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229547513 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229932478 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.98808683 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300960095 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271383367 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7621148 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.304928945 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302107783 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319467096 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177086224 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.551872419 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.310858267 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.854765851 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538812595 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301392832 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33799293 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.301318989 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297027971 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.295201435 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.202831068 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532373686 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341669952 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.52026503 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.213547179 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.205619982 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.728380037 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508954986 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.179309136 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297357658 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548033451 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.025885701 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.318338284 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965643725 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339326277 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.299770487 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308979783 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310062341 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318842808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386728983 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504125545 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.334283516 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.309307817 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688220001 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319035745 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302994153 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.313229052 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392307024 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42807928 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.472457512 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.072145074 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862268959 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016900672 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887194102 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5690834 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302004201 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302195054 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233642108 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448207272 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.827180048 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575083653 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429862041 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.298434251 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323564138 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300251421 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302253746 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519234116 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574724206 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.17048673 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314343264 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967648038 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.18243239 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311272994 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.512221695 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774204717 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844011414 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433808343 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310138289 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001359649 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594097297 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392027479 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301802206 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89338002 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.310874935 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.952947482 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.314956673 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30739444 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449538718 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553045756 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948540857 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.329612269 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.456947134 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.075106327 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205666666 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.557674735 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.735724807 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5095005 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889350121 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989649238 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571955352 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372926083 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508739134 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.430277541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451060582 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.310427444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.187851517 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303560495 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185478014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.016890569 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.312916712 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867932175 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586582946 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.30717799 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.308219112 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330659211 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.31298073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.52608927 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983331995 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535056727 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313376381 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309535284 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293898748 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875089334 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572956626 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243928717 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.309646025 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537047132 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564456637 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329509125 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.757436234 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.015114911 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84225001 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.284553781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326010892 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307954694 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.986438601 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876830241 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.497223033 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791629027 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.972314449 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30666917 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584212772 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.310797692 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305451948 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589065576 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.308659498 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306096854 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536808764 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.890313258 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068418123 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.311276512 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.245971344 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.246234095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.532658154 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354040246 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243194598 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30634918 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.706330855 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326333233 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436874303 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318746465 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.30340518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334156568 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.065121332 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662294677 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.313055587 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.289269967 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.318969324 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319448044 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403210816 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852032961 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328743122 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.982671686 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.657501533 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563354457 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.308067721 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.293864575 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.311479834 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307884804 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023052775 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275832358 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307776994 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850275475 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.325304735 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.323640653 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312018647 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.52442627 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520016651 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.312075417 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520163824 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334444773 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327575932 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.209595065 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075797795 seconds)
  done (took 1633.66738493 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.319588643 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.336041174 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.320678494 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.379317308 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.345942667 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.328833863 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.388649368 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.310724689 seconds)
  done (took 51.953133235 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.313086145 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.470132319 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.339411295 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.322011886 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.3179868 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.309813539 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.761877827 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.33426623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.318834428 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.318894898 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.311167525 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.318796113 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.940542036 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.319702822 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.315135859 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.30454388 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.318303555 seconds)
  done (took 64.859196502 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.250803015 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.603035453 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.846497136 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.326363636 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.326266249 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.314071689 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.730015935 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.330460538 seconds)
  done (took 57.953300482 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.327176601 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.327114206 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.327945709 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.328730177 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.328951873 seconds)
  done (took 7.865764852 seconds)
done (took 2028.186610649 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.315562661 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.318368571 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.31483301 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.316762898 seconds)
  done (took 6.491533222 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.294341692 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.021607868 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.295846816 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.307637235 seconds)
  done (took 18.144947317 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.322042873 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.343182306 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.979963473 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.907516716 seconds)
  done (took 5.115864402 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.065368179 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.076684812 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.061269607 seconds)
  done (took 7.432134792 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.313645444 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.318937534 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.318374305 seconds)
  done (took 20.180346681 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.601498041 seconds)
  done (took 2.831583134 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.462841801 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.510886557 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.63283219 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.652781364 seconds)
  done (took 7.489301086 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.708599475 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.697747155 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.506047083 seconds)
  done (took 6.142074538 seconds)
done (took 87.719209561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.006426968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.317041746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.521003339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.97423756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.544084874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.519626654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.515430957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.943749161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.486624625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.475870197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.974829195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.542205007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.673293554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.564793894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.672384211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.563048542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.593232588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.053389129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.662265414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.894309204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.513301853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.615026087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.807963222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.629927985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.642471146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.465689514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.208144649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.56723894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.830504765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.220505512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.466257187 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.064207917 seconds)
  done (took 190.759555117 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.321979955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.317192591 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.317940082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.316342948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.316799928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.319131015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.334341753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.316472462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.346102055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.318124675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.316682607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.328523336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.316798758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317419169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.318946942 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.322060702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.316962293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.335326452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.318202303 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.31707064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335775201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.336122775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.317264851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.317403669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.318418241 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.319227954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.320672449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.317925125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322799925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.327874209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.319087042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.317527887 seconds)
  done (took 203.5345178 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.320261217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.317850935 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.318372492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.319100091 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.321622709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.318116621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.321836096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.318972456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.334572273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.318835412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.335583149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.318702054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.324186657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.318776274 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.32035709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.342119194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.331945538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.320041369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.3199128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.334804565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.334913396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.332255727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.320244294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.319731165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.330490544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.320159403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.319830383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.334987279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.321021066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.336502108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.320714922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.326374503 seconds)
  done (took 203.627444426 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.51566987 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.327190452 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.328612274 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.25929819 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.327862511 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.327312871 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.323300418 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.524707152 seconds)
  done (took 14.168203053 seconds)
done (took 613.319547082 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.541179082 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.271033064 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.527076588 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.346556152 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.075636388 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.370850866 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.347701193 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.511160707 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.228266823 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.518098763 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.528375052 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.361524452 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.668991228 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.347005458 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.596938594 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.446092713 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.189471707 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.304649531 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.651389136 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.837195486 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.600025579 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.78699753 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.52981657 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.233051439 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.686272119 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.77969769 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.019480624 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.179445289 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.363202077 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.660608479 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.921375358 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.269274047 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.405627903 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.403930307 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.459874553 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.440606976 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250877327 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.406667645 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.545685591 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.560817059 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.844594596 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.060702785 seconds)
  done (took 90.314263844 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.314223267 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.315663534 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.311859478 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.313359946 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.315156127 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.313915379 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.31315233 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.31321569 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.314305519 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.313606516 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.313624795 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.315445103 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.313719544 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.315364145 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.313094259 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.314984397 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.314352802 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.316087504 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.313381533 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.314177073 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.317353958 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.313603275 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.314283516 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.315627294 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.315842648 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.316024745 seconds)
  done (took 35.414480779 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.332274267 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.574372068 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.730870477 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.342135619 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.33162416 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.337328231 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.407586347 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.334477986 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.336503669 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.336107405 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.486957827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.33539093 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366628618 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.7763282 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.338572902 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.333314997 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.33267725 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.332896343 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.586482163 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35047312 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.428484389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.339398206 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.407868996 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.350229658 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.35528204 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334281417 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.338537156 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.921336955 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.356345786 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.491587763 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.08308387 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.411483815 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.8639663 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.775876904 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.093281579 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.342641784 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.335595217 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.493398833 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.337828435 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.335531095 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.408528396 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.339916231 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.745652994 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.009699776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.356223551 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.335336992 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.93443278 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.510449205 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.568153566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.342270751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.77516509 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.344394845 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.337370688 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.337362257 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.568481522 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.342046275 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.335505019 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.93151342 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.359405689 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.410450773 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.337089357 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335532483 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.591194732 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.336996681 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.578661842 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.338497229 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.345389367 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.355572809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.744607775 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.339191948 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.021959451 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.35403975 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.338206877 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.495101216 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.581963846 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.964544271 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.357417581 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.597298701 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.871568057 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.430574507 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.347730182 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.906547833 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.435672749 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.345464396 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.339564028 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.339580256 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.338106327 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.38408059 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.409033534 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.956957211 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025329539 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.972530196 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.434265309 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.353174934 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.339009216 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.93996665 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.361545127 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.339036727 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.763196558 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028579329 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.356192754 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.347524819 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.019629039 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.360280594 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.415162575 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.347366932 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.763026014 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.344029163 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.385870525 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.338965326 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.345725484 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.360588678 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.414327598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.349855647 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.339608508 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.000078132 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.52010766 seconds)
  done (took 176.917921232 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.333631859 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.332281441 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.331841044 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.350039239 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.3333458 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.340897331 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.334135905 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.334857176 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.339603718 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.334077665 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.334578938 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.334553005 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.336211649 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.338242503 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.345263153 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.34078738 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.987881849 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.33468532 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.342396273 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.33511991 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.123354019 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.342393304 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.336821366 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.335508778 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.336702933 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.334766225 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.338928703 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.337353771 seconds)
  done (took 152.127843227 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.342121268 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.875492233 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.359429495 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.467253268 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.365066224 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.339172382 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.465261436 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.395990483 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.359258274 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.338999535 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.338490333 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.627439644 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.343532301 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.831191344 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.522531301 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.487401543 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.830573739 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.358850664 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.339870692 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.340271909 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.469255411 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.345760264 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.629532969 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.879148629 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.359954714 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.878774051 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.327683382 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.343167899 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.341677502 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.881790741 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.35760226 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.630393493 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.415836613 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.399509341 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.89792584 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.848935985 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.849082928 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.483753006 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.342187608 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.341828944 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.34126918 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.327547939 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.88224231 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.361429011 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.343948204 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.873928819 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.361824286 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.345940199 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.349546319 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.34246053 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.400711705 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.417228394 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.650886815 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.889035633 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.433998007 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.357169162 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.470269123 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.733261454 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.347643036 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.833903575 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.328004941 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.88871513 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.363071698 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.328857419 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.345088698 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.349975053 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.487532689 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.469738596 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.83558288 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.361900251 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.83415497 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.504910383 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.343207398 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.343599525 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.346386624 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.887889616 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.853094386 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.504971241 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.47462279 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.530509809 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.338245082 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.345752827 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.330617099 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.4187549 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.345137926 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.89009785 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.854254933 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.363723122 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.347908918 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.347462367 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.349278168 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.513617739 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.906950041 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.437137112 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.828131421 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.655072715 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.639205655 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.348026546 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.402539913 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.362188818 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.639043784 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.349669109 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.401081711 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.799907773 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.640871299 seconds)
  done (took 159.904636631 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.575225005 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.489106957 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.430311215 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.49288927 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.929639356 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.89338168 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.567847312 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.480145528 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.45026975 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.597839017 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.447480666 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.433281065 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.551127909 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.418239698 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.050112329 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.426118466 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.451040819 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.486553767 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.494322406 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.333977807 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.991347972 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.639388577 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.53850514 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.140970796 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.43311719 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.09480334 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.889608983 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.870463851 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.507623508 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.591485375 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.862766323 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.439230946 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.265547309 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.032065829 seconds)
  done (took 64.550249355 seconds)
done (took 680.464540072 seconds)
SAVING RESULT...
DONE!
