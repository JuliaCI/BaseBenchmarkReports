cset: moving following pidspec: 17506
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.011310402 seconds)
loading group "string"... done (took 0.566715403 seconds)
loading group "linalg"... done (took 8.979619794 seconds)
loading group "parallel"... done (took 0.172144188 seconds)
loading group "find"... done (took 1.45867276 seconds)
loading group "tuple"... done (took 2.122663795 seconds)
loading group "dates"... done (took 1.39983861 seconds)
loading group "micro"... done (took 0.222167725 seconds)
loading group "io"... done (took 0.635727303 seconds)
loading group "scalar"... done (took 44.61031049 seconds)
loading group "sparse"... done (took 14.047667443 seconds)
loading group "broadcast"... done (took 1.124307227 seconds)
loading group "union"... done (took 12.822696451 seconds)
loading group "simd"... done (took 2.55293514 seconds)
loading group "random"... done (took 10.969299426 seconds)
loading group "problem"... done (took 1833.716362343 seconds)
loading group "array"... done (took 25.304252915 seconds)
loading group "misc"... done (took 1.123375454 seconds)
loading group "sort"... done (took 3.625851384 seconds)
loading group "collection"... done (took 18.236628681 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.614205344 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.116911013 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.164362331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.337917091 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206526864 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146367067 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159388024 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.551342227 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.951219024 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204680147 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144332929 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534239853 seconds)
done (took 5.820350172 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248314969 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.425062148 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112633885 seconds)
  done (took 1.158640082 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091480063 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172937381 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092434622 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10672983 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107108555 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108153664 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094068083 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107865774 seconds)
  done (took 1.413253607 seconds)
done (took 3.543002284 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.481271014 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.8340816 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.482629657 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.13277197 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154570809 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.145958489 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.297442025 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158150401 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117222876 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084027957 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168196982 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.356421662 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.464768908 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.92859013 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.083732762 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.12699821 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082714241 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.702721844 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079686522 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138199518 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.511692774 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117681285 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115969362 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137164956 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190356102 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129005095 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159639745 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092952791 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657249242 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100993791 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182279584 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098483679 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160179098 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.243762284 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096146764 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.097180819 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66479261 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.176449893 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113038455 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100440936 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666771303 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079783422 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.198403091 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108767423 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10801687 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186349232 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11224814 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079217135 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100455324 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09031158 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157115795 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477564746 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106732528 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.145791182 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106373254 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683749639 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095469246 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152710842 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137695738 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.100957192 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095955436 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104802227 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153338608 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.107403209 seconds)
  done (took 19.244552961 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115759589 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137459663 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091911303 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139574262 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137082419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093860504 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084246294 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092960976 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108886363 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181139322 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133396127 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14081638 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091261704 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082557789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116086335 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245879799 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104774378 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118303301 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08078304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105950004 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137464291 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094045853 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106923433 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106514095 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167212072 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202205719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109579956 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123032421 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090980971 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098491595 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142045114 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.159132356 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075599652 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094276208 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181120345 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119243555 seconds)
  done (took 5.050931163 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199621039 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115840142 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191656178 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178752614 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146054728 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165482889 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118656127 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263654099 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.238873958 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176086631 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111931684 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109732227 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078036315 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094499132 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077611361 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.633326494 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180748902 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151528666 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125903951 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10290313 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083766702 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386308603 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100527047 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081868227 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102489826 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072747726 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175441299 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103024998 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.268952997 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116633378 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089233198 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13205096 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20576181 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114621078 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137439353 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09944599 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082148942 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.227796691 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09179472 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093580543 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108420373 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.164548896 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133780465 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13097975 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09786727 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091572471 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.234138622 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082504515 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116586255 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.048193958 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195341478 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095530995 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097830838 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344810403 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116816716 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086285338 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098729192 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.296807498 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131335787 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083650865 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077239879 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103705863 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093701912 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.4158277 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091471772 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.017308295 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095722272 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157174843 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098088699 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103626337 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086149434 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102267433 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10300339 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096956285 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07876446 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096952087 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07886597 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101074008 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113596377 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083342141 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094010748 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146006916 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116091995 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09758 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101968049 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125537065 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08311112 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096016024 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125644782 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080842149 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099427511 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.129439938 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104565621 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080978753 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116018049 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099832403 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143106102 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094587246 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.168445618 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096650376 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079256927 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124674239 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09963781 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125476049 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104612864 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097066433 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083505821 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094375096 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080289823 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160923863 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081312195 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096450355 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083401929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11073697 seconds)
  done (took 23.565053871 seconds)
done (took 48.484053834 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.469888427 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094581386 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109080942 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10829826 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107397111 seconds)
  done (took 1.584926138 seconds)
done (took 2.255491133 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.326438805 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185303307 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100366399 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191652154 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086815979 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200795796 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161746482 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116259503 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.197292244 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098835097 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.173404481 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097109291 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086703447 seconds)
  done (took 2.718933359 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092514676 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117703875 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081391558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110157344 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076185085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108072578 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092354647 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130774693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090759379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100990016 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075678465 seconds)
  done (took 1.746151985 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089208954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113019741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080955935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10615681 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075313897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08933151 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106410331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115393675 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091429182 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101790316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076280035 seconds)
  done (took 1.716400502 seconds)
done (took 6.84330171 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.007619779 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.924676168 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118457775 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165380193 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33733118 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.203859398 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.48062807 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131139157 seconds)
  done (took 10.224724182 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.113340855 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097418789 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098691248 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09851019 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082441779 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100822998 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081535566 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098853944 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082373352 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099131811 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07972821 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096508555 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083031736 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095452784 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081305804 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09774643 seconds)
  done (took 2.216493718 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118870958 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117034823 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103855548 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107999223 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085236379 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102008428 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.087630894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101696297 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083445042 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099678799 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105968971 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089533577 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103666207 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083218181 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10242923 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091423222 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101025944 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102029296 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087813806 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103057659 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09039236 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100763701 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104296073 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089995921 seconds)
  done (took 3.14117618 seconds)
done (took 16.252994977 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16506139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085159087 seconds)
  done (took 0.923204544 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100415233 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119613566 seconds)
  done (took 0.902135469 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104868686 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097001297 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134859914 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114082072 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082621946 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096646387 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113888703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099782673 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081499445 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098927783 seconds)
  done (took 1.706879576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084049688 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101291409 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090524007 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119242127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108611738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083904878 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102568822 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085877423 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103492784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080360967 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.1049008 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116850445 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088684946 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118477059 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08709768 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103817751 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107657162 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085324066 seconds)
  done (took 2.455180971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079831206 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08218817 seconds)
  done (took 0.846102161 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082946207 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095665819 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083723417 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099737586 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079392284 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094845934 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079784616 seconds)
  done (took 1.30051716 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.510063846 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259468589 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338218887 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.098362736 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151649735 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.365284457 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.13305207 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111051468 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111796991 seconds)
  done (took 2.806567452 seconds)
done (took 11.62102383 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090437 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188865032 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.543526127 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118745997 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079016379 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158138768 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.261137378 seconds)
done (took 2.124417878 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348821657 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124836063 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088347685 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080184847 seconds)
  done (took 1.323848562 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078403268 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102003943 seconds)
  done (took 0.869338466 seconds)
done (took 2.885925039 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078394968 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130132214 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078468135 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097049408 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076994529 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096256077 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07687881 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076135427 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096031028 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078816228 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092711068 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079338826 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.094082238 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07963937 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076822622 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092630658 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078737058 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092473115 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076720449 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092275472 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079539226 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092273612 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076544171 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.194152861 seconds)
  done (took 2.906728518 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097902953 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096231657 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085205732 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101372484 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083769771 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102259736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101178017 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080258583 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101889574 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081914681 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099905072 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083866327 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097948919 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083403976 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098819821 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099690339 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085776465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096305527 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082573945 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100273027 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085895565 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097295981 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083379413 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101622184 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099239809 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083630001 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097990335 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080549499 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101189194 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083605738 seconds)
  done (took 3.467601128 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086555225 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077044133 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094006683 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.088913536 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094306951 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081112898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0938708 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077650767 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094882403 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076756881 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095335714 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077787505 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093120916 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079621567 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078841463 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102003057 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112961106 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078222364 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076889119 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096109663 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083299342 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094673669 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079857605 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093553133 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077239481 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093589628 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078246573 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077176038 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094407222 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076587064 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099314893 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084076371 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093577172 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090624592 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100739293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077381289 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102280815 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076751932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095537872 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077248362 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093262278 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077957858 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07741985 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10612785 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081103235 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095102697 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07865167 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095381083 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078707177 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096904446 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077392525 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093696842 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080299808 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095370354 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083411937 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076831131 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095175428 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076629424 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095816987 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078008884 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093629437 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077257374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10078294 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078554615 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118652225 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089558707 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094862467 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079712818 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098530297 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086297058 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096546555 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097455858 seconds)
  done (took 7.042361468 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080867733 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10629289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080638883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096012946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076520306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077709009 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101992434 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094290162 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079844198 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114186582 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078415168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096250105 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080220228 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098217287 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078298288 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09642136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088648933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092617553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078238332 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09830029 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079155206 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100765625 seconds)
  done (took 2.672636895 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219911578 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104377047 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142766337 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113442583 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098117503 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111277142 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101075038 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086477947 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101688075 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089315487 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105101999 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085443352 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114732952 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105316929 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088353787 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106030522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101499883 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08903383 seconds)
  done (took 2.660869715 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092203237 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098106781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106200176 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098488591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081079798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100163501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087672474 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114198474 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099930184 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082009366 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108565812 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084238448 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100559898 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0813563 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100501637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081360955 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100786967 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082175429 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108224865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103905588 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088852575 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108745986 seconds)
  done (took 2.810073876 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096184071 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099790352 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111687985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101511791 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077056795 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096822835 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088691977 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098216349 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105885113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082828884 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098091756 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080214251 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105220344 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081369051 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103356934 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081772506 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099901644 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081421047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100125914 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07746594 seconds)
  done (took 2.568444139 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12286665 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114184146 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09757077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125363082 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115247889 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097815135 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12600228 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114534227 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098651721 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128014732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098212155 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11679467 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126721871 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105181605 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114832358 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125684503 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109772531 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126085145 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115495226 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098500263 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127080547 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115082545 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109248305 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115562605 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098011359 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117760923 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114518248 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10547806 seconds)
  done (took 3.885489596 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078840365 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081628447 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095369295 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078304004 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095568839 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078675865 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09541493 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079199713 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080062137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096084295 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080816719 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098112557 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080855753 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097404943 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08105753 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097548883 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082376335 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078142964 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095429309 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079159673 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09743126 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080759315 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097865735 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079142986 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078134219 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098443646 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078809288 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095607649 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080887002 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095911841 seconds)
  done (took 3.320311613 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08683192 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103549827 seconds)
  done (took 0.897958968 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077175332 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113845696 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079034209 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101786237 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088093895 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099535544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092335333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104360992 seconds)
  done (took 1.464284717 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104083209 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119405813 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088102496 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11193647 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.101367602 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117814519 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167077191 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088295309 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107433852 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082837336 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119878734 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08190702 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110414748 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105147478 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092010479 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114327521 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081444923 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109381061 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090832965 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101615309 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087630579 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115698825 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092989884 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107481081 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084634967 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11142991 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113223165 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.094771029 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104630038 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095121022 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107194051 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07613151 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105113541 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08883671 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097666854 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101275739 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117493816 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08764515 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109734295 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088093287 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110552629 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09427537 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094088785 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106430408 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097708353 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105203759 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088707921 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094806165 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084440127 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102973492 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078659089 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102795319 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077336377 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109005345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092809045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119324864 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085867264 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104600097 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087810015 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102958499 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090302179 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104274533 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109812658 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086760635 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109671707 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092348797 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107725028 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077840103 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093264205 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081369565 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109612285 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108923011 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112429764 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089161016 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107084854 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081222158 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106343736 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089278577 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108134646 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111480359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08915531 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108244429 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094408746 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104292981 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087651813 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108249484 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08531112 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103828899 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083803035 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121431147 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086212544 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098204887 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084536611 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111389899 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087851801 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104711971 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085056048 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110651919 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077160622 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106068873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089601233 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108283323 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096306759 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107410213 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105567512 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094087013 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112232615 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088305671 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103854267 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080196571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10608852 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085323306 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109001296 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077842316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105555834 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087969869 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107002627 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094613269 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102832966 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089466391 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111532218 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095711591 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103756706 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080088464 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105306416 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088170505 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109419404 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095184852 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103287209 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078834836 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096188833 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092191892 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105113861 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089681628 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106252906 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089555017 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096695478 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081726426 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105894627 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095092731 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105052446 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107939003 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093776489 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107695406 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087511424 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111405693 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086845203 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101028417 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092409028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105196816 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078867186 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110329235 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087441773 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103195858 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088798149 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11098423 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088118827 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106759363 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086585025 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106932354 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089482079 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101578004 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089104076 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104497529 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.104319987 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106310744 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078156289 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099062059 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090119184 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102367177 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086985696 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10108404 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088393026 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107275549 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081690022 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104650663 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087099062 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1185293 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096339873 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10729278 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108619776 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096466206 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105609722 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090682441 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105177912 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090562637 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.107410453 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093446964 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108754403 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088979913 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106086392 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080250166 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107630185 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094853762 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102075933 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081565792 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101634492 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088836636 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113337318 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089237792 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107220942 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086354863 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107985911 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093586072 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105451264 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088726644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.1021435 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088843348 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111261196 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090378742 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107972829 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096091656 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10855983 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079391591 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111021265 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086271997 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110143655 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079339306 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102546438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085460698 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108151813 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087246625 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105180913 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078757518 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111850269 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095288316 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.1076263 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084558779 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107183462 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098275367 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105322123 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10993689 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08960971 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109530092 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103265147 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103173888 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089485372 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114782315 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089179805 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096946451 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093298015 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105124593 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083547134 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104970208 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086518512 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107577562 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091621132 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108241457 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07875439 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106767496 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086652983 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102929619 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080370955 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113273432 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090783533 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107089859 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098298808 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108669428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090435892 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111135968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088146838 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.109183674 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08957889 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108979047 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109024195 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088142459 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084298248 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108808819 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084069685 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101039173 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087794752 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10858453 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089934047 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109627302 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087524791 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112869646 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106999181 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090471633 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125732052 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103869765 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085718175 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107402443 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092546234 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106353781 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088858366 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097618994 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095453659 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106102901 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095456393 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106304181 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081770026 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107610776 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08900057 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109172454 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090357063 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10814803 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088326694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106541425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090268137 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117422717 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085984041 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114625912 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091923874 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110443444 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089369184 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108403705 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087709147 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103809711 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089976601 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109614358 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090189922 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107810571 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091775858 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109921906 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106039204 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089133487 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108455534 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091293105 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10940426 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079630911 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085641774 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104837418 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090210184 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113112886 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107582683 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088126842 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087029813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111154705 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088691512 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100627147 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093719644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110320275 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090277259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119515498 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102878687 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091284849 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118690854 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079456635 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104706963 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08405374 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104901602 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09596832 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10892953 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096856075 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108850998 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086005086 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099693728 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09146692 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106218417 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080017092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100930893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094040907 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104363744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088761671 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089999691 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111015783 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108891502 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09489879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106501677 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090341878 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107995799 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083316389 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103484304 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086078288 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10753942 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.092120043 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103876386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083333613 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089194375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109688741 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108088628 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089650921 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087978207 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113810123 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106854489 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091218415 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112484964 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080579676 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108466938 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090243102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106898497 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086284621 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108838222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092898396 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109860042 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096542667 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107712382 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093040499 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108436055 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084347633 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107516238 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090419831 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108396411 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08702246 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109359925 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097342112 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102100803 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090939923 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108923775 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087997128 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109861024 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092168531 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109345916 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09505049 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109402051 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090599162 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112988103 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090366829 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109977281 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091580159 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107929656 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094745109 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105283764 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11495632 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091876891 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109384987 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089693522 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104333983 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090521651 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089889396 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107119303 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114341393 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091925993 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103457515 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086647663 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083448977 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110158081 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113053818 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09749865 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108862034 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092129784 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099723707 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08312593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109775004 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088190574 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107794856 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094772877 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113919249 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091668298 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105960101 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090306592 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114628813 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09603796 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112361716 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087836142 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112294903 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.092495547 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109421535 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088335479 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109578735 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092661818 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111649335 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089703235 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106581691 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117692743 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096052753 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110609693 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090150772 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111869717 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09091132 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100584313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093240921 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108658732 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094150317 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109763315 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090438477 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12044339 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086559644 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108822408 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095074799 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108346903 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095524783 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100901309 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091412832 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112212828 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1096642 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083257443 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085839495 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107482586 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09111831 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106213837 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081617344 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119316515 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114006927 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092345324 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107499614 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091006288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099651319 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083888392 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086274734 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113897695 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090643334 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.119803167 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105737432 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087511987 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082754916 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111655251 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09226563 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112795206 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084203702 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10281864 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087738077 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110575597 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116940056 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090516021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090736421 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111802362 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109112122 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085730076 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114103775 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084484591 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110346887 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103990873 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110135013 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094427452 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113070234 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097566963 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111589715 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082398737 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111263213 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091498776 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.111088098 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.09203898 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.113756087 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125432462 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093004885 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105600216 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091024486 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109396262 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088390547 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117431971 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093902821 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11145406 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093920317 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109303361 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094857618 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117675432 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093556043 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1114225 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092336637 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.110225241 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090624398 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.109129784 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090067236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114243719 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09301231 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11027633 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094504997 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106855142 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121030634 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099444491 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112612573 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084550856 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106424823 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08836127 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082795391 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.114722651 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085064813 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.109552089 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.089259334 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.109632676 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095354612 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111953804 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091896165 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113374274 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091627368 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100555691 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095588209 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.11086158 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093580204 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103586206 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091740222 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114260591 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095450809 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116270245 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10696491 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092715644 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108728946 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095596668 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101213344 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095581578 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108460825 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091045988 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105488752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092879371 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111130401 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094851974 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111152372 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095372717 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109962583 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097895068 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113054633 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085491363 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103046647 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096408955 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103641538 seconds)
  done (took 59.930535615 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148005917 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087784743 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10118097 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083794711 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128685459 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084005965 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102385908 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08443848 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103231211 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096746121 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10376439 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083095617 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123529698 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129602877 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126821127 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117446585 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084170715 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102986946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083969504 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102359832 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105111016 seconds)
  done (took 2.93811898 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10362022 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116942627 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118233993 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105326469 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113306602 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119682964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099905118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121745188 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123645921 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114403891 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.106135301 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120237644 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114827218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096300845 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114842641 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116871158 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105661602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112671291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120933811 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100779936 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118745467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118602148 seconds)
  done (took 3.241152953 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092172815 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.090685241 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.116735764 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.085180884 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.110574543 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.085543233 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115091418 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087734827 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115562727 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091559911 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10771092 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092543017 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115590538 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086475891 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10878804 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088000151 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114907293 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091945897 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11295007 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086082289 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.131189596 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103889376 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.086712251 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.088249686 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122102168 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092459 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111076399 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09125918 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.108561249 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091559202 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106820824 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093568502 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114067906 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089940552 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108280621 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.091385559 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.111162212 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087157316 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.107392402 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.096129637 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.105647543 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.093183039 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118277567 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088742763 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.107325208 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094266491 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110892835 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.08675013 seconds)
  done (took 5.591096822 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.1201511 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162295867 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093672133 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166544024 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127117947 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114198 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096989694 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153391413 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109432216 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.092023302 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129966169 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126524229 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.093957747 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.122000697 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096291744 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113625833 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115178106 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104684445 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118318474 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08721363 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121441178 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.115014362 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107100642 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123712602 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115388494 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092468751 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111126355 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103861319 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123090264 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117915015 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.098113981 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123150765 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.138151848 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094958396 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110252824 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113041213 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.108997455 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112112304 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095512667 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11185344 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.113198839 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104841976 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115097086 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128901836 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.094253548 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114196903 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09510408 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121809091 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128368587 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094852853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121152492 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126022696 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098213045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112360882 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098343604 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132469527 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113164504 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.092046925 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116232129 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122915882 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093286121 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128821366 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1123329 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113826834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121448358 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.106075417 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.116036366 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116265659 seconds)
  done (took 8.63956578 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095085771 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.136187084 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128572034 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109551505 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117841229 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116381546 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098832175 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116941557 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098381878 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124184485 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117273343 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.168481967 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092155973 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122536514 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097953317 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11827277 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116019842 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098884353 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116960359 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097615691 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118377314 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128673977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098074873 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128634332 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130502729 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109900809 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098836344 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117646482 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108586321 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118512624 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12973489 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116978284 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098961575 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128042398 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129666271 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.099068476 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108355007 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099049069 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118375704 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116858437 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093396528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129052384 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097839894 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111902896 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117235279 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.099626329 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128817414 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130859853 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122803221 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106935994 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117529773 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128868574 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099991755 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118236178 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128200491 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136889768 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111064549 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128887623 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11834932 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109010026 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130398494 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136995177 seconds)
  done (took 7.959943768 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085549693 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089486735 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.107607195 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.087273902 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109808817 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087518662 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109498963 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.090206702 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089218929 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.110843876 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089969718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10677579 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087617493 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109170546 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088264307 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106290419 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08805181 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087047031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109380877 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087998374 seconds)
  done (took 2.696494998 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093532629 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130059387 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090753223 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117543909 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09238213 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.118227291 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110662893 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094120114 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109223017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094127086 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122421413 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10239051 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113330888 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116395624 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103709394 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117175302 seconds)
  done (took 2.497986133 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106222775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120282563 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.136261417 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.096282549 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108703042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09849454 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110993872 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086356233 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105901566 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09878733 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.116601002 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.101702486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110581868 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088889196 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110686914 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.097304872 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105866244 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.095188995 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109694775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.116188588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11630935 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111749675 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092556695 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112197092 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.093813373 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115603941 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.097994727 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110218103 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088334715 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110891222 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.093136243 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118743214 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086365997 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.116234442 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08850604 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107991101 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090211356 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110687299 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.095712124 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111914853 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087842807 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.115180783 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090316792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112961189 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085982723 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.113099134 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085612012 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118682708 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.092691399 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.114131301 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109074774 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.099206909 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11669266 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102906411 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.120922119 seconds)
  done (took 6.526937375 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09910139 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113612716 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095669274 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108288211 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09389724 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.119023114 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095319824 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11324684 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092941617 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.107554793 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092836828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115443271 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092800792 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1149117 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092973768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114872391 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086367191 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11316347 seconds)
  done (took 2.637046854 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09151402 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110458329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100291858 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110909982 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092211511 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092548424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10766704 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088573053 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110540062 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090965081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111471735 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093374931 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109432348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.094043968 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111028483 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091605669 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114083735 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090007433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111767225 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08769474 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113276827 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089871911 seconds)
  done (took 2.989824629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103795058 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.144949387 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106153213 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.155165563 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.116522806 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095441297 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127632615 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096444358 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.134633194 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.114627265 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096357586 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.113990822 seconds)
  done (took 2.186351917 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1108785 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145090989 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082095899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108386377 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119329578 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094221535 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117428105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097134802 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128983164 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12874289 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095535625 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126173382 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125172448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120299949 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097232369 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116905372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108528875 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090161488 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105192246 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129850295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090507571 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121979661 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109142329 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091091878 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109327783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118695628 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10279167 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122141556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109073922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102358582 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11757247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109168706 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101503415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123221678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106681609 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120538449 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091234321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134150468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116857464 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100331661 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108269598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11769627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10230004 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115961918 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122498314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09201199 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122495661 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113213398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092339968 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141584883 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123973373 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126144222 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102613742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129253424 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125194364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142245632 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128550535 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126537604 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104219852 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130145684 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127391486 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124439411 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107637806 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131027374 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124150813 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128575871 seconds)
  done (took 8.335047857 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125622342 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104222373 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093668245 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131906999 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129353177 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116878182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097894007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117944623 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096736682 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114481857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163650673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115868585 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103575218 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129670268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116459502 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095176539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117402354 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128245451 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094337356 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14283397 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112097789 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120839191 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101054259 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120558949 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122289876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116797393 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091808294 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109879823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090374176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113401281 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116484496 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091791265 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121445472 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10176607 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101626765 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113258802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09249504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119133872 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109557284 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098231188 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121135779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130715799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110030864 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091234019 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123904422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110095921 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090807428 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116028069 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098846265 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115324289 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130697893 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13089222 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110837977 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128738406 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116838663 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096914225 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118172218 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116944488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091893098 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122981719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121972417 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091975774 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141840695 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110986112 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091383412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127642775 seconds)
  done (took 8.244039779 seconds)
done (took 158.798078289 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104361669 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.146671145 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.108554852 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177522958 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085380648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139779288 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118355267 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.120906337 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090804645 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114136066 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093737912 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.116014246 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158473041 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105998727 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087440194 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113990975 seconds)
  done (took 2.66207646 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181273749 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28988396 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112769435 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118016419 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094535782 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110466137 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089264926 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112684 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08641309 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118651116 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106563033 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089562079 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.11740841 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08919087 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106570365 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088515558 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117899658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088148134 seconds)
  done (took 2.906489908 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112166569 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.167456685 seconds)
  done (took 1.075205129 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122513754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183740921 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30148123 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.161223301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115939559 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127183483 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162097779 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124279245 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191763142 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126362474 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106879176 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.112834341 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135822067 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097748385 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115954343 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092811933 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140817294 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113176808 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095617679 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115614861 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.113644204 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114067261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116697498 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096889351 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182418133 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127222521 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092665764 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114356327 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113723989 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095710184 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119241548 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125462581 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.106015626 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187535266 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097092395 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.183394522 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100572342 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114775747 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094811882 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114789401 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116504295 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097765806 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130956357 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091158605 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114253338 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120922473 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.094778727 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112902509 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099827324 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122372066 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11937216 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097966934 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.181268678 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102079669 seconds)
  done (took 7.547055625 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.830124312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15659425 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112038754 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.933854761 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146040516 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125934868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.823435529 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113739601 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26142988 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.059375121 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139855916 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130417392 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227987355 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255363253 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.144138121 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334087807 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.70847711 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135049737 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124367491 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159601194 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120060479 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140415291 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110527819 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448063545 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113691774 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09016595 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118348153 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125849163 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162995067 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089890781 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116602472 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181260226 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288436025 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180555387 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112419874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090123362 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1110811 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171485772 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266658839 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215430316 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175588209 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087609335 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113854809 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102675279 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132777845 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085768313 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186869933 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176416834 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175058745 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115334941 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123123645 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099266866 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122704704 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163084305 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109280747 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.332411259 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338449199 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091346634 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120052245 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108413321 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264283099 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111202426 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202366577 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138837227 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211174159 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088553372 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782120492 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168066066 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111347234 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118768698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101396509 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115907833 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100768253 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170875601 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384265308 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125291611 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113957336 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09000232 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227478106 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089584442 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110306631 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166608603 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110354345 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099329345 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126894123 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124504934 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173861007 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251641663 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124596872 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098412944 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116622361 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122985007 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092160613 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218999955 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216087816 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179551724 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.215506166 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122376653 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.167724804 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167713832 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122638005 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174727937 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118203401 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128513663 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104069069 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215752426 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144958109 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090489184 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11681859 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117593885 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146594362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094370215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119575843 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171885318 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463872293 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189589955 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086856752 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116906752 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098721522 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163352361 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118402284 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26088125 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098570809 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190227567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096980902 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108325047 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098420942 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187268112 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104072775 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120297705 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123851449 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098525197 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273412243 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197657574 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127706752 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237041957 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180114343 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099397469 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196980002 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098352788 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191812884 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100438212 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122953954 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091440764 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77733737 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124378245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117662352 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096342416 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194941367 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110124623 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093733194 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089335668 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10863082 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807280397 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094294056 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108196611 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0931714 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119923273 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09815525 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118226317 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09506767 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185854872 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231417892 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102953421 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119297232 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091388607 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184549364 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092282933 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111973018 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090822833 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.111238141 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100703429 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116265777 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093340326 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194742556 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16220569 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218650745 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.527856835 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111353468 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090210615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229090335 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110481151 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283522874 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118240949 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224592007 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16879663 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108657539 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334968574 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.174143638 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195770437 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093170923 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194397372 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088368756 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117005009 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16443449 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089649552 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118989959 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160414863 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129359063 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125356591 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.131466109 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111661811 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232500102 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108425595 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172781763 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112336636 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103481673 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305811477 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112278438 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111503576 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183962013 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095737588 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110769026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700714231 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111327565 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101260332 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121054663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222156636 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16957731 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119295199 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098602965 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124343158 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16476084 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232215851 seconds)
  done (took 44.644505586 seconds)
done (took 59.62225616 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302690491 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273811049 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.308886147 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196392072 seconds)
  done (took 1.972168047 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181135729 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155505901 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127219596 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113711465 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15644644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09214054 seconds)
  done (took 1.643952199 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.479575321 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.370694693 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.338593697 seconds)
  done (took 2.01019212 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264569078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.284997218 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358921954 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.441644447 seconds)
  done (took 2.27414853 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20672411 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127251832 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104371334 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.144927847 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.181331404 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.176556429 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144835082 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152648744 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131353439 seconds)
  done (took 2.237567672 seconds)
done (took 10.956986108 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.272752832 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.257774684 seconds)
    (3/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.276601544 seconds)
    (4/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.173269069 seconds)
    (5/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.199537125 seconds)
    (6/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115383772 seconds)
    (7/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.118150234 seconds)
    (8/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.234764792 seconds)
    (9/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.16352317 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.160991943 seconds)
    (11/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.207270165 seconds)
    (12/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.19650644 seconds)
    (13/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.155113209 seconds)
    (14/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.262512178 seconds)
    (15/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.219834916 seconds)
    (16/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107293959 seconds)
    (17/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136350179 seconds)
    (18/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095459658 seconds)
    (19/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127214003 seconds)
    (20/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090634169 seconds)
    (21/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.138317597 seconds)
    (22/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125744232 seconds)
    (23/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.210135078 seconds)
    (24/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207547139 seconds)
    (25/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.201003627 seconds)
    (26/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.252717637 seconds)
    (27/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.241369662 seconds)
    (28/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.127008298 seconds)
    (29/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119289618 seconds)
    (30/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.200977384 seconds)
    (31/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.205031046 seconds)
    (32/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.120614029 seconds)
    (33/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.25764728 seconds)
    (34/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122697311 seconds)
    (35/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130146755 seconds)
    (36/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126123187 seconds)
    (37/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.216047096 seconds)
    (38/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120012618 seconds)
    (39/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.233607963 seconds)
    (40/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086065101 seconds)
    (41/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121026449 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120487477 seconds)
    (43/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.300687978 seconds)
    (44/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.135306864 seconds)
    (45/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112862996 seconds)
    (46/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.225042285 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104881571 seconds)
    (48/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10408796 seconds)
    (49/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.194789991 seconds)
    (50/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.187227222 seconds)
    (51/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.10013664 seconds)
    (52/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.126860858 seconds)
    (53/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145151253 seconds)
    (54/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139857751 seconds)
    (55/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.087002476 seconds)
    (56/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117317801 seconds)
    (57/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.076761197 seconds)
    (58/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.163881901 seconds)
    (59/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.204722079 seconds)
    (60/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118150709 seconds)
    (61/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.108565026 seconds)
    (62/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.203887751 seconds)
    (63/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098686053 seconds)
    (64/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120030219 seconds)
    (65/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09336924 seconds)
    (66/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.161585785 seconds)
    (67/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.130564337 seconds)
    (68/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097532225 seconds)
    (69/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.126879129 seconds)
    (70/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.133873889 seconds)
    (71/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.098651306 seconds)
    (72/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089634709 seconds)
    (73/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.104894446 seconds)
    (74/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.193729755 seconds)
    (75/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092937739 seconds)
    (76/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129418183 seconds)
    (77/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.14412429 seconds)
    (78/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.098384195 seconds)
    (79/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.139024725 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117946234 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094908485 seconds)
    (82/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.208192394 seconds)
    (83/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124815024 seconds)
    (84/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13136267 seconds)
    (85/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077569195 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.141289359 seconds)
    (87/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200427251 seconds)
    (88/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.132669711 seconds)
    (89/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113422895 seconds)
    (90/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077436453 seconds)
    (91/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110765453 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089768333 seconds)
    (93/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.190236037 seconds)
    (94/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.12735845 seconds)
    (95/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.077928008 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.141372398 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105315975 seconds)
    (98/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127304885 seconds)
    (99/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084796429 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116937475 seconds)
    (101/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.203123409 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102873709 seconds)
    (103/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.131037437 seconds)
    (104/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077249182 seconds)
    (105/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.120130501 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091688809 seconds)
    (107/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.145308123 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.154842273 seconds)
    (109/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093785228 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111060431 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093263148 seconds)
    (112/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19798282 seconds)
    (113/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151376942 seconds)
    (114/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218382371 seconds)
    (115/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131744752 seconds)
    (116/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.103099406 seconds)
    (117/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126705064 seconds)
    (118/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.08633845 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12697718 seconds)
    (120/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092515239 seconds)
    (121/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.097896454 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096231699 seconds)
    (123/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188077702 seconds)
    (124/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076233733 seconds)
    (125/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.09995181 seconds)
    (126/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092535718 seconds)
    (127/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.1065213 seconds)
    (128/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.077455547 seconds)
    (129/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125150025 seconds)
    (130/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077061768 seconds)
    (131/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118791176 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095831499 seconds)
    (133/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.204174143 seconds)
    (134/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.114657659 seconds)
    (135/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.144131877 seconds)
    (136/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.192279489 seconds)
    (137/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.190313126 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092436115 seconds)
    (139/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.130631282 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11665441 seconds)
    (141/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093385631 seconds)
    (142/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196417057 seconds)
    (143/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076003872 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.128135964 seconds)
    (145/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097330995 seconds)
    (146/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078155528 seconds)
    (147/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.077375081 seconds)
    (148/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.147595595 seconds)
    (149/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078118597 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118118927 seconds)
    (151/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092301215 seconds)
    (152/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.098625385 seconds)
    (153/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076613789 seconds)
    (154/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.1686152 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120458329 seconds)
    (156/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078592326 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126545887 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.103605715 seconds)
    (159/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140285846 seconds)
    (160/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078106551 seconds)
    (161/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.192919317 seconds)
    (162/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.084498287 seconds)
    (163/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.098857128 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092312521 seconds)
    (165/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.118660381 seconds)
    (166/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.116112479 seconds)
    (167/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.110179819 seconds)
    (168/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079240959 seconds)
    (169/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.098436678 seconds)
    (170/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078159884 seconds)
    (171/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114754371 seconds)
    (172/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095886905 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119394815 seconds)
    (174/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077578693 seconds)
    (175/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098838933 seconds)
    (176/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078371061 seconds)
    (177/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118109038 seconds)
    (178/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.191081444 seconds)
    (179/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.105798194 seconds)
    (180/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.098321006 seconds)
    (181/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.1424485 seconds)
    (182/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.099474191 seconds)
    (183/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095787479 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117803947 seconds)
    (185/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077400769 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117712135 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096148802 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11965008 seconds)
    (189/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100120318 seconds)
    (190/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.098969509 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090197286 seconds)
    (192/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1156211 seconds)
    (193/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077925026 seconds)
    (194/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.16576791 seconds)
    (195/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.077146365 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114840925 seconds)
    (197/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090211107 seconds)
    (198/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.098946745 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104348948 seconds)
    (200/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118682814 seconds)
    (201/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.077473325 seconds)
    (202/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131414271 seconds)
    (203/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092300018 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.101564023 seconds)
    (205/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078153929 seconds)
    (206/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077835699 seconds)
    (207/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100818632 seconds)
    (208/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.149750232 seconds)
    (209/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098170292 seconds)
    (210/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111675201 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.104314751 seconds)
    (212/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.098577341 seconds)
    (213/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.116828412 seconds)
    (214/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.128628373 seconds)
    (215/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.07725489 seconds)
    (216/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.098465048 seconds)
    (217/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078843126 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.14032797 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101598346 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.099286347 seconds)
    (221/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079462147 seconds)
    (222/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.078186569 seconds)
    (223/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100524706 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078598965 seconds)
  done (took 29.887613446 seconds)
done (took 30.713153718 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.392365298 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130536937 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123056191 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.100724436 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141886216 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107054624 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.124701094 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.102548331 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121731319 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090390558 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114579021 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123916727 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102086395 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.140969665 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104664495 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115419431 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092922841 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12594914 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.102333675 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125083971 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14319428 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098597597 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123651912 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092757206 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143054766 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103698115 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127088383 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101186604 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122648506 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091383731 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124770217 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114423347 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.103074154 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126365954 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09185175 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11537454 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092689221 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105727679 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0937862 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116085069 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100466295 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115044071 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103465568 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115819999 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094464898 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114350982 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091714602 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126409334 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092067008 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.125376559 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094200375 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127857598 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113170697 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091963013 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113176393 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094367472 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122838123 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092501537 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12407015 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092820589 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115715864 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092947339 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117438715 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093126752 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114681549 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094460512 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115430878 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094460706 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112382734 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094715778 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112312421 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093909058 seconds)
done (took 9.07989637 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097096474 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168797869 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144749136 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.12414674 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.142745113 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129363038 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104689862 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.138662625 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.123912838 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.116039307 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141839449 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135771329 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129244319 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12149954 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128901604 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0964636 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121018575 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104391948 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149824775 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139637449 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146047788 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09999246 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.142760275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135559647 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100550992 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149489234 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.099475459 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118825176 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099416737 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129072876 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.137875704 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.100097055 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120745301 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111411417 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128100084 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119306534 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.107186447 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118143914 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.096891718 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119210887 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.129787034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.111998282 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119338829 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.107184652 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118777945 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.100600797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121414832 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119976767 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101685336 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115892781 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100867465 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.142535842 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.137377396 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099857488 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.12016249 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100635548 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120288914 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.100317417 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.124013454 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122163808 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.097620683 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12117167 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.101380213 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139656975 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.120916294 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099687362 seconds)
  done (took 8.792133499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115337991 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152566363 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128457867 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107996044 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125607883 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089652026 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111954963 seconds)
  done (took 1.703990172 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09094148 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142651734 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124089189 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146559975 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135603091 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127481585 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130682857 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090858952 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138711425 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123046028 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119288307 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169775887 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115899424 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103102153 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148831253 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.115052758 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126921481 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.113448102 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099741499 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1456722 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119616342 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114168109 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.127680659 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092870489 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135406226 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094624413 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.181508915 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126907838 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092525523 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120480997 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096696423 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205716937 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114464801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124263361 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089848192 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142930601 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.11317987 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119954413 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139318921 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096918969 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135934328 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098270073 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121593774 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118959765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099091669 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129258121 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.10370355 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122666026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096948413 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142939876 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126522804 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114427183 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116429293 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096343847 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124599388 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098140833 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128784071 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096334988 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.14290633 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121816846 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117936163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140783454 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136520428 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118162993 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133376095 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.113071991 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.138002167 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122169372 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10024146 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122359198 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.117763249 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119177283 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.124356346 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107670635 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125798871 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120333419 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.141694367 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097260738 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127224268 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095929906 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118088717 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094903754 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.130827553 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097841445 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11790781 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131684007 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103985387 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120119551 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094988454 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.136892418 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118411448 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.103640676 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126957949 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097548443 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12943312 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.141938059 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.102604875 seconds)
  done (took 12.552858533 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093691483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.092742064 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121348021 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115494514 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093581992 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093256287 seconds)
  done (took 1.495640117 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123517189 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12122763 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109761264 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124888511 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.174754917 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.1418825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.121272298 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128112679 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138454905 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.110880767 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140938753 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.14322382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.119316757 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.126285434 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.120449156 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12571276 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143660984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097924834 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131372964 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096813136 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131437512 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125385425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097690079 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137969927 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102035359 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.125400582 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123962837 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.110269228 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130780271 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102994091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125637939 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124255189 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100494516 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124775732 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.120866333 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124516935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118919713 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.105045252 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123546857 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.102599473 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.14411253 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121864529 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108612171 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126915313 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102003942 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12385812 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12653494 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103307817 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143937162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.106069171 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127918847 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124007516 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102197712 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127277718 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100145579 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125796208 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.127518549 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121340811 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.127001389 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12395566 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099391223 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125459005 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102371316 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128319438 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122155989 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.10454109 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123517614 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101545474 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121144911 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100637979 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127926574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120924227 seconds)
  done (took 9.578447106 seconds)
done (took 34.991180996 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.073994889 seconds)
  done (took 1.951485388 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.869345015 seconds)
  done (took 1.750496477 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.325615861 seconds)
  done (took 17.238981901 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506158176 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.594934505 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.95408638 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164699287 seconds)
  done (took 3.098289829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.937360425 seconds)
  done (took 1.83708121 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.311176599 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261275281 seconds)
  done (took 1.458866905 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80679601 seconds)
  done (took 1.700251116 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.493273404 seconds)
  done (took 2.383043731 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348656723 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199535187 seconds)
  done (took 1.451447528 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.582215933 seconds)
  done (took 1.48068382 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.114656254 seconds)
  done (took 15.017808806 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231519498 seconds)
  done (took 1.143256527 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300374139 seconds)
  done (took 1.200933577 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.400713545 seconds)
  done (took 4.302472823 seconds)
done (took 56.900244676 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103086 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129910267 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108076762 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126194965 seconds)
  done (took 1.360667222 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106899228 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122873133 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103836858 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123684637 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109179559 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.123699543 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099230341 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.130303139 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099519924 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.127450009 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123853242 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100623714 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125041767 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099761583 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12180526 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.101112512 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127017479 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100076717 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124139358 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101375688 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124024475 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.123514148 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103476617 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124655186 seconds)
  done (took 3.64814378 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104049877 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097275947 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122925707 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097075899 seconds)
  done (took 1.325456436 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108322699 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139857433 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113538097 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131696874 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139309893 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114213903 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121132993 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096996117 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.12195151 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107642519 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.121712789 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.115702496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138895286 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116567405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110235872 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113802935 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093564174 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138555951 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.107112063 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.132765385 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096337076 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131383358 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.105034954 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134765922 seconds)
  done (took 3.76062301 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171903117 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13511961 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144126993 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167550648 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122636582 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.118419127 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121106785 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127793605 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.123411738 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.096460571 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.119435081 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.151902976 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125705614 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121250837 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096999787 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.125038444 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103730868 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125089028 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098455175 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.133955675 seconds)
  done (took 3.440911182 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103714006 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119691689 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092652364 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.1192163 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104204023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121945517 seconds)
  done (took 1.574195198 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09402504 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091885886 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116777137 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092423036 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.120907337 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092118007 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.113533464 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.092381098 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091221536 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117389362 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092640899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114869485 seconds)
  done (took 2.138038952 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.216792831 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119077485 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120340501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098163402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124519843 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095805752 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134683214 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096371133 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.175135554 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.121096286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11098024 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.173484903 seconds)
  done (took 2.497469539 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211940435 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101054036 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273599913 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370922783 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162014951 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168324747 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272924263 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169521298 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.188612104 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139865058 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207795946 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160152735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132472865 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182277164 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144671448 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187220217 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177328048 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203622486 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15249598 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240571721 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167852726 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169010543 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191892759 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130836479 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14023416 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160415512 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120022262 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107072015 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174340481 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172000188 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17484698 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150336612 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141303331 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20107106 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240255702 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179875572 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299590292 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135911826 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191489837 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193208449 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275146119 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143003198 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197643609 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157354827 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108539154 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206175873 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134257635 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205845939 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110876007 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144709435 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186009175 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178259924 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.182525943 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140494951 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300504567 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147770529 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148197737 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182748398 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194847151 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20211916 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169188074 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126920525 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188662246 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193093145 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183632391 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147375137 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168927804 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128322105 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179418692 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206851328 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180294986 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170838 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209586619 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111012626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165980129 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204178507 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13180587 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181371118 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164621456 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124237103 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127016069 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141039752 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131158665 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187226788 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102301519 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214328877 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139545339 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.290131922 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232114907 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136166207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163665409 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164898987 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169716355 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149879161 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.122201714 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148307993 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148321967 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159986313 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13454879 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159744517 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14830115 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103596617 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15522618 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12652044 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159994179 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112116002 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168520491 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168024355 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130983929 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168321376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126910636 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161115423 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172867922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223890355 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111365236 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136060971 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206019871 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161590159 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137713627 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186944386 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198525449 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174919741 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113765042 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196768764 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198291952 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119328333 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225260119 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119504099 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136662183 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.154061374 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161249864 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15963522 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158401991 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107624013 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153734496 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204272239 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.131075197 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138551114 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174988208 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104711468 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130491671 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120145931 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139417649 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144406991 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152163597 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.115881041 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156632409 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163009976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156482422 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16135259 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146299674 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194651808 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136514894 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.162870399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125843138 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12246826 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.18207557 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196855601 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132109739 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19028173 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170390574 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199556392 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165013085 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134311872 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184381579 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106477859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123298169 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16800926 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164083189 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165084303 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194537766 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19710878 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169553218 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155629419 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152774753 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170287828 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186491245 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158176832 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1492432 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165200238 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168841651 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09945616 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127470301 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10312242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144279628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133584579 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109501341 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207856199 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166956929 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189355759 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162984853 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141681904 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194781568 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103241947 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16711745 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174009731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142684741 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196231732 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193186967 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170453027 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146744095 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172676786 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122072989 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103801517 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135257776 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169535744 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109532018 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1388153 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146653132 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195126078 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177688059 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152792792 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205653611 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169671818 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230282772 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099338234 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167716339 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183788272 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16158018 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162210921 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133193296 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164028017 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191142053 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147122485 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1959853 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165563053 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172560414 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200286888 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16003171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134158368 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151760946 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1710074 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115807625 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174282887 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149749813 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138620118 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155582152 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.11297133 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129523595 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182764262 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147117387 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181724125 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.169788404 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175680608 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130126433 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146774841 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165144776 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121907309 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.120854103 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174566202 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198613168 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147036959 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161857885 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187499897 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133092154 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311421427 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201807505 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187170496 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140886005 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145245099 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138249603 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173026699 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1677401 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184873144 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147025541 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184429616 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163588192 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145610441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112101691 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151157941 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153351592 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.153660477 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135115781 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.129955742 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145891199 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186308645 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14856691 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163578099 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168186113 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15052949 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.132782393 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144248432 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212758143 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16267833 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179935955 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160471054 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178264819 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190771117 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128110322 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104968581 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130636292 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186578308 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109405879 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162320216 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.211534437 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200991509 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163279942 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171876126 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114511572 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127518866 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163219858 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150861701 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200681448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145305613 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138109711 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204636396 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153218903 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107734258 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167565854 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283659079 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147231794 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186532186 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.124465371 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27546891 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105740289 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134339265 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172282197 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17415892 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109224706 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185570853 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16878611 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148654152 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17310972 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114588603 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218053633 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212480752 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173416617 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177705257 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147484957 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162184515 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165694704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188724042 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146464196 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12168275 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165513415 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196332696 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222482649 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10940104 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166412535 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166131103 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163084 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17656583 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137266187 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192119502 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107815775 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167713965 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142859743 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127417756 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160566939 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.185582928 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136411465 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186834016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15925813 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110481151 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129270814 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153977832 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135407311 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146754425 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132483696 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181989469 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104279105 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166822036 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184166836 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134083876 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157407548 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123083818 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134310181 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145598821 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121967111 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140023623 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171689606 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195170475 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13414914 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188890931 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176188454 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169542846 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162706848 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120964133 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665736688 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130736149 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19449347 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123000516 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219628858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125820321 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168753775 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164440382 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15290813 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170901825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152402267 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22295164 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169518648 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.159524523 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108553938 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147837648 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149687907 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.107231963 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155356754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165908365 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144248531 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.113266921 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.159726999 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150172735 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148091683 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114503886 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225577108 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124582808 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184750209 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188131676 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144419471 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169437315 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176661159 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134812134 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164379555 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175175128 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145535049 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125848288 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135317388 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13927284 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183301455 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102020685 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164346686 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16392222 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16482766 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165278152 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110914443 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163632444 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146077603 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164437052 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102710819 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159430503 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162332856 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134541058 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104305457 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15892658 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162236199 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162970767 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128898561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148436093 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194182913 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127951874 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110056366 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304639959 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135963366 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22202509 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.128760087 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13983641 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147430429 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156419875 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.13022912 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163226942 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133137747 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107986934 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134648283 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184824689 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168297353 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159737327 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185522275 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163653056 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192380284 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110632258 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.268056276 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14318564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157970774 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.107359625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132747197 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142716122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111243155 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148907454 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193471564 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182100439 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15711858 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147660867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103726297 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129422514 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108639972 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175138793 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157444453 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162100151 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146313292 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093437893 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147563119 seconds)
  done (took 78.587858855 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157256672 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147814198 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150487405 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201996052 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17088753 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.260395604 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210085011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230857864 seconds)
  done (took 2.529943943 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106101772 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138894735 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144826245 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126764629 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12769477 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.344623668 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.139555075 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103425991 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.186791054 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144870575 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.126808768 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.611034394 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.103498228 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129261472 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.116389296 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126415126 seconds)
  done (took 3.767394812 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.123159071 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.520323841 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.735981864 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.243423377 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.227116472 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157056314 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708647193 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.185877315 seconds)
  done (took 11.899479043 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134040144 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146481925 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.258445875 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.178614765 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.163416527 seconds)
  done (took 1.886291576 seconds)
done (took 119.311777666 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101103496 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128017675 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101907971 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129328366 seconds)
  done (took 1.4530049 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114916135 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090500651 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118019533 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084270843 seconds)
  done (took 1.40700205 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.483047769 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.085266299 seconds)
  done (took 1.60602046 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12530199 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140116109 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.123112128 seconds)
  done (took 1.399925278 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108475124 seconds)
  done (took 1.116124026 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111102338 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.107780692 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.146184958 seconds)
  done (took 1.373357742 seconds)
done (took 9.35983469 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137032956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436088044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394104507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142474977 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72631959 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384448763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.087349894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16055257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167124331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09738205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141347329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676887835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.039127954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34744154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024964028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.434241136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705439417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097882058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129935467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097941967 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.06595183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097412449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124340227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097433918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702996486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400470605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12447767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.469546765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09685014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127545482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387279599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121767185 seconds)
  done (took 17.240176136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140355547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18447485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135235103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098844792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127726091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099052569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.132639487 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109217124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182168512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126569754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116409719 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123090923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101486513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123466694 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118353142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123223276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098878846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125918122 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102985114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125834604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116320947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124113504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097898023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12579268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095861997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135961996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096201876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134774893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095959908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128979182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127904204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098699037 seconds)
  done (took 4.880986569 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145679369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191902703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134941738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132283011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177601852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124442046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.208213291 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.131832296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186308979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125738581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115043783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123155884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160301635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098942079 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145535097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097205059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126378419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099013727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130030423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098065963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14363225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098939592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12446223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098454514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123824456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110381415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123881684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133784668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097236906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127278759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103617262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122671346 seconds)
  done (took 5.177630799 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104794393 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129503216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115285986 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142059766 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100743857 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129724384 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104970691 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126139487 seconds)
  done (took 1.967588622 seconds)
done (took 30.274404534 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118818776 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140720849 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.111867005 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.132789427 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132823824 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121261214 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.109471748 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097927814 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13510923 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114586351 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126466947 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.097634745 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139012108 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105904636 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.139559315 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.107074987 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.145113448 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111904038 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.125821876 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106874908 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125837158 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.11787167 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.130352331 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098254081 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.150419317 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132537052 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.115147507 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129393887 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102845313 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.10117429 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141364475 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104405847 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.125265706 seconds)
  done (took 5.004317612 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.12569051 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.169491083 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.100262868 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122454158 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.163550794 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.095642184 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.150154873 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.095020675 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122089688 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.095910754 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.093664029 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.149237955 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157333769 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.127911441 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176802663 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164014616 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.126032045 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.161971561 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.149464583 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.134135331 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.156295973 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.099495721 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.155841159 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.165008718 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099219155 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122985596 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.139984449 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15832099 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.166716891 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.134491369 seconds)
  done (took 5.101344298 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105869794 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141087619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123332226 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.197948871 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166470425 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.112381903 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138077806 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.115192614 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.153401956 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.096619464 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.136226887 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.155471898 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115077221 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136187897 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104140242 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138847091 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117624223 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.126750854 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104778878 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143943854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115333872 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.138874636 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112450246 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13563336 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097296278 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134203243 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102271148 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139689635 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131592561 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.107592844 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128407483 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102743802 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127370974 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108385809 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127899065 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106050301 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.147595943 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107557141 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139527259 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.159406938 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108633022 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.129036345 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120728459 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173849738 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10004221 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13380067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10842326 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137829422 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097339848 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145169522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112473749 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126094871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.140203731 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098602636 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123729053 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106527799 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099383361 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128463577 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133785711 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102543221 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.144429338 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.106799304 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132699785 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100338767 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133084599 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098928863 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122933582 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102689231 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149946313 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103789533 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158495364 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098563153 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132088461 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10682076 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132286223 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107788987 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125847951 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106003157 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134628978 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10422149 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134791868 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100719074 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130953258 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115777853 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141555829 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133287065 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103074341 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132372402 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101432978 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127128214 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112464404 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.126898594 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101887588 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.135641375 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09952287 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128665861 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104768008 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130522251 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097552812 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146608039 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103735907 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125419222 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.116410469 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126910327 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102367562 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134685907 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111048896 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126713611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102750804 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132259884 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097733145 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132188949 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.1024727 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126432797 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110521885 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.1382238 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104500756 seconds)
  done (took 15.360248425 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245499749 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22505826 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.198668422 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309322941 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149662636 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124376157 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223484078 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178600113 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.127481955 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166627129 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.182214424 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187168944 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.098433604 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.160099701 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.226444981 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.313904402 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159476474 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167257178 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.138602 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.148431724 seconds)
  done (took 4.77059777 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114531191 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166143077 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155708149 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124291092 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128815654 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112364052 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128923342 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.143244838 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101059845 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133679349 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098183997 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.135588499 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101801466 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130108867 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.116150146 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144794775 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104975043 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134320548 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144161795 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104770546 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128398148 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.147929315 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.10845777 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.15746167 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106965171 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142587299 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097215053 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134405224 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095631242 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.127362538 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.104333615 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142704089 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133916554 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.100875905 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131831666 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099272873 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122782434 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100996683 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129706349 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103215063 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143256482 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10286538 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127354894 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099550715 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135298967 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.096399282 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104419022 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133683335 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.131665703 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.108139601 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.133372534 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104005746 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.134857905 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11116739 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123738169 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.108650169 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.140355467 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131064054 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.105748173 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125380915 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098043933 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102329422 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.127046166 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104087261 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132489297 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143132126 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.108140644 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127844259 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104676265 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132080519 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102706436 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145137146 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.146441819 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097683154 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.123981867 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.120886284 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095823648 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.114835976 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10816336 seconds)
  done (took 10.620078918 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127244409 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129360112 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118524156 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.162868954 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.118467873 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.137537715 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101025659 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.149247747 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.1075915 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.137389606 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.105817103 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142533429 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156494448 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.112508521 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128562488 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114379809 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134753977 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.139386298 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149884046 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160795557 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.110929609 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133049315 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112803452 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.14057143 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131324427 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.142390243 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162791362 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105779881 seconds)
  done (took 4.723915895 seconds)
done (took 46.595786299 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.156988308 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.318776807 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.104556684 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.104267656 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.125469962 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.121426729 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.106133568 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.298959519 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.77958142 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.094855058 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.105399741 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.114638054 seconds)
done (took 26.465200429 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.165964443 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.685679402 seconds)
    (2/2) benchmarking "String"...
    done (took 1.422633565 seconds)
  done (took 4.145111471 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.104610995 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.105339914 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.349914055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.115051652 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.106134645 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.119895749 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.105060366 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.11062581 seconds)
  done (took 15.042867112 seconds)
done (took 24.49027977 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.126342842 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.288001547 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.372958569 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.133097535 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.107669336 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.106450758 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.111951925 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.128708673 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.115459815 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.098246263 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.106066054 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.364970792 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.095336688 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.474404157 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.099269392 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.107924737 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.12218052 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.326714666 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.109226916 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.144716773 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.095406665 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.095046422 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.161728797 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.124965288 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.139536008 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.110201602 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.151079112 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.094293974 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.27946921 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.133126061 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.146818805 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.109230463 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.161603331 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.107869256 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.214576597 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.133996422 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.277071103 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.119305178 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.09500048 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.120203914 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.277405107 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.489718916 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.108606048 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.115683771 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.112195052 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.143784129 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.096213137 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.817415765 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.109307922 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.112057444 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.157239751 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.486346732 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.115640318 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.110019252 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.136818396 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.331177388 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.128956315 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.124091123 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.133465687 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.122406927 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.126350623 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.1143784 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.155400079 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.111694769 seconds)
  done (took 137.181702159 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.110094732 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.113341018 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.113258649 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.167772949 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.113982034 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.113694446 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.110560682 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.10973097 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.111435257 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.141773888 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.114101064 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.110970033 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.11666752 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.108938365 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.110812546 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.123868395 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.111672496 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.111134154 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.112850336 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.111645933 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.129545575 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.112488544 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.126995457 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.112654461 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.143671325 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.201039394 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.158118531 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.126173657 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.109682045 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.111102423 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.144061795 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.174663935 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.693334329 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.9679693 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.125574857 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.119432078 seconds)
  done (took 76.931981031 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.111685556 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.111922716 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.112839722 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.141824722 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.112215554 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.652389094 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.654612492 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.836065472 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.390052382 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.344849143 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.329757684 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.11475146 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205566044 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.126924401 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.11466728 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.13012492 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.140758475 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.116520653 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.112955892 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.653323214 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.129289354 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.120530026 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.296686631 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.129990367 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.144356918 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.509424423 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.113825365 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.14361546 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.438504696 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.161356637 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.11441311 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.419973583 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.168773254 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225226406 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.11676328 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.143990417 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.114105087 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.390024957 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.11577843 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.116685706 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.117932294 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.115700473 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.71765353 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.115674154 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.656270151 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.119507204 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.012580054 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.115188065 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.115862507 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.18595496 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.671922974 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.130002922 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.116088643 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.117882944 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.115339309 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.115438489 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.145922518 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.123497957 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.208193386 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.118015424 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.118675772 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.145830601 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.115908372 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.348722104 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.117022777 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.638780528 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.191128913 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.331813262 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.656217396 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.120583826 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.211312628 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234032874 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.116772362 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.116782418 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.116845223 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.115609007 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.225266891 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.116860701 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.508418545 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285902122 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.13432209 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.362214604 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.215769427 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.117397387 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.117631781 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.473709079 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.119578397 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.118059894 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.814505467 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213002848 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.117672656 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.118638038 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.118310483 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.117784067 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.509835803 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.660363615 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.333454467 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.121387523 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.401424901 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.122943934 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.11790604 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.519823497 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.639589752 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.746763692 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.119720128 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230423036 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.28846409 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.137215019 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.119650205 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.328981728 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.120032337 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.177682146 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.118825453 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.51669969 seconds)
  done (took 355.127373838 seconds)
done (took 570.273606673 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.800843 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.744977762 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.876075152 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778558092 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.749191394 seconds)
  done (took 9.993468716 seconds)
done (took 11.036892145 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.305076968 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.30454397 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.177881688 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.306067221 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.151950436 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.324621506 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.285268494 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.141508296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.222161586 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.197372478 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.223433212 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.176697851 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.154401503 seconds)
  done (took 17.015609781 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.3762085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.122518949 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.19937262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.362934257 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.160590568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.372396605 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404035222 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.122406671 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.266798731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.133282987 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.133924242 seconds)
  done (took 16.700783719 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37620011 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.12248634 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.187725653 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.364580629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.161812943 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.3794088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405219272 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.122730423 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.261670116 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.133908574 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.133984487 seconds)
  done (took 16.695965506 seconds)
done (took 51.456253342 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.161114268 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.284183343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.149178157 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.138098552 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.1312899 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.1333463 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.136545237 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.132404601 seconds)
  done (took 10.313144652 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.127391742 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.127172289 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.130944271 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.128750588 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.129615981 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.130252124 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.1284581 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.13016409 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.130685418 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.130865201 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.12840883 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.128488351 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.13148958 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.128195074 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.128063438 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.130821896 seconds)
  done (took 19.117703485 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.130927802 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.129256455 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.128114487 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.128171777 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.128881217 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.129043628 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.130513167 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.129608908 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.128630832 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.128819782 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.129555843 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.128607247 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.129638932 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.129922622 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.129595517 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.130596739 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.130130553 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.129497042 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.133866925 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.129110662 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.131046841 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.129554443 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.128947129 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.128840435 seconds)
  done (took 28.16078343 seconds)
done (took 58.637889375 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.124602323 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.139771414 seconds)
  done (took 5.314172721 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.192900216 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.195493275 seconds)
  done (took 3.437839675 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.133155418 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.133254042 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.133182646 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.132890371 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.132571291 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.133604084 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.133821536 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.134079613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.133013632 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.134477609 seconds)
  done (took 12.38416409 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.134045561 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.133448814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.131568984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.133320639 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.135025175 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.131281672 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.133419923 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.132422801 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.133863728 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.131285811 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.133584612 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.130517665 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.1338475 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.131161756 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.133795205 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.131835304 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.131617498 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.132341272 seconds)
  done (took 21.438912517 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.147726083 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.155040441 seconds)
  done (took 3.353671851 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.272603883 seconds)
    (2/7) benchmarking "second"...
    done (took 1.173074755 seconds)
    (3/7) benchmarking "month"...
    done (took 1.247635374 seconds)
    (4/7) benchmarking "year"...
    done (took 1.238361113 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.172713044 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.15217356 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.174491333 seconds)
  done (took 9.482670097 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.136917081 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.323173197 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.431846144 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.700885884 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.136189344 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.139072462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.012040409 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.139757834 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.141707986 seconds)
  done (took 13.213448469 seconds)
done (took 69.67403225 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.127812027 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.159142375 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.135899005 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.144328981 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.473313075 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.128325149 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.132608463 seconds)
done (took 15.353576644 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.119690448 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.118785538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.131573417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.136940447 seconds)
  done (took 9.560086503 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.117604233 seconds)
    (2/2) benchmarking "read"...
    done (took 1.494730054 seconds)
  done (took 4.665546262 seconds)
done (took 15.279385892 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138168739 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.133994944 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.136088869 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.136076449 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.133774249 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.136467143 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.135168208 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.135188367 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.137287387 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.137932085 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.135110534 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.136642792 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.136282333 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137152449 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.134425308 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.135320774 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.137413747 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.13500521 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.134806794 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.135396238 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13802069 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.13518388 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.134795201 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.137814181 seconds)
  done (took 28.316498813 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.138705555 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.135060898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.138623291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.139244744 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.134309582 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.14011023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.138632332 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.13676364 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.138741815 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.137994003 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136551958 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.136793677 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.139780826 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.135952168 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13851809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.136729648 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.138531439 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136413382 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139623763 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.136120866 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.139112148 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136489925 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.136869316 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138269428 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.136733499 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138363662 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.138541045 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.139008009 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139467515 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.137442366 seconds)
  done (took 35.189380731 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.144672584 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.147847432 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.139914769 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.139917433 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.140082148 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.140027244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.141353843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.14030169 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.140479354 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.14014983 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.140242667 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.140777422 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.139932551 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.141059691 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.141346754 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.140135769 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.140863769 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.140758791 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.140004548 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.140751086 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.140207357 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.140329851 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.140427585 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.141201231 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.140459131 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.140935506 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.141812119 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.142036961 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.142532308 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.141447983 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.141332079 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.141107631 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.14203374 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.141963668 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.141693214 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.141634632 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.146884844 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.148318135 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.142006813 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.141747526 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.141310362 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.142538926 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.141924222 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.142267867 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.142565429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.14172898 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.141616692 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.143275025 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.142996853 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.143250126 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.143252351 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.142634768 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.143375314 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.143995064 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.143913405 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.142870417 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.142727555 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.143346328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.145333091 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.143952499 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.143084167 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.14404797 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.143064601 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.143539556 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.145818809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.144119013 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.143037556 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.142321122 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.143294073 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.142954985 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.143900141 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.14390272 seconds)
  done (took 83.301427657 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.144524326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.142767335 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.141456748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.141884097 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.141677703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.144910297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.141086157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1438139 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142293729 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.145623196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144906297 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.144465998 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142697382 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.145099251 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145356797 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.143855827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.145638864 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.142737085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.145050973 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.144711499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.144625259 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.143357565 seconds)
  done (took 26.223186436 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146521993 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.146631382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.142513728 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.14876146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.14296986 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.146891551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.145926901 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.146076782 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146537068 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143295655 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.143343895 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146307448 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.145300528 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143597805 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144420099 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.144913341 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146623509 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.145404109 seconds)
  done (took 21.678457925 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.144982288 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.144749899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.146891269 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.144537773 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.144629203 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.146924766 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144614756 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.146045694 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.146313647 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.144937897 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.147062712 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147302767 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.147085051 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144372579 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14678767 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.144000637 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.147558633 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144323305 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147656903 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145869153 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.145208848 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.149063304 seconds)
  done (took 26.274711442 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.147810144 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.147032318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.145601748 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.146326495 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.1447392 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.148715626 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.148681829 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.145927136 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.150343442 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.149807668 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147145928 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.148141678 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.14813522 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.145083819 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.146714305 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1465881 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.148544067 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.145951073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14803688 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.146421692 seconds)
  done (took 24.009498513 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.150000101 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.15086692 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.149660958 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.150168273 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.150478853 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.150744055 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.15103588 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.151911203 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.151244104 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.15194445 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.150952272 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.152249116 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151912987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.153045766 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.150924902 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.152081342 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.152981539 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.151922175 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.151563498 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.151522002 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.152452767 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.154137088 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.152181374 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.152145883 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.150407601 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.151073031 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.152378749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.152816909 seconds)
  done (took 33.31006568 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151150368 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.153449731 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.149270691 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.148931283 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.149682529 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.15030976 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.149739801 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.149160825 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.152511002 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.148921508 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.153028985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.151663405 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.153048582 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.154883657 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.152457157 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.152747141 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151888394 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.150481645 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150493101 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150033192 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.152737075 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152721283 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.15394721 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150674959 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149597269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.153113718 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152136951 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.150948916 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153113542 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.150829063 seconds)
  done (took 35.610724678 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.197442305 seconds)
    (2/2) benchmarking "in"...
    done (took 1.192414695 seconds)
  done (took 3.457780407 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.151927136 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152914117 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.154443079 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.151019001 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.151016663 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.154379925 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.152800718 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151347858 seconds)
  done (took 10.289021585 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.155398249 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.154191539 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.155278329 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.15387291 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.154671668 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.155346792 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162227747 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.174437506 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.155667941 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.156523057 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.162409513 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.164244986 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.157654288 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.155563045 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.154790699 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.157618914 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.15536496 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.15600342 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.15754304 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.155989075 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.156164269 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.15796608 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.158293105 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.154447346 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.157781915 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.167507358 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.160722086 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.158756971 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.155926098 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.160207165 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.156425558 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.152960777 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.155655763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.156992978 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.157143364 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.156715177 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165745942 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176476405 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.162974728 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.15663512 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159185083 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.154483555 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.157834062 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.157998751 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.158263737 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.157818985 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.157771248 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.155318542 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158269093 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.160618764 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.162084046 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158421194 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.15488581 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160588747 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.158863855 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.164569657 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.176496624 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.161043056 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.167177173 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.168976089 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.170655776 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.181653919 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160989749 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.158026176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168910003 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.182365797 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.165308343 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.175487077 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.156675811 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.15902841 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.166573925 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172165763 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.183517943 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.159259818 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.160132824 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.158890501 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159143219 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159666668 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.167361797 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.181776036 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.159778255 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161471791 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.169196656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181516287 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.159915824 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.160749339 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.159751721 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.160748796 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162461228 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170108462 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.178773445 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.161315381 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.159858377 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.160278251 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.161325671 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.160579705 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.160630606 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.161824868 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.15887499 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.161983291 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161984132 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165531205 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.170299758 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161859893 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163125579 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.169355059 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.162609155 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.162158078 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.169734986 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.161993106 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.16176766 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.164874367 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.168389399 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.160990727 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165533895 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.170388233 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163419664 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.16438062 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.161289447 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.168613792 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172217452 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189129745 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.162691572 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.162675148 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.167824305 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.174426912 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16372917 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.16441783 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.163739702 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.160350616 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.159327047 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.164404553 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.163466491 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.163954464 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163089898 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164042 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.161991466 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.163450293 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.164203713 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.164638717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.163836012 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.162885597 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.16489757 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.165269985 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.163446696 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.164844778 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.170080217 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.162881743 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.164838908 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.164781176 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.161182702 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164055682 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.165355689 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.163921518 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.164534687 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164207848 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.165626429 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.164577161 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.164655227 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.164532497 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.164635832 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.166495395 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169278495 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.166052332 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.169369135 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.164875926 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.162578015 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.165474662 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.165529021 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.165406212 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.165334553 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.165055168 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.169639897 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.173785762 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.166363266 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.16660551 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.16910138 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164911954 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.167186691 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167370289 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.169686691 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.174097295 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.166814863 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.173680791 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.166514151 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16668812 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.167806132 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.16622271 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.167029409 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167642354 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.170406762 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.174352646 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179542329 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190583035 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.168747642 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.171882364 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.169125739 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.17308392 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.172770896 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.167291381 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.168230648 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168575094 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16863239 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16732466 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169139966 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.167683507 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.167846127 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.168350714 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168790047 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.170319933 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.169625887 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.169225292 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168512884 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.165784411 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.169310136 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168613886 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.16845431 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.166184383 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.168003479 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.168254161 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.168933404 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.170204901 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.175913891 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.16585605 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171263336 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.170708981 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.168741535 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.168752786 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.169801276 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171112831 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.170378535 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176309273 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.188075486 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.17023098 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176015411 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.187928117 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.170262163 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.172431988 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170951503 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.168270881 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.173862657 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.179296559 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.170154062 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170828376 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.171164945 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17224429 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172244884 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.17762656 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.168028978 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.170629791 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.171822003 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.171657884 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.167844869 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.17161784 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.171352162 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.171360491 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171702603 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.170599964 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.171278498 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172600802 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.171205792 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.170899738 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.172351759 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175376378 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.179446326 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176823572 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.172348687 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.173791455 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.172004668 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.176250432 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.173283896 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.17166701 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.172726756 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18606656 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.196384204 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178682867 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.191677963 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.173976547 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180276998 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.192157264 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.177322064 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173240671 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.173969123 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.173426667 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.173196572 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.171012251 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.173520633 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.17370739 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174050719 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.174919002 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.177833467 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.173934534 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.175093412 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.17409946 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.174969023 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.174771463 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.174052288 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.174188388 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.175813348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175774877 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.171974606 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174279804 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180788309 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193703361 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.175192102 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.174102748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.173894794 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.174887036 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.175908333 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.173750166 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.178674306 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.182507555 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.178461453 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.184476729 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.177172102 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.184601912 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.175520708 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.179873159 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.182324869 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.17337208 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.175357009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.176019507 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.17588001 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183822988 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.193969439 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.177857348 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.179945892 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177331355 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.176129014 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.177522978 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.176175319 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.177175517 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.175698765 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186592472 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.199679198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.181099006 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.178744113 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.175671285 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.176365703 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.178044772 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.176968219 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180417474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.176480587 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.176854717 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.177011022 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.177848896 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.17783979 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.176636409 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.178218518 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.174777897 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.176338008 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.185048856 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.198551942 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.182263402 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.177716992 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.185555516 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177021116 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186969783 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.196224359 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.178817478 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.177919863 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.178695522 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.180529981 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.178746454 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.179562834 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.180552991 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.181169587 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.18424316 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.178366235 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.180988839 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.179509748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.179894585 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.18042227 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.19054037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202587286 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.181900544 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184106766 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.176934123 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.181607414 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.18362763 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.179340055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.179423816 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.183384279 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189518876 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187825713 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.180180235 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.179398477 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179537975 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179598859 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.180401123 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.181002511 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.179539001 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.180157715 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.180262136 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.664357989 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182613495 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.18039233 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.181475397 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.18136859 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.180772764 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.190381607 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.181333478 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.182486994 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181642672 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.181875622 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.181011537 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.182938825 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.180487458 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183712207 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181814233 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.183052434 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188402825 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.188018988 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.18395614 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.181202399 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.1822329 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.181884229 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.182472303 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182626634 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.181967337 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.182459722 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.182480807 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.181896025 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.182359518 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.182645085 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.181275544 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.182957986 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182192725 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184657474 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.189837314 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182708389 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.180187986 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.1819894 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184187306 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.182546795 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.182275371 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.190115739 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187533983 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.196174429 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.193989127 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.189061694 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.184780058 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187836757 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.19185408 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.183090512 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.184144098 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.183782176 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.185925285 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.183352656 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.186850987 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184403206 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.192366602 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.18488585 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.184948072 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.193408821 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.206408129 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18514994 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.189006242 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.189540232 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.184746302 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.182109135 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.185388679 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.18469992 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192520726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.204934472 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185009109 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186086243 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.184995614 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.186144117 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.190348649 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185742927 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.185064504 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.182927289 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.186591232 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186470242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.186898807 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.184393279 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.185546602 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.186590608 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.18973786 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.193805318 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.184317468 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18703556 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.186849348 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.187764425 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.186969916 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186681427 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.184537815 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.183175559 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.186406234 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186993882 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.187496513 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.189012431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.187071571 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.188942199 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.188535234 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18678067 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190204713 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.198134822 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.194827342 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.185507211 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.186352279 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.187142476 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.190312273 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18733823 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.18818853 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.189179088 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.189360791 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.187951226 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.188770933 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.188298057 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.191546265 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.205243923 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.209443943 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189410776 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.190654998 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192540504 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.190264731 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.186349884 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.190235741 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.19147623 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.192600514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.196606744 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.188589334 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.195786358 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209032853 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192250501 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.194074741 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.192182179 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.196721334 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.192655552 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189393624 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.190086638 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.194876287 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.207746046 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190961584 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200384104 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219283054 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.209712741 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.192293119 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.192413101 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190332439 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.190501328 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.193290132 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.189819475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.191198312 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191024 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.191439533 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.193244175 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.196648206 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.192308637 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.192552464 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.190501799 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.190753237 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.193145405 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.188517745 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.191586227 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.191648514 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.191592821 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.192604806 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.192468097 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.192729711 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204805204 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.218030788 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.19304942 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.191348912 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.190553831 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.19574928 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.196864315 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.204302828 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.200445165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.193714096 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.1929014 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.194402332 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19375377 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.193478838 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.193218644 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.193175551 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.193095161 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.191913239 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.206335481 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218046768 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.197782633 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.192801944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19400146 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.193831017 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195087557 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193536268 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19494843 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.194507244 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.195367445 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197310684 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.194775117 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.194490836 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.197420778 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.202195889 seconds)
  done (took 703.050940645 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.191879517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192429832 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.192318759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.1913592 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.191926121 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192655861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192002647 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.192339113 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.191826189 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.191538054 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.19263728 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19275902 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19168541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.194975239 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192924815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.192747066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193055285 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.192835976 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.193216457 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192314273 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.192603784 seconds)
  done (took 26.148571767 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.195972424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.194066037 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.194087731 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.196665184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193961624 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196505781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.194055713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196551131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.195787226 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194351616 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196426596 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196747958 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.193736558 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.194022727 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193056099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196510227 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.196330851 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194623243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.19714038 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.193965297 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195671951 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.195288718 seconds)
  done (took 27.402368269 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.197619302 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.197027683 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.197025338 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.195567445 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.198178859 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.194521914 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.197542732 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.198649146 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.199258457 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.198836878 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.198080832 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.199602844 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.207295419 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.204442806 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.1989603 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.199201644 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.197796983 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.199535337 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.198469571 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.196669663 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.203206706 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.215051922 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.196968531 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.197524923 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.198152001 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.199382064 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.199924017 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.19778371 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.200714412 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.203562586 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.200499032 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.198818983 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.20172675 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.199303429 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.200780523 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.204057026 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.200407814 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.197317636 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.200500003 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.211039277 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.221504354 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.200173366 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.206192003 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.220315034 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.201052268 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.203845307 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.20989832 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.199371545 seconds)
  done (took 58.772855355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.791286734 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.804251237 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.797467107 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.80489223 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.804087054 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.80929164 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.810617508 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.809682706 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.801284215 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.798864222 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.803205411 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.801298028 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.805828343 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.802766568 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.802531798 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.802084974 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.799661939 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.802040252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.80942281 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80825402 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.799363711 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.802997345 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.80357672 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.803600381 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.803191543 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.802567393 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.803829342 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.802382237 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.800918869 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.799600838 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.804934999 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.809344784 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.810125953 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.796221861 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.801896296 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.801675888 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.804356257 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.804625073 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.804713666 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.803088076 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.810040413 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.805406007 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.806020742 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.809596187 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818522996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.80254154 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.801064934 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.802176093 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.808885992 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.804553622 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.805089573 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.8020815 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804759721 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.80259785 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.8049532 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.810734248 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.80838544 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.807520903 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.800808097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.802873711 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.803581959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.808378191 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.809134222 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.808181461 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.808314547 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.807197753 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.806253459 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814511078 seconds)
  done (took 123.829162861 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204913081 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.204488775 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206422274 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205474893 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205391696 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.20609536 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206381896 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.206238197 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.206113995 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206096765 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205821432 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.207405504 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.204536432 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20684321 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.205830544 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.205196718 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.206062267 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.205761632 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205410035 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205247378 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.206287835 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.205867641 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206755176 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207686696 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206104825 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.206370961 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.206935832 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205963202 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208228207 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.206092521 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207570223 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.207681407 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.206394287 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.206579148 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.209327521 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.208009213 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206745067 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207374898 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.206970497 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206885258 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.208774737 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207956104 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207500552 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.207647194 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208025897 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.207303551 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.210483511 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.209306467 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.208938028 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208018578 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.209608021 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208817741 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208467209 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208192537 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.208796476 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.209347682 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208269169 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208234528 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208843773 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.208881252 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209348964 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.210273628 seconds)
  done (took 75.964714686 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210193804 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210148338 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.207870056 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.207128565 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21061025 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.208848891 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209824239 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.208805081 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211023539 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.210971939 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211923809 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208382163 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209231098 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212908827 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208298748 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208914066 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206701852 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208445135 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21104874 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209667412 seconds)
  done (took 25.310425039 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.208809268 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.211307378 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.208331083 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209740651 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.209826737 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209340032 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.211659504 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211005635 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208432301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209574435 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212284599 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21154009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208875165 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.21010256 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.213113373 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209553434 seconds)
  done (took 20.483977183 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.209091446 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.212844376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.210387378 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.211980643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.210669478 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.209616044 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.211947012 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.209387529 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.210145778 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.212775065 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.212060931 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.212472172 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.212622041 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.212142971 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.209985452 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.212840219 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.210164209 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.210113056 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.213102902 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.213090268 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.211728137 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.210364493 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.213768665 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.213065899 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.210634111 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.211088186 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.211596069 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.210506388 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.211233083 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.213966515 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.211750516 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.212223562 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.211326017 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.21029986 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.214380627 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.211172333 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.214043499 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.214014835 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.214966721 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.21424523 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.213352155 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.212401967 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.215710717 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.216132299 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.211840028 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.213264907 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.211695148 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.212353405 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.212160189 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.21277169 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.214492841 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.215375541 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.215551943 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.215497495 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.215557521 seconds)
  done (took 67.804599684 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214361078 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217432619 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21326748 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216165965 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.21562735 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.212226677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217163994 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.214138565 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213008614 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.217757202 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212953364 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.218530837 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213107151 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215950801 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.214164391 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216899432 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.213280986 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214082473 seconds)
  done (took 22.995234812 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.214890381 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214369255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.216576701 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214083113 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.213345127 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216981785 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213982735 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.217255681 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217432156 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.214957778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21429161 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.217493368 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21696173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.216053062 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215554821 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214484192 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.218959075 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217262345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215773124 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213813546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218101701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216532332 seconds)
  done (took 27.873758207 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.21762095 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.217050692 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.216945105 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.233835979 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.237328005 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.218599176 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.217241806 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.217913007 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.240584694 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.273810424 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.268484288 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.239880546 seconds)
  done (took 15.925483598 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215612301 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21916873 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216859168 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217775796 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219305974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215946653 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216786137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216744831 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220495774 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216576796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216863955 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219901903 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220731612 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217407157 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21898885 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219380719 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216526202 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217901071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217360297 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220208351 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217596978 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219348152 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217454735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216825843 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218537055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217141916 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220122663 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217976129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217773382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220881452 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221157409 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219707065 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220841764 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21877608 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219967164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22103681 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218054829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220641845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220259185 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219430815 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.221556372 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221387245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223198553 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219206889 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222189332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219373779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218977818 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218573577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219534437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221167127 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221877167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219293625 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222041565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221821994 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22108641 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221780248 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220021642 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219668946 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221804537 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220699695 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220322081 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221899455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219845205 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220483415 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222527277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219555355 seconds)
  done (took 81.612804995 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21852388 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220149539 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220368386 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22273879 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220523774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219897471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220699635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219691358 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219950245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220446969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222925837 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219768904 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220349713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220952463 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222349462 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222226274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220718312 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22146065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222595246 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224948195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222025943 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222353672 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222115933 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223322858 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221672342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224242288 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221920195 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22049389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222632088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222301539 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221404686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221377032 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223517906 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222733961 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222441695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222928103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222705371 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223255101 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223256061 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225576126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223554462 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223496151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223314205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223744118 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223782098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223645201 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22396136 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223528573 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222984297 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224532186 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224589594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224500993 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225178238 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222404892 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224022971 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2241777 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223410499 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223601193 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22425381 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227392982 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224135662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224295966 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226139538 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223754269 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224215295 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224092254 seconds)
  done (took 81.83355113 seconds)
done (took 1687.723696339 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.389963174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.341325854 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.226177076 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.236125207 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.225865403 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.249311793 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.237191778 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.225266745 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.226053326 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.22588302 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.22519929 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.417426315 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.281168333 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.22677379 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.22599248 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.323370072 seconds)
  done (took 25.418478902 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.25411078 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.233584467 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.346190428 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.249106462 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.255292499 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.420647651 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.284397536 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.233425589 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.406022236 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.252216299 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.229904347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.255515821 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.232037384 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.226602014 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.250768969 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.420951867 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.479321213 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.233719642 seconds)
  done (took 27.399335822 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.691068682 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.259632675 seconds)
  done (took 5.086860061 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.253270466 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.233559653 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.233280449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.232092838 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.224037074 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.240722091 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.230355669 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.241375839 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.231707576 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.36251881 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.235944023 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.242382582 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.254654606 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.235538336 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.230814034 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.273021644 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.386711972 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.232351918 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.230383618 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.237508739 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.234036821 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.344036234 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.275248938 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.232623137 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.361087205 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.234283998 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.240272394 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.241530695 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.370196687 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.232024721 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.232622294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.235304865 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.236103431 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.114811953 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.696146184 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.242785804 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.260342653 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.24102672 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.230753452 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.386343422 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.235369018 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.241994109 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.227376251 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.686674992 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.396439234 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.357918755 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.24539953 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.236869023 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.23522549 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.304900714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.235419647 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.23654307 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.276108302 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.052563066 seconds)
  done (took 79.797943357 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.244321222 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.227790989 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409038688 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.252722345 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.228011667 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.227395295 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.24698541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.520692686 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.259563364 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228020113 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.56418514 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.804456433 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.248196407 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.275739897 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.078356486 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.291017843 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.229417018 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.245908437 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.229574757 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.231085562 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784177937 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.233588889 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.228761584 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.415705437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.267911292 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753813783 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.229402277 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.247444982 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.250459048 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.229168942 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765332308 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.256730009 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.285671652 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.232417932 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.505854763 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.616594981 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.579175052 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.23367006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.252657106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.231307254 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.23991108 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740416074 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.597245201 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.232042505 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.231304107 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.749522453 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.231503316 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.239435445 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.240487942 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483194211 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.23170068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.232674905 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.249372606 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.249212501 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.231367817 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.313480989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.304420524 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756497479 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.230925256 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.232832734 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.282208531 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.233488546 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.237993409 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.237496073 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.234034053 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.601165601 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.376103578 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.232522395 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.598462607 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.766358032 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.256831469 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829180551 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.25363888 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.244176708 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.449073812 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.232561218 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.249888071 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777076957 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.245476571 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.232942443 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.584694915 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.237007353 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.564473681 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.252987039 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233351792 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799219173 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.242689734 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.316769218 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.233006064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.245675777 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.233523925 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.236027662 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.516404752 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.28355876 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.233604574 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.234115336 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.253167147 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.23493226 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.235139328 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.239597225 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830270009 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.262387453 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.23374726 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235769871 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234505878 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.235428514 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.235373807 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.238210076 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50238332 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.235732873 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.236906875 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.23775907 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.235857194 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.243293221 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.415975291 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.236927713 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.550869498 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.23549247 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237120326 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.237252598 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236178615 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.242080313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236314264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.242432217 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.126010052 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.543732482 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.253857042 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.251631481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.236519084 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.237806814 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.235529022 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235811826 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.284017941 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.240319133 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011121619 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.261009219 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.24734637 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.235554272 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.248186735 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.240080341 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.246395121 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.24020834 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.531337275 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.518811127 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.382751521 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.241328989 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.237293181 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.021928671 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.261656263 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418022727 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.258321926 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.237271985 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491448273 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.457888995 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.239739279 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.237200805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.240053364 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504069172 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.238408742 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.561692083 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802241995 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.258910104 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.240215178 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021919583 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948514346 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.239993302 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.241238881 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.572992962 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.258477957 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.239871987 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.239802372 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.239662443 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.239945898 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.26164185 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.239760854 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.239878518 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.24036147 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.286059505 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.430834521 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.25645467 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.248842979 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766904942 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.251876697 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240233395 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.248339757 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.240258821 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.239521807 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.301700527 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.239938863 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.27058791 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.241540287 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.240680715 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828739567 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.244323741 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.24019969 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.432140401 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943493913 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.263325353 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.242089923 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.256823953 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.137197087 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795963468 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.291332456 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.565266909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.251953962 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.281652734 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242629667 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.269147829 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783372297 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.241894505 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.260089796 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916702452 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.263353799 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.797189514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.240739721 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.241951943 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869073693 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.263019616 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.244721499 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.240860097 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.242988188 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537771872 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.241458049 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.257166363 seconds)
  done (took 477.272029717 seconds)
done (took 616.108684328 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.241050422 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.24017767 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.234700219 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.246942678 seconds)
  done (took 10.117536858 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.25268341 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.249564213 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.250981061 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.248483722 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.25278278 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.249750183 seconds)
  done (took 8.659672409 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.243868255 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.242938812 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.246928967 seconds)
  done (took 7.88985423 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.457839651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.265858438 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.584071794 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.261572437 seconds)
  done (took 8.726724718 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.252356222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.251787933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.251590725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.25473761 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.256880319 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.257667682 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.255780803 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.256878123 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.257030807 seconds)
  done (took 12.452847348 seconds)
done (took 49.000309592 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.35753324 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.247291522 seconds)
    (3/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.399645034 seconds)
    (4/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.303136576 seconds)
    (5/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.612369322 seconds)
    (6/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.26159207 seconds)
    (7/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.381173562 seconds)
    (8/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.01606993 seconds)
    (9/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.370087452 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.411813892 seconds)
    (11/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.268424637 seconds)
    (12/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.277936245 seconds)
    (13/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.278786584 seconds)
    (14/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.234773195 seconds)
    (15/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.44716501 seconds)
    (16/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.949419568 seconds)
    (17/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.259263621 seconds)
    (18/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.394006983 seconds)
    (19/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.331437423 seconds)
    (20/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.260889587 seconds)
    (21/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.330612326 seconds)
    (22/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.258266079 seconds)
    (23/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.376385156 seconds)
    (24/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.088478346 seconds)
    (25/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.94884769 seconds)
    (26/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.336865773 seconds)
    (27/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.901514706 seconds)
    (28/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.279826757 seconds)
    (29/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.303749281 seconds)
    (30/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.377293209 seconds)
    (31/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.346298145 seconds)
    (32/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.28125705 seconds)
    (33/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.250093588 seconds)
    (34/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.343814055 seconds)
    (35/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.264504985 seconds)
    (36/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.263681134 seconds)
    (37/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.429405276 seconds)
    (38/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275877962 seconds)
    (39/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.898436326 seconds)
    (40/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.384713739 seconds)
    (41/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.2629493 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.30902899 seconds)
    (43/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.596898855 seconds)
    (44/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.27407731 seconds)
    (45/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.265906678 seconds)
    (46/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.474036233 seconds)
    (47/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.302255107 seconds)
    (48/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.132100806 seconds)
    (49/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.327380751 seconds)
    (50/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.427384054 seconds)
    (51/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.911609534 seconds)
    (52/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.267186761 seconds)
    (53/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.276642285 seconds)
    (54/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.469853195 seconds)
    (55/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.241167673 seconds)
    (56/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.275389516 seconds)
    (57/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.321509336 seconds)
    (58/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.439782531 seconds)
    (59/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.287499137 seconds)
    (60/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.326709569 seconds)
    (61/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.454074346 seconds)
    (62/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.396117423 seconds)
    (63/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.307423454 seconds)
    (64/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.267834671 seconds)
    (65/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.266366344 seconds)
    (66/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.400275407 seconds)
    (67/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.47705004 seconds)
    (68/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.336259176 seconds)
    (69/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.264041964 seconds)
    (70/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.377032123 seconds)
    (71/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.436496179 seconds)
    (72/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.331352233 seconds)
    (73/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.299594582 seconds)
    (74/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.441529083 seconds)
    (75/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.262457291 seconds)
    (76/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.561080287 seconds)
    (77/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.403838237 seconds)
    (78/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.307651597 seconds)
    (79/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.409075397 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.422222366 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.415565319 seconds)
    (82/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.384568433 seconds)
    (83/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.252234327 seconds)
    (84/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.307072509 seconds)
    (85/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.335268937 seconds)
    (86/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.276980013 seconds)
    (87/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.000142565 seconds)
    (88/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.348569221 seconds)
    (89/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.28087256 seconds)
    (90/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.108749892 seconds)
    (91/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.427428175 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.332073932 seconds)
    (93/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.303079565 seconds)
    (94/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.462400734 seconds)
    (95/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.401957477 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.298073982 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.352746399 seconds)
    (98/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.372585362 seconds)
    (99/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.533576154 seconds)
    (100/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.346759209 seconds)
    (101/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.91305929 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.281098799 seconds)
    (103/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.268964678 seconds)
    (104/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.334055177 seconds)
    (105/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.40433411 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.344276239 seconds)
    (107/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.259321422 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.358571093 seconds)
    (109/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.267140622 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.343678318 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.269185293 seconds)
    (112/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.905955843 seconds)
    (113/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.255847825 seconds)
    (114/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.259913502 seconds)
    (115/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.269801623 seconds)
    (116/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.265747672 seconds)
    (117/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.262204089 seconds)
    (118/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.356873016 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.260779632 seconds)
    (120/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.263849623 seconds)
    (121/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.351809604 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.375642227 seconds)
    (123/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.290198506 seconds)
    (124/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.348647728 seconds)
    (125/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.342966022 seconds)
    (126/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.268970167 seconds)
    (127/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.303712153 seconds)
    (128/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.402227581 seconds)
    (129/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.479563794 seconds)
    (130/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.339203701 seconds)
    (131/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.272765817 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.309512765 seconds)
    (133/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.241479931 seconds)
    (134/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.275510391 seconds)
    (135/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.41085774 seconds)
    (136/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.007681075 seconds)
    (137/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.93194969 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.271383592 seconds)
    (139/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.268281577 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.305384055 seconds)
    (141/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.270811928 seconds)
    (142/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.25920664 seconds)
    (143/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.340677468 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.344247522 seconds)
    (145/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.007817181 seconds)
    (146/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.029452561 seconds)
    (147/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.97948635 seconds)
    (148/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.33195711 seconds)
    (149/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.243234177 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.341853985 seconds)
    (151/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.271219169 seconds)
    (152/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.272778294 seconds)
    (153/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.378882214 seconds)
    (154/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.251653447 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.369822578 seconds)
    (156/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.012652188 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.367317617 seconds)
    (158/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.286032874 seconds)
    (159/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.460526553 seconds)
    (160/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.601761121 seconds)
    (161/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.069955414 seconds)
    (162/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.306567385 seconds)
    (163/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.329494276 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.281989056 seconds)
    (165/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.276529553 seconds)
    (166/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.280744601 seconds)
    (167/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.137082959 seconds)
    (168/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.418997922 seconds)
    (169/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.266564248 seconds)
    (170/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.910066346 seconds)
    (171/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.268924469 seconds)
    (172/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.267689507 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.311946448 seconds)
    (174/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.245390024 seconds)
    (175/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.386334026 seconds)
    (176/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.245149275 seconds)
    (177/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.284225708 seconds)
    (178/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.37576398 seconds)
    (179/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.273524978 seconds)
    (180/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.958182317 seconds)
    (181/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.308188673 seconds)
    (182/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.137227511 seconds)
    (183/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.286619548 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.36277666 seconds)
    (185/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.245806078 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.317851651 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.369045485 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.334873042 seconds)
    (189/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.447704797 seconds)
    (190/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.386622236 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.318745606 seconds)
    (192/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.285257717 seconds)
    (193/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.283307627 seconds)
    (194/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.376534983 seconds)
    (195/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.328257063 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.290254462 seconds)
    (197/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.34459297 seconds)
    (198/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.386985151 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.318241553 seconds)
    (200/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.29064024 seconds)
    (201/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.332084789 seconds)
    (202/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.382046219 seconds)
    (203/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.344425574 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.010665875 seconds)
    (205/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.373973112 seconds)
    (206/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.268352744 seconds)
    (207/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.394386493 seconds)
    (208/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.26714751 seconds)
    (209/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.28032284 seconds)
    (210/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.306488951 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.442212568 seconds)
    (212/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.315913445 seconds)
    (213/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.284460484 seconds)
    (214/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.470707109 seconds)
    (215/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.284289711 seconds)
    (216/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.923609893 seconds)
    (217/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.247708197 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.292240518 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.447735814 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.24825995 seconds)
    (221/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.467818376 seconds)
    (222/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.024851996 seconds)
    (223/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.360752842 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.374213885 seconds)
  done (took 351.157818911 seconds)
done (took 352.317425112 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317616784 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.44785156 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.289784873 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.287983613 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315632252 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.260876926 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.306277282 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.278745492 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.274278239 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.275193925 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.26125398 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.280266335 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.29452825 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.304916792 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385754023 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.279190781 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.289780774 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.273111525 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.311423527 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.331574406 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315238198 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316231007 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.283175311 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.289833335 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318842957 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318873897 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.293260943 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.271258684 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.271883409 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.312892129 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277671735 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.293928057 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.32271769 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.325037957 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315827039 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.274882504 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315912021 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.44942965 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308473669 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.308229003 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.276259963 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.322647734 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.282892637 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.28501284 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.324417308 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.284808802 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.32111449 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.396326796 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.275029228 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.272924442 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.32108977 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.335941778 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.27659259 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.272176835 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.267953027 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.398067617 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.276631056 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321085169 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.277096934 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318828007 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.388469426 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322381613 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.337323608 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321576871 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.277854235 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.297120444 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.275173095 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.333813619 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.273694643 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31947375 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318241979 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.283514431 seconds)
done (took 103.279595775 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.397844681 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.272191272 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434906799 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.274466105 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.436255657 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.418084373 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.272072011 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.271994805 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.272525404 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.066962149 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.271809788 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.273405988 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.272966479 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.273159367 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.400539101 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.275426819 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.272333653 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.964009084 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.276419019 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.41493784 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.270274474 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.272790359 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.276120436 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.065633699 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.273779747 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.269534977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41637301 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.276547025 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.968906426 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.27298212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.275307477 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.968256336 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.417612986 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.294048863 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.285882331 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.283650457 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.438750309 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.295129954 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.398177217 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.398136323 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435718139 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.31429043 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.276800248 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.273542202 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.279407058 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.277942391 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.27453235 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.301806902 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.274719705 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.275030543 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.96671926 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.287935335 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.274367023 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.275978651 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.27507549 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.306609862 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.276076233 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.280264435 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.419864531 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.278506178 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.401358347 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.06761223 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.071088898 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.278094014 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.277066284 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.27783602 seconds)
  done (took 104.40680826 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.345234197 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.353181017 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.390434543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.296647951 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.329535406 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.396866872 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.296891286 seconds)
  done (took 10.589514311 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.284580675 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280034482 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328320094 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.332298283 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.277914969 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.493869002 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278587811 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290408164 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.276783673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.355488481 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.280880575 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.280194659 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.286237011 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.275923825 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.33103641 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292216074 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395735609 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.281710042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.281323558 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43481097 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.278525638 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.288780008 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.354287066 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.29355983 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.282388735 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.287514368 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.225871272 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.280748252 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279021211 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.28102031 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279072852 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.389313452 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.282587349 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.277374569 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278015636 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439121546 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.281319059 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278743049 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.281255474 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.280940337 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283280963 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.28085313 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.282492212 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.279245712 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.282530773 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.30609234 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.282568565 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.283371647 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.282241522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.283448017 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.35727282 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.283159694 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.280156259 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.279727712 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.359680658 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289065415 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.283366035 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281830447 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.284209029 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280202303 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436651834 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330982553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.283541792 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.33080066 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283500725 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.283835561 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.283634075 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.283151211 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375554476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.284437508 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333380084 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.281173078 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.507562365 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.308845671 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.286306586 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.287199667 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.287050356 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.283542641 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.279947716 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.291414664 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.283237486 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.285184524 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.292818956 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282257548 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.282216532 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.467620169 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439830777 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.282106763 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.297245766 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.292238995 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.281808972 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.360525647 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.285347259 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.282577026 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337638149 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401494326 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.362035261 seconds)
  done (took 133.106449941 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.297034441 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.298067304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.291218267 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.313900037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.289138155 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.287510721 seconds)
  done (took 8.964325108 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.290989227 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.289833196 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.286009745 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.286788015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.286719434 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.289579154 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.286815353 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290733736 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.2904182 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.286632183 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.287182441 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.288542066 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.289641539 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.288907584 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.288934159 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.289057647 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.288091249 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.284290343 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.287231036 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287897787 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.289079017 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.287704415 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286720071 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.290581226 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.292911756 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.288179788 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.308121561 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28848363 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.28809134 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.295219617 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.308428121 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.288500524 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.28999638 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.294899212 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.293013842 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.290429443 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293162944 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.286949482 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.287411081 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.288844022 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.291730844 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28894963 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.28958915 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.290809199 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.29334621 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.294586438 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.295089759 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310765866 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.289201366 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.290610503 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.292092472 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.289934524 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.290246914 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.292268333 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.292811881 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312325567 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.296062052 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289883252 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.291002565 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.292002591 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.292325006 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.292092202 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293392538 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.29616455 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.289019226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.292444513 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.293518308 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.294493645 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29177631 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292951193 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.29395324 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.290597366 seconds)
  done (took 95.178459694 seconds)
done (took 353.421449769 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.335143929 seconds)
  done (took 4.527181832 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.384925046 seconds)
  done (took 3.579826506 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.8807883 seconds)
  done (took 24.080147756 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.311517312 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.357848686 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.305606865 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.292995097 seconds)
  done (took 10.461152654 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.586234193 seconds)
  done (took 3.779893142 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.286949611 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.284769379 seconds)
  done (took 5.767271222 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.59480617 seconds)
  done (took 3.79032514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.633217362 seconds)
  done (took 3.833635204 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.305364367 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.303115197 seconds)
  done (took 5.810611547 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.273136683 seconds)
  done (took 3.468306173 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.448096098 seconds)
  done (took 17.644147591 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.287864735 seconds)
  done (took 3.486466829 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.339556661 seconds)
  done (took 3.533843604 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.989281962 seconds)
  done (took 6.184217126 seconds)
done (took 101.140078985 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.286840407 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.289577162 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.292805418 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.290764457 seconds)
  done (took 10.356140701 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.348016945 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.345853149 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.347947202 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.345761936 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.345694659 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.346172892 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.320705475 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.324646252 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.348682542 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.347395548 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.346703375 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.345946496 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.347071535 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.321617276 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.347489794 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.34818625 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.345823903 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.347470307 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.320358054 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.345790028 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.296109053 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.348856441 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.34713998 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.296684007 seconds)
  done (took 33.323484618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.796121166 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.371488259 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.453216949 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.350928084 seconds)
  done (took 7.16808941 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.374457385 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.374423413 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.390115095 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.428269575 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.44012233 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.387122126 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.323830679 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.319576444 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.30506194 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.374976477 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.425280123 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.367317665 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.45375748 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.297742479 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.502784838 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.29678769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.296932001 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.376407299 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.426704076 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430376289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.297940807 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.375179009 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.376499329 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.36708316 seconds)
  done (took 34.206832055 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.303624376 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.311946402 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.296625798 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.312302586 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.297159307 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.297620961 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.298321486 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.301976179 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.295792128 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.29587474 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.298029774 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.311585974 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.30261625 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.297699241 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.304263261 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.299072947 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.303876876 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.302210422 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.299193752 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.30304356 seconds)
  done (took 27.232894955 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.291718889 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.291848174 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.64344847 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.549371354 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.294628166 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.292449536 seconds)
  done (took 13.56324665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.374043668 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.533095077 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.29920162 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.671851935 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.753637499 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.301316353 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.301562066 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.553328168 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88988831 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.878278999 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.360495602 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.373528921 seconds)
  done (took 19.491318221 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.3092961 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.294005221 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.302863167 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.312775757 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.35699521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.322175776 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.306562711 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.293616799 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.360706835 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.378479138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.321401599 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.358605405 seconds)
  done (took 21.119725796 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389856371 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294703189 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294687492 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332387967 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295253282 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139060321 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328244419 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008416159 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.316205408 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567914846 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301303134 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392343544 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54937987 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305610641 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297664638 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.279446254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525246886 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806150865 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296738244 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295442771 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348849328 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29563198 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307836155 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526862657 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299153115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293823409 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.557426908 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294505293 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595280897 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309746366 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305902398 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295744461 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569098357 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960899941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414732374 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522925398 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308373062 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295792619 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.298034074 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.296604861 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301386198 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318317704 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308248597 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295643113 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296687825 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295632321 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027047843 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.322496922 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.295271387 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296512431 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570390033 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393918057 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.300344649 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297603521 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353432023 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295156828 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.301821038 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392381871 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885553294 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297932343 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30270287 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.302393854 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313619384 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298847746 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937210868 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.305277583 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.301427993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301945393 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297856834 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296863614 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335712638 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298241495 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.322542576 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298375045 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036188326 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303189535 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300514998 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870165531 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311595233 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.301526138 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531603064 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297998411 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300354749 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.297042946 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297715522 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027630196 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307204932 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.285841693 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338322258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020132164 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.550778215 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326553068 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334104042 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526110111 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.288817941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302337859 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.303677328 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324199871 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325347189 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030079208 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322592327 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.308950994 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562305655 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.515664505 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303578359 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.328268483 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795904093 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333577937 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.324373302 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320429791 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535743104 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.919508878 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320688847 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304050337 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325315388 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304471486 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073227655 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318890989 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.410895655 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303474684 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582697098 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.118066054 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30581391 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374285769 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311167866 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307247303 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323704769 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309325722 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30602998 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.526023766 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328239485 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.322345219 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.306275764 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306826848 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.318036272 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31426926 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.307483474 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531205098 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318496243 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588829573 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305894025 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307969571 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308391915 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.531238387 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.304268907 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.648632958 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570251902 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308383168 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311601089 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324008259 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326915258 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411791104 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328614205 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.307975835 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568741846 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.311969558 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.314252387 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310817957 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310645825 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307586747 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.315777648 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311849577 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917180909 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282175197 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310750385 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19561948 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.319069359 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373065713 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310253534 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534385206 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.311822042 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323882808 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.311953312 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.301407186 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545973236 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315723216 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.307956235 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381670186 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.79245081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937339543 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317970747 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.306365216 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.303310224 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.302732082 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30673718 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306036338 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306511626 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534931721 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325946648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317020646 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923900861 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308754413 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309510335 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.313784593 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320603159 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.312497971 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307370653 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.306691213 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306000111 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313434338 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322554634 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450737539 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.321666756 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308131723 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.822872927 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31291368 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308842144 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306998045 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343225673 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310402796 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126641926 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570323034 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31763893 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58558516 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309521694 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.324764676 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.305798614 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307774293 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310787085 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.312866097 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320661484 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.321193361 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31284235 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311118862 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890422284 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067300531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874243293 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310155257 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.313194719 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314104433 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.038853897 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329904275 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310102139 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555525706 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03544058 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32930307 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801438812 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.334639156 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118096689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59076525 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547764884 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31008965 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.33633266 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592493014 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527564112 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346726278 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310722836 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313892127 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.29598851 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88077171 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329556246 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409203196 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040007596 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330088718 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312847712 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.320884415 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311611014 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745693578 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334025457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310389638 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312645992 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323479208 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132780527 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316907977 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312067818 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952995535 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323807724 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.821895114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33474714 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544587389 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.329191354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.319089834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.310994082 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.315558291 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.570451676 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593757453 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318407217 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323977621 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885885575 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.185519314 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.319004458 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313528715 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087429235 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329268195 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622038464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.317206653 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.323014954 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316455844 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315024211 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314165605 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.31101717 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322257692 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289747907 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831894907 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.33083051 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31909923 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334793556 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319274499 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.569173795 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.33102116 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93182881 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547067429 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315336357 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338718527 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.319418993 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32210314 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.302541277 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315003866 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313292464 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383357866 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539054696 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331237564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.304904512 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351834568 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528544552 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315508451 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322721644 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577251984 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.317098671 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.327509316 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076196707 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347821862 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32509026 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317614095 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3181507 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335521168 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386035504 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547449878 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.334745988 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.328275863 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747416146 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348596052 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318107556 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.330332475 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413132605 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32047206 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.330187791 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.090711017 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93772624 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075857598 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937622068 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601255399 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322036149 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327839617 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318202406 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480307378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317661556 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591226728 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319381407 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.322408904 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340690585 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327917175 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320266887 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534299414 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592290234 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319709813 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332669448 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322681141 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.318612205 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328533007 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.531199929 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83877057 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900655479 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322009067 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322811897 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053307388 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612491042 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320450856 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320380396 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321138101 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.334071242 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327223565 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.329935276 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319277432 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483854258 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596580864 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001868107 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.352419894 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.349914812 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.837731592 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332903121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577024301 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33555752 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.552971149 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945834294 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06333116 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587660287 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393483404 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554378198 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.324741625 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485319137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.33411444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322053676 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32260659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322643411 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.319681949 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.333172368 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948603066 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588561001 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.326921614 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.335217729 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352887038 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.333174071 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546926772 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070880522 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545823989 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332708927 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328083325 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323071476 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947367119 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60727496 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327917219 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.327090647 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582569349 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327038681 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346626204 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.840566786 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.321157107 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902071244 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.295667585 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345202613 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33873108 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073362373 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949364119 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.323246935 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866717116 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327739584 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322910126 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619368063 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.328794194 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328471029 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608299515 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.328758552 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325468118 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56236102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.947984792 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138061397 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.336734416 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345294728 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.329411114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324780883 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358969364 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326540558 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329317493 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.77225806 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351105408 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326127637 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339362145 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.324574018 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327897111 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.329442838 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327564089 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.330285482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.341452933 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.324112024 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330128623 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423006513 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904862466 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346151568 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.994063132 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.655257638 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583579566 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328598632 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.317376565 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.330421069 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328716796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326938913 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327520871 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330432882 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909495993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.330634011 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.342079565 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331398467 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.328281702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539343301 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34277794 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561944524 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338821387 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34654049 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.314007095 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328751737 seconds)
  done (took 948.226248736 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.392079208 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.349631024 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.369784739 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.389513258 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.345676939 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444313293 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.43696691 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.348446167 seconds)
  done (took 20.310073325 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.327165797 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.337813522 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.341560702 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.337222041 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.332654699 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.820741167 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.358177083 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.339036416 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.344952692 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.342194335 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.342819756 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.316473812 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.338944463 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.347276005 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.333235572 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.340870548 seconds)
  done (took 32.143494799 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.38922407 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.519732093 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.447636353 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.340628328 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.369809346 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.341079359 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.621557056 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.363905576 seconds)
  done (took 26.62945881 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.349473601 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.343474909 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.341429082 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.343192049 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.342941673 seconds)
  done (took 7.961385743 seconds)
done (took 1202.926410642 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.336396206 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.338081155 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.335971964 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.338674599 seconds)
  done (took 6.584344191 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.319185072 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.31881922 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.324524889 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.337653343 seconds)
  done (took 9.535768959 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.080785145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.005525839 seconds)
  done (took 5.324804083 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.832190452 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.828053038 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.830867473 seconds)
  done (took 6.728200312 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64340516 seconds)
  done (took 2.880184782 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.241057106 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.334574386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.020913183 seconds)
  done (took 7.833096352 seconds)
done (took 40.12072347 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.332109269 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.58745483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.489364477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.34190535 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.492389255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.490199604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.189456888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339681342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.342968275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.338022947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.33361135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.496020985 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.101986689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.587608686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.100890186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.679338014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.495504371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341324441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.333872881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.355408883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.190448108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339509686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.336679028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342612135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.49662058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.480352824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.331949478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.678536677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.334786616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.335131974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.479079396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.346454147 seconds)
  done (took 81.698397293 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336300096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.33418076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.334936315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.354246452 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.338128393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.334220735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.367427826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349488384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.335818756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.332962767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.333866663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.335893752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.338022862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.334520846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.342887705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.333662556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.33430372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.344391156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.335103734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.35072772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.3515626 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.33450892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.336765286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.356247712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.351284281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.33643117 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35681157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.355081685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364746946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.33632851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.354068346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.355535167 seconds)
  done (took 76.229782311 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.335037196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.354578961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.336525522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349101061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.353086014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.339784973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.337356992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.33787747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.345838858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.34180619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.346719047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.348846207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.337439274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.349447191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.339445367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.347002129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.343647486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.337340551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.336398201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.348662271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.337704916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350934596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.336936215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.353477124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.34454501 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.339985868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.336315684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.338910641 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.34174436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.337516923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.342619909 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.3381013 seconds)
  done (took 76.206103642 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.620302381 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.345259867 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.346352049 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.338677015 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.34609247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.345958997 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.339708893 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622529003 seconds)
  done (took 14.546843269 seconds)
done (took 249.916572235 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.338906991 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.88027306 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.385818576 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.3391378 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.370096583 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.370485059 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.576835572 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.385685853 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.572480146 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.366418375 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.366294892 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.353403049 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.189892842 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.501611556 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.230461418 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.327083318 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.275819116 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.35611979 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.954227608 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.633755589 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.369631331 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.341878617 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.214742794 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.300660682 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.343554676 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.43190848 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.451389355 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573303755 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.506796683 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.43112427 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.901632095 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.357855391 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.357113841 seconds)
  done (took 63.598968376 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.347957175 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.467618051 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.349140317 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.347461228 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.468365908 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.347934693 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.347200894 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.34788845 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.348973731 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.348717035 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.349919445 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.350336929 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.352673136 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.396113036 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.470541528 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.366598452 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.349719754 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.46354615 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.348117675 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.341988999 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.39118421 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.34930178 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.351608366 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.396582451 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.350190997 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.350437194 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.46890963 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.351065306 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.348746296 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.464507256 seconds)
  done (took 42.578824757 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.350915556 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.980856907 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.116599312 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.358606861 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.351692547 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.35565164 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.658086775 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.351974276 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.357211385 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.355688195 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.889123469 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.356225815 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.389925052 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.148718214 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.356104228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.352545094 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.352587439 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.351705669 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.988756666 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.362167945 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.677369193 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.352166007 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.65893172 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.362995621 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.375011452 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353603722 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.358057108 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.240699202 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.35528908 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.881216404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.19460411 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.658390384 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.153403264 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.12969692 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.193801951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.357798301 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.354614332 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.889984341 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.356862013 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.355010071 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.669452723 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.357882515 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.127536722 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.074267882 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.377307679 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.355046174 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.282065096 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.907129046 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.618408951 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.360753203 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.16147378 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.358607534 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.357740975 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.356199956 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613455331 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.357970686 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.353824581 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.296690137 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.362039944 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.674500655 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.357744076 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.356785915 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019849918 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.359108881 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.010471603 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.358270134 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364119627 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.377039511 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.163714905 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.36108965 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.084997141 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.377366912 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.357343279 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.889305921 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.98423272 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.306483677 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.359608624 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.992261762 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.190513891 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.660937944 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.363178972 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.219529735 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.664757938 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.360206585 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.359976915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.359134877 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357079397 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.432937305 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.661936186 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.016044015 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.079945275 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.306135604 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.66583813 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.367260316 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.359305295 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.285251913 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.358856081 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.356522062 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.131041358 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080049549 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.377640684 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36574063 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.096271813 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.378849215 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.667875484 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.36343586 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14528161 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.361393838 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.436193498 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.360257286 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.366738903 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.384531887 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.667099983 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.363888684 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.360441247 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.064355656 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.924382346 seconds)
  done (took 192.719279423 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.359889 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.352235722 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.355098767 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.352797514 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.353714061 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.362577697 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.353652896 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.353006445 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.360936067 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.352602278 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.354092194 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.363987564 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.359983333 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.354764148 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.363190369 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.354041172 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.353953656 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.375995515 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.355658357 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.353328562 seconds)
  done (took 44.400226492 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.361250558 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.956183057 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.930861905 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.361469125 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.358591733 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.361565282 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.421102833 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.358625181 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.358210815 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.680928533 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.546372567 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.379878332 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.358793773 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.359701174 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.929441899 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.351508789 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.681903727 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.957391848 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.364947538 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.955821559 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.351348754 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362576001 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.360186754 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.957960649 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.68227749 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.668571936 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.425121926 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958355414 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.35953119 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.361764427 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.957702781 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.36408832 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.365211843 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.951118201 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.38148836 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.378152651 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.360474368 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.42709702 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.426686917 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.685866298 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031694438 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.668993615 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.374895066 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.550144431 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.36725026 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.353073717 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.962595825 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.382787104 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.353122731 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.364122041 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.370951851 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.936728753 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.38367549 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938313441 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.382577144 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.365594985 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.962032033 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.937376199 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956251145 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.552425822 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386161909 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.673395985 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.363663319 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.964103267 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.386515892 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.366668814 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.36606248 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.555204836 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.984888512 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.675069806 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.686662828 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.686166568 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.366164292 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.427874849 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.381850196 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.752200181 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.425953332 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.816902127 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.693752934 seconds)
  done (took 125.232738571 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.655343026 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.481940337 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.792001062 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.98967025 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.361581559 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.490750894 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.47803907 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.634076801 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.364999845 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.452818075 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.040680035 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.460855346 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.157706504 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.445698791 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.46287088 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.515803727 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.774213028 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.362924317 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.025495894 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.024581456 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.360973934 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.471579077 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.964743486 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.589937628 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.364979202 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.940467513 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.347830318 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.059133867 seconds)
  done (took 53.333224529 seconds)
done (took 523.104691735 seconds)
SAVING RESULT...
DONE!
