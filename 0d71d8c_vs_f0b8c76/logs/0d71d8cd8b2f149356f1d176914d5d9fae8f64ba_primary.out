cset: moving following pidspec: 30271
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.268742673 seconds)
loading group "string"... done (took 0.591653532 seconds)
loading group "linalg"... done (took 8.180810823 seconds)
loading group "parallel"... done (took 0.188140179 seconds)
loading group "find"... done (took 1.258159182 seconds)
loading group "tuple"... done (took 2.047306789 seconds)
loading group "dates"... done (took 1.297622454 seconds)
loading group "micro"... done (took 0.203064144 seconds)
loading group "io"... done (took 0.940949692 seconds)
loading group "scalar"... done (took 39.924531588 seconds)
loading group "sparse"... done (took 11.961995615 seconds)
loading group "broadcast"... done (took 0.980815486 seconds)
loading group "union"... done (took 13.856991377 seconds)
loading group "simd"... done (took 4.979337262 seconds)
loading group "random"... done (took 9.175611794 seconds)
loading group "problem"... done (took 1.810491497 seconds)
loading group "array"... done (took 21.542724398 seconds)
loading group "misc"... done (took 1.737764913 seconds)
loading group "sort"... done (took 3.36519429 seconds)
loading group "collection"... done (took 18.241640353 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543248855 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127006219 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138248684 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120752619 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151364702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118046512 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125505407 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085015878 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.86047202 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152479622 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115757207 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436502769 seconds)
done (took 5.389155853 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172881377 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088243978 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079980171 seconds)
  done (took 1.249963859 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065886058 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128248358 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06793005 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068586255 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068395634 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071099523 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068185878 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068321778 seconds)
  done (took 1.622368484 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073558318 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069425163 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066905945 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068761062 seconds)
  done (took 1.360790539 seconds)
done (took 5.562874117 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801978145 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211681459 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190804413 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41857476 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140935431 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186470947 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647498291 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311163299 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210650503 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098959138 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117494267 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.37094616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128196222 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648387335 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0782708 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097187214 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143709558 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442914974 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072177437 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087283235 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094213454 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13232824 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092605778 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077817404 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151094109 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07150479 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14642726 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086790918 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069845598 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223350615 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175738203 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669025808 seconds)
  done (took 10.515308194 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099929141 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069400122 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125880215 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099187716 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070824687 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076378482 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068528452 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090449918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129971738 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091848025 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109433611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067230828 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070243157 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083652587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19867058 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081212209 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082504394 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071504349 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079884464 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108332306 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079157612 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085319204 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080655275 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129821694 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170382371 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097329378 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098842009 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067902638 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082502459 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116237677 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128012798 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066880876 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066855076 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126149572 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096732105 seconds)
  done (took 4.590705307 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.115246067 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.156174763 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091240248 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141001043 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065841198 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112619529 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066540095 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083777126 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239627284 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.3847888 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635196019 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.149969279 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117939222 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105964379 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071777167 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070134017 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071564269 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.301273407 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10319828 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117198305 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087467955 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073401538 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077743293 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068430701 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075181287 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066397715 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071672619 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.092132863 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079266062 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.337614793 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.133797971 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071812593 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.971252015 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167702905 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06833692 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106302108 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16537862 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094576064 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143361656 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06883879 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06496537 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.304634809 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068532174 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073177171 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068120298 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085840055 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11096597 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121863104 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066850889 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067275567 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169407067 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065256817 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065550921 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084547788 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.25650138 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153446427 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066652075 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303854089 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095049868 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072616354 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066600701 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190739336 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122757916 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06949866 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069069466 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070204299 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069484721 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367927079 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066914171 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.924072398 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072502634 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079435583 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073690539 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074606655 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09654913 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065893095 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07996723 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079571022 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093215822 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068560938 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074750231 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067666802 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067251415 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067492132 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093791041 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.395014567 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06825629 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073053046 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065699593 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099457852 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099600649 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067897224 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067295326 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103057847 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071282072 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06675905 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068550377 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119488547 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070853689 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113098569 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.170315781 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.068870896 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065726754 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097681267 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070695827 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102283772 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080252688 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072308722 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.470454086 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066694938 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074130187 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068838362 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070511795 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069425457 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08135218 seconds)
  done (took 22.08235896 seconds)
done (took 39.385024105 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242749766 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084247134 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084363485 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084822436 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084255409 seconds)
  done (took 1.752572881 seconds)
done (took 2.906525563 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127378804 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10079763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066640478 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101047487 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069948139 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104870911 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104417407 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086382567 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103458689 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070668449 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10093964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067334024 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067030085 seconds)
  done (took 2.340827867 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082759276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083186485 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070558564 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081993687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063228935 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08266888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081209886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088561244 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081907785 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073078366 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063636143 seconds)
  done (took 1.998462478 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082388639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084622431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069416634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082181611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062988213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081960738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082267902 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085703916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082498258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074269171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063289248 seconds)
  done (took 1.997017639 seconds)
done (took 7.475332151 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076454084 seconds)
  done (took 1.209660464 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.538500469 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.598346255 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079117369 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.102343016 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199090037 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112897321 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238824433 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083923082 seconds)
  done (took 8.262711779 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106801509 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071046566 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072675237 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072694403 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071279083 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071448754 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072216498 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071492179 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072768475 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071491934 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071632066 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073567875 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071236021 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072153975 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072170168 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072683923 seconds)
  done (took 2.405444301 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097480332 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09843372 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076050406 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077480695 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075436012 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075130979 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077921723 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077249284 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074025488 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075908929 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078363807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076388566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07576595 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066839174 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076664631 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079371811 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073848686 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076997174 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077495183 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078777857 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078083851 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066366437 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076024874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077347595 seconds)
  done (took 3.111586642 seconds)
done (took 16.133423139 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116515722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080961828 seconds)
  done (took 1.339822962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079286558 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082204513 seconds)
  done (took 1.311020014 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077960856 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063455418 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086042607 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077024221 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065941947 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066029555 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085099953 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065839184 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065713818 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065894987 seconds)
  done (took 1.869240142 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065829895 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073234881 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069757969 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080196841 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073053768 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06716017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07149451 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067740358 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077177654 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065809932 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070881136 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08687194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071359463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087783423 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071662995 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070721837 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072631544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069652826 seconds)
  done (took 2.465939936 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063701719 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06398935 seconds)
  done (took 1.284196327 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066743549 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064667161 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067968814 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068464999 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065631413 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065015175 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.0662537 seconds)
  done (took 1.616390763 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408236613 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125127331 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338825057 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073276398 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082336182 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264912752 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066847152 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071846731 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072010706 seconds)
  done (took 2.696920491 seconds)
done (took 13.742439518 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08105428 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087146503 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099747696 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.423528969 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093353558 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068311268 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114570855 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185868221 seconds)
done (took 2.317899659 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211341414 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.933107485 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.485239586 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209824539 seconds)
  done (took 2.782865571 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34515433 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081786904 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079456731 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069329916 seconds)
  done (took 1.745464094 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067892598 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070641171 seconds)
  done (took 1.304907666 seconds)
done (took 7.210749218 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065645139 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064784871 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066861653 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06630735 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066899944 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066772683 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06648389 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092035175 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066700439 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066729055 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067839064 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066788908 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066603701 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067438221 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067000904 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067223194 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066895244 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066810223 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066900259 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067302145 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067443625 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066541099 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066671232 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067258667 seconds)
  done (took 2.829554676 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081773441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067361982 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069270056 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070454402 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071727588 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070986365 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071090713 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069972366 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070790928 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068742378 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071221007 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07118721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069034196 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072256362 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068727252 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071253925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071069113 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069159812 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068717776 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07183393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070788815 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069011909 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071329246 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070691452 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071322188 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071661829 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068269333 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069206741 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07081512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07159333 seconds)
  done (took 3.293627589 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06843809 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061932348 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06201627 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072137382 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063503447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063918655 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063000636 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064004887 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064418168 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063584243 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064761632 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062893456 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063011217 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063672662 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063769737 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067588752 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081180808 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063377193 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063316082 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064069277 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067381982 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0629185 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063135518 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066126921 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063611296 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062956839 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063472075 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063011459 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063745611 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063028209 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067314386 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067910337 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063308347 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068102631 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06775359 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063223985 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068067604 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063245992 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063791241 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062691565 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062838864 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063223357 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063118756 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072786133 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063363819 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065242791 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063304649 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064303476 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063728511 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06593194 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062818279 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062902998 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065039985 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064503159 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068228803 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062766488 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063915617 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063285432 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063647138 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063160839 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063046568 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062933005 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066941089 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064222268 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081403013 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072277341 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063047334 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064720721 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06416082 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066465448 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065057738 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078630974 seconds)
  done (took 5.874369082 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085748569 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088088621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069026698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068634522 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064314857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063639331 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072622526 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064262022 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068621656 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083410088 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064044464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068609027 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068967423 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068126372 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064389312 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069231444 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072502748 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064467323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064478507 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068157374 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064737477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072241676 seconds)
  done (took 2.729448981 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146500985 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070650852 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109773998 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075092923 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073682259 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07530266 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070473289 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070681017 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070647799 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070945246 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07065996 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070638539 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072763063 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070744766 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070464058 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070583653 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070603367 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070954983 seconds)
  done (took 2.580917457 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078822009 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067614761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089693095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069718152 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069617115 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069380682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073927395 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074730924 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069140367 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069637307 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074962117 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069327617 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069276278 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069418321 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069402538 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069107376 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069001299 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070303851 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074531641 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074073686 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073824643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074017622 seconds)
  done (took 2.768783374 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079019508 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076291968 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084627647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071865221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064352728 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063757044 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070390465 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069029498 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070879082 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068478543 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069368663 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064878593 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071412614 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069531191 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071480232 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068715567 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068361571 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068672773 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068768454 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064059662 seconds)
  done (took 2.584884827 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083468465 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065792694 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066437476 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072531631 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06665465 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067062625 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074005999 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067708635 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068097952 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089192909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067110508 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067600211 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073898492 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071123295 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067142724 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07355119 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076200711 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074180525 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067707453 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067397802 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088561856 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067176934 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073867553 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067687164 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067167237 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067163774 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067038398 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071033745 seconds)
  done (took 3.180040733 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065781248 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065095623 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065750643 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065784056 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066259241 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067250502 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067032811 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067743156 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066878178 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067478491 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067344485 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066726399 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067128332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066822631 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067230944 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06714679 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06666411 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067019473 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067191857 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067260696 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066956691 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066777137 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066492036 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06712041 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066992423 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066855199 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066531182 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066501468 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067280717 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067086938 seconds)
  done (took 3.190829228 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07574837 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073717475 seconds)
  done (took 1.336119076 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063789119 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078906813 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061629197 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074318325 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073171436 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066971509 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073964803 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07371603 seconds)
  done (took 1.749706849 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085640752 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077584644 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066413106 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079047179 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07768073 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08725619 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126558155 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066835853 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076888386 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067166103 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084730105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068857357 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076415621 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071404131 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076593676 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076531037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064496416 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071643644 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067684693 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064884905 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06729991 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080155382 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075781001 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064080933 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071267935 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094311545 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082580145 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065274107 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073228275 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078386511 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076388371 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063051338 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065526541 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066027799 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06402732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077224175 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085206167 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072805362 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08006001 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066608854 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075219974 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063770006 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074584667 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077744753 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082422584 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066022708 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066593785 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064139209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066986821 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072044176 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063779186 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070606212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063397057 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077947895 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07373677 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081021578 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064110895 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07138194 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072553193 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072680051 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077188348 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072112223 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075416961 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06545561 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081575539 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075551957 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07824585 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064136259 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062541701 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063740151 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079675101 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09474515 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075779288 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066002701 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066786192 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062472066 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070997913 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065335208 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074536292 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077313212 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065356707 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070297243 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078425743 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070304856 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071803622 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072541775 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06398949 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069349231 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067035854 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085654126 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064089387 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063639886 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066908087 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084218168 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072533682 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065291003 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066462174 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07772288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06260414 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065392515 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066073466 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071520487 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079738616 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070757682 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070354485 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079821764 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074874558 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071367487 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072715509 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063174525 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066903935 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067665887 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077432871 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063291971 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073221046 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069877957 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066257478 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078150574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064192053 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065418409 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078177085 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076664237 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063866715 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062779733 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071443252 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064226622 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067196713 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078057726 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063240107 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063300725 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062441388 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072907452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063740047 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072262533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068454191 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071346846 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062455506 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062696625 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.195955809 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079523072 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069582204 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072372607 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076702054 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072388441 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06543525 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078517178 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073039957 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068091636 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075474046 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069742969 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064438427 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068049892 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072500805 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064645155 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074070174 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067977905 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072289154 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066403306 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064488835 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071646916 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067392214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067596809 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071220024 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06498514 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081454237 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07200629 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063460144 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063216801 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074426493 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067292921 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065313043 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068106477 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072604829 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066638373 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064242086 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065578376 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072245958 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074602906 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069116832 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067080261 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075004821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083492229 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065020657 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072978505 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065498731 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066675995 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066578544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0805682 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076586501 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070871852 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072777607 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063250862 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076027391 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078308359 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068541481 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063977317 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068236178 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070459682 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077033845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068330533 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065860934 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064759678 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072512745 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068479001 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072937767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065901931 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068611223 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071579102 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064572155 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07178667 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066755008 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080559611 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073512962 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064069455 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068320796 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064254954 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0772402 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064263173 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067210826 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068816001 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066498432 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064842822 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07250998 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062730363 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078387047 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078862568 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071449348 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068353723 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065305833 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078352663 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071807402 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073999285 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072936548 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07587035 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081070871 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067973442 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072659194 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081642924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065847267 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063273033 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077947819 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064251685 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062922913 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064275757 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064457588 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072459572 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073182122 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076008415 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063132935 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07232582 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064001868 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068115465 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064067497 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074982678 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072908919 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070629001 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078631106 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066115943 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066100998 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073642385 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065436631 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066894026 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066423779 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072744159 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066254075 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072069763 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067964537 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071024391 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06733662 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063277767 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07089427 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064984765 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070851076 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074501114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064241151 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071099421 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071755676 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065094838 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072104485 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068529685 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067908922 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072662799 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.203941884 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073207674 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074106489 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06573433 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079363178 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066925243 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079385298 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072290733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063847501 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071950404 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072746792 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071162157 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066533701 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066368952 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072116692 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06549701 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07326669 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07891352 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067166425 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082067612 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077621472 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071584207 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072952349 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071230136 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071907772 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068893966 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070523316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066537979 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071387611 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065584442 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074868734 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072766193 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07086992 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07243768 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066959635 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072052214 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067026654 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064288665 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068445418 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069692269 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065553056 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078851986 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06635055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068642554 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065566005 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066717374 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065038858 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063354562 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072844276 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074817872 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066474007 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074941542 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067394224 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070703278 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079938632 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061572439 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063567671 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062848319 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066676982 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077372351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064621797 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080148975 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071799173 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068693729 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063470692 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066656185 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065155997 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063925612 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064147944 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075483767 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067922433 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065550877 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066131264 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073299209 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067043894 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079523581 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065436523 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070464154 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066832386 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063622836 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068837195 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068631631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073735902 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066881079 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06752613 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063440586 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066297245 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070246725 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071984313 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065431544 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072246347 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077925254 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065830644 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073318942 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069209102 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063912097 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07292079 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065490835 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065799171 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068416794 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073697559 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074131523 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066442771 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080162698 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068559147 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071656635 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065869265 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064192197 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065502602 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066150847 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065594176 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068751614 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06699397 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079042999 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06395265 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072172531 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070851844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069099646 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076764442 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083643946 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072299766 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070788411 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067068075 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07181034 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078941909 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069364875 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072846819 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066243125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071158203 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074640719 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067464705 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076121581 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070717211 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064996687 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070698729 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065760052 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064510978 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064349685 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064242246 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074992189 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064972204 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066894305 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067736229 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062821835 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069027248 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.205215067 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080803818 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074278848 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073972796 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065095212 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063897605 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067194866 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067518932 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071593538 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07295588 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076215709 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073432971 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069258337 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065037075 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078466566 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074868481 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073272098 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0668978 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074266084 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066951101 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072866088 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070779714 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071281594 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067199236 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073710981 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071618155 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068369665 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076179342 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073753042 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06620724 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071894068 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071475521 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070333306 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064138175 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065805525 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072494268 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074497339 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072567619 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065590817 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07949221 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065264357 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069069628 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066849477 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063267036 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072792799 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063041054 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070197164 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064925612 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064355091 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062621703 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066911056 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065962639 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071034842 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066410548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06265623 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07933048 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078690031 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070664986 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063666533 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063162126 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063354666 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06422205 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068575898 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066795506 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072651431 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081591697 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068264879 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068708539 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064194298 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066085144 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073159591 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073977843 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063558502 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064818586 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068316161 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07203102 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077733721 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065435549 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065767184 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073511852 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072786638 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063498118 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06865532 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063742527 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074213524 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083197444 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066299257 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071708156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076442904 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078590465 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066051722 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064036268 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066068087 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071962255 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071512019 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066743944 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067629541 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085453883 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073036182 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06833511 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064972631 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072537106 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068542592 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079811244 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067034697 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069115257 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074615146 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07083545 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07297313 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076356041 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077859032 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072518315 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07187773 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064874346 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071213545 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064818331 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068978035 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066608216 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06630181 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070088131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072393065 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069032605 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08168065 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080483717 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069921499 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063172826 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068368252 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06813076 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063867714 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066377683 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063949837 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063999894 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063668433 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064602694 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071678668 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074108105 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069236447 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065705529 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064656831 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062625044 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074261854 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071246341 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070412291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062110707 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064752938 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.0649637 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072322278 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.208069195 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069191572 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073434147 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073405329 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072853577 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065116952 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077985345 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065109336 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07223928 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06806683 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066030703 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066176124 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073498561 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070365785 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067675678 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073166607 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072570509 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067963547 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064033113 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063300035 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075312488 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06424112 seconds)
  done (took 43.645562585 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100337526 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063795344 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062635188 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062739828 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072072551 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063464977 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062544394 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063684295 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063432557 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065371468 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062484761 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063537936 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070615451 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077642808 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073009832 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067022566 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063517805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063751589 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063219403 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064000364 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070307537 seconds)
  done (took 2.707133683 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070114628 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077799868 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075453671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079697897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071508598 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067690539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075565614 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067764112 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076028653 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073089287 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076319066 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068134906 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072558242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073735226 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073501929 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068087056 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076838585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072020633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067912024 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075949614 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068032848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075459515 seconds)
  done (took 2.876749718 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064244818 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063115848 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070008566 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061560346 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062972507 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062547456 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066539556 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062479461 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068341667 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067900403 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067907766 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067886835 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072684154 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064089396 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069078069 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063860816 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111148718 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068896387 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065426731 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06661239 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063782821 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072970059 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064280325 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06451148 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067805083 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068195202 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065710602 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064161583 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065154749 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067698594 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065336702 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063702131 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07229512 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071516047 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067597138 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067453878 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064897027 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065050331 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06362448 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06422065 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07408492 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063998733 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065566764 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07207639 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06394766 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063533237 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071840469 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065368671 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063464117 seconds)
  done (took 4.577115354 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075392391 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110934557 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068597578 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091125635 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076928398 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069215257 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068298053 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092611021 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064257065 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064655706 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07863489 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078545073 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066080567 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068814248 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072432281 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067605955 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068895093 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066515554 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071122676 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067083782 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071127821 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072092461 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07905245 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079711359 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069063298 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065550598 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066469646 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069130212 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079277515 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072089102 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069568034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07030894 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07989382 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073240818 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067078498 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067664991 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080786932 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067998669 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067759088 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065946489 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067605022 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069217932 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07219575 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080557799 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068266535 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073067653 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067745279 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065161895 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079759045 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067479173 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071915777 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08079929 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068837367 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067879554 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069338603 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079264828 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067908385 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066306962 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068257411 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079949874 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06549329 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068642238 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080378801 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066816559 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071803324 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08072545 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072924602 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06873731 seconds)
  done (took 6.313038408 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0738746 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094961346 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079920962 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08195267 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07578311 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075915987 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07630301 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076178523 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076599202 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080676086 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076258209 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118015343 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071993157 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077908067 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076034648 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075932831 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076320592 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075972684 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076050947 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075956211 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076367537 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082755679 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075861069 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082129113 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079031524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071516068 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075933927 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075705629 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082202926 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075626569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078931707 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075791589 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07565582 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082282931 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079541258 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075703045 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065359092 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075958342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075461368 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075470685 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071186861 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082274781 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075669504 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071183901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075404237 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074587597 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081698264 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07876986 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077990366 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079403109 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075691284 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082309489 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075605442 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075734026 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082215974 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08551033 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082232409 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082175613 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075934417 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08180346 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082281842 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085174272 seconds)
  done (took 6.163797665 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078582124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070842127 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082079816 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063749612 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064066714 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074835635 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063771127 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066792447 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07266766 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072879486 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074982777 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074478204 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076989052 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075384771 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074998759 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077338608 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074907562 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074756708 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072450998 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074459442 seconds)
  done (took 2.762483496 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076320571 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081128131 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068004997 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072827536 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067641989 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072632027 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067411365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068098983 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068693402 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068510467 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073972735 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07431041 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068180256 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072551154 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073767927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072459026 seconds)
  done (took 2.43493475 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.070658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070198324 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077456851 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063877349 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068177646 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063022106 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063749639 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063241374 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064781389 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079898004 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065248615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077629064 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065746642 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06442447 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064682932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071475568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064602106 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065301015 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065789309 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079335121 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072808887 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066669698 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0692901 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065761651 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07195925 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072966916 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066898151 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069562773 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065561012 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066224477 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071744603 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072681604 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065015532 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065981161 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064798033 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065115022 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06574076 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065783457 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071283099 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066003494 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063972336 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.090304089 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065604662 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066441672 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065232889 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065763089 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065006436 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071498877 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06645454 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071511685 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063607728 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066100901 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064219456 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070879426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066711647 seconds)
  done (took 5.042075729 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079686996 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067609158 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06184768 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061832081 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067094088 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07048615 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0694734 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070103898 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070482746 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063939873 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070695073 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069511283 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071194463 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069549824 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070649079 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070087921 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063922166 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070427399 seconds)
  done (took 2.53998413 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072811981 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067072101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072030682 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067682727 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06690596 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066587192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062612371 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062271805 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06299596 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067103396 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067204592 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067382987 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06258408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066746325 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067387487 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067107191 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066983596 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062386683 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067710682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062433292 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067545915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062878159 seconds)
  done (took 2.750472364 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096641433 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084222651 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141443573 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079891409 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087701292 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072532025 seconds)
  done (took 1.855497527 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092824387 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097609058 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066920067 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067378775 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074618473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072742776 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072577322 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073174809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077749547 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078267214 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072915007 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078382729 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077697459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079773742 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07562073 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078061569 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07299888 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073061789 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0696768 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082439039 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072908693 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076898308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072122247 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071018546 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071326255 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078123412 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076479978 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076968543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073087436 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078608066 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075329155 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073030399 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07804074 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078061911 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069653399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077614281 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072227128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080603114 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073091262 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077464418 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067548287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073759973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076512651 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075315721 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076511345 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071151721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074610483 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071322558 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071137179 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081839576 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073864497 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076780903 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073031932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075992882 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075489319 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082184756 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076033272 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07869758 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075012386 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077340007 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078510131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073533391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076670268 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075787848 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073694823 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079484916 seconds)
  done (took 6.296163398 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104115074 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068893394 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071736155 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078411149 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079714151 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073153204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073654963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072967411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073254773 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070513983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109041218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073521847 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079876099 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080493425 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073670294 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073423565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073693522 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080106908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069898123 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084767186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073246486 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079467801 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079897979 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079659695 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078537951 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075911875 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072967598 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072744634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073124014 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073449149 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075005706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071316023 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078220565 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068479243 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079032302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072153011 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072104776 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075693885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071208688 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073824645 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077862395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082306413 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073077416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071044459 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076142264 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071501671 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070748431 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067985578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070674666 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067711734 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075550111 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07730997 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077021197 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078294883 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073046535 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072693633 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073108218 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073035301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073008034 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075287636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07925744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072743592 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084898449 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071110272 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070923342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077642763 seconds)
  done (took 6.311498046 seconds)
done (took 129.562667227 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20965425 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18448996 seconds)
  done (took 1.67706811 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074414023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104205554 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083889256 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136759758 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072114007 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106213576 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104772744 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083743294 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071525404 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071718369 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071444219 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074190167 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137170937 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071579747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072092699 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07439967 seconds)
  done (took 2.712069522 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104833684 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169294518 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108965353 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06972115 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104993421 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077848205 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071232912 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085519207 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079110982 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.074150558 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080054694 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078471577 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.076408589 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077947804 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078714528 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080357372 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073093304 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08064432 seconds)
  done (took 2.876549614 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103756646 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094068141 seconds)
  done (took 1.504762483 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174579172 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105920752 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146598001 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351513521 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161285284 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.433259252 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138802526 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139959883 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113601802 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136436825 seconds)
  done (took 3.206097433 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103626495 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.195019454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298025268 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120911085 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07628662 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113120258 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124211022 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082693224 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084069213 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083730494 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084298231 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078696893 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103339658 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077411557 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076502332 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078462067 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106608864 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075237818 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07634221 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078931317 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106233387 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070178652 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077271241 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075589498 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081156147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080982694 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072015331 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070708503 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078775055 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075869896 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079772611 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.110345255 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080799708 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106470848 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07458317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108195451 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078736889 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076493414 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076094825 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076735983 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080260157 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080041242 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078707117 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078623484 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071438652 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078874189 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071678144 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071335401 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083334358 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073620404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083402762 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082294839 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109924724 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07266686 seconds)
  done (took 6.219647439 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108314792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10748739 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071226552 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113173728 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104733303 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071088599 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106160484 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099476841 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108776593 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071802109 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069555059 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071000445 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080076104 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08138995 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116850432 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109011656 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073799903 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070745596 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108585908 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10780392 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070550655 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103139256 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098865157 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10857029 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069427483 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071211437 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070207077 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071757716 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076607226 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077829651 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070077501 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079826608 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084395516 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078001169 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068919331 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0695863 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069451527 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079199727 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079112122 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078501094 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077179923 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069247037 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069221624 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070411283 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069887532 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068088369 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078026848 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079367307 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0775401 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069881863 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071252235 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070107356 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070457725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078733289 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076645571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079334736 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078729996 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069059307 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06890492 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072207965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079447793 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078668323 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078283045 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070789837 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078916439 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069582189 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079886091 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085728511 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069263744 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07045224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06920107 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069489598 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070964542 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076987774 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078624857 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071386346 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069247693 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069729836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078867231 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077466572 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069047504 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075980968 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068243095 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069385987 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070444808 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070755203 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076378851 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07869889 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070874407 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069433244 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069049857 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069646645 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068728304 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076589951 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078950214 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078833584 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077090128 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070909399 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077644669 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07738177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070376862 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077689862 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069134957 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070805733 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070512034 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077165411 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076172229 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077884393 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069502653 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069422511 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076802315 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079269199 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069028212 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074844473 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076833471 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075996555 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06714223 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077963196 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068207951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076654098 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068312997 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211875076 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073513003 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080631297 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070241581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069172808 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070620597 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081565004 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07335842 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071651094 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072298294 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072841424 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079622046 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084052005 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072456752 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080599688 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080991296 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072719363 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079665306 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072039991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08125602 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072112462 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072546656 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070428458 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083774052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070269444 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06944377 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07040413 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078927582 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069978301 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079571651 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077071405 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068877595 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080596561 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079208707 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077257474 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079148888 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071465463 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069526163 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069851083 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069550996 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076543243 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07806734 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071420242 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070112767 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077327339 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079869875 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069319107 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077932722 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078282328 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077806001 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070221732 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070183839 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079952672 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079889477 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077694317 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077677132 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078794687 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070529837 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077585964 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078866378 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06987692 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085376696 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071825886 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083398493 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079286126 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078099535 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078449721 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07947822 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079371767 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080216638 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082867826 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069206571 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069743534 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078142343 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069692487 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069695874 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077529746 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071119294 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071396089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081780323 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069808203 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079652976 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068856301 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078661466 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068539659 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071412325 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08196207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069469066 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0710804 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077992999 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069300847 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077463242 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081709813 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07702978 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069534875 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07030086 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078326233 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078077624 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06973838 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070108146 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070995934 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077165192 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076776931 seconds)
  done (took 18.604008687 seconds)
done (took 38.118759565 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209831278 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157068082 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188433159 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116803414 seconds)
  done (took 2.074173107 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108371809 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098656253 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087805042 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066160469 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093893427 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066641798 seconds)
  done (took 1.860945363 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301991401 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203776031 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182615058 seconds)
  done (took 2.022872388 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211287379 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195637863 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47695351 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.293539162 seconds)
  done (took 2.611076115 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142724229 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0827808 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06461027 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083139579 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123920336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15012124 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092788948 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117943112 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076072068 seconds)
  done (took 2.326342062 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148416708 seconds)
done (took 12.403200745 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.215139961 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.335218322 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073130338 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.132947546 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.208911173 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069234379 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076610485 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153119082 seconds)
    (9/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.107545061 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175695373 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085340586 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121376363 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076513809 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121437078 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07851681 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.217063423 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075809707 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067496159 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089794641 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075636497 seconds)
    (21/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.129758832 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106681447 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.244907975 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.183723778 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122098333 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069108369 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077842117 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.104213053 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087757383 seconds)
    (30/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078003151 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.249742383 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181846673 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.101187253 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11844126 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142764818 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070499349 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074614198 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065626776 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072978403 seconds)
    (40/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.193987981 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07808015 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074058218 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088447153 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088309245 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.217133104 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082572958 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.14917016 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227591418 seconds)
    (49/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193773602 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091228054 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076614906 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.06708699 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084824668 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075334086 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083863252 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092356544 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088488146 seconds)
    (58/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13480319 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066218385 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07510502 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090440959 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074496828 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065376246 seconds)
    (64/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067161111 seconds)
    (65/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.181245113 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082246669 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.170245914 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077467615 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074127942 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070554413 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077502403 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065505764 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066768517 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199632925 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065528331 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159690252 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216208416 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07338276 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.138547727 seconds)
    (80/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.177468507 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177820098 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084296311 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092082554 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132832539 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074141249 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.16746314 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.179170262 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077644085 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077166738 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074200564 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09055065 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087693981 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212200245 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071953184 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.240478013 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06820357 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067929656 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185165593 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075319768 seconds)
    (100/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177450352 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129759268 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.179609537 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06752269 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070278661 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072913287 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084408502 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066671257 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066368743 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06698026 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074825448 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180122783 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075823066 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073145937 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074008669 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088837869 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20289995 seconds)
    (117/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092535469 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132157403 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080251763 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066546742 seconds)
    (121/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19430394 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066222471 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176264773 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075802357 seconds)
    (125/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067211776 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13819206 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067552469 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087983673 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074480626 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083907404 seconds)
    (131/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173322864 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074677124 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066113111 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074486955 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066646696 seconds)
    (136/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069441383 seconds)
    (137/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068767729 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072951232 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067003825 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075335402 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066046884 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089218633 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066566392 seconds)
    (144/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065545152 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123985592 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067439994 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194890754 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113048574 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066830489 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195766154 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068669105 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073878531 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172602903 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.177326788 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141517711 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.232108604 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079214887 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066511466 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078004208 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127785727 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09145552 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068678495 seconds)
    (163/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.124498501 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06694339 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065820842 seconds)
    (166/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067020887 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070436207 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066951166 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.138031022 seconds)
    (170/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17001147 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066356599 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09549892 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066779957 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065283634 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069832911 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067051029 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076457834 seconds)
    (178/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074463168 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067918262 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125393059 seconds)
    (181/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067224108 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066000692 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118880333 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.078094374 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.195701916 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067163789 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136639826 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228922621 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142827405 seconds)
    (190/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068879866 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07395142 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065947388 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074675774 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074321351 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066584907 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116593956 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065451854 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.130503175 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075095831 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067712721 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066565576 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0856032 seconds)
    (203/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092259865 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120458735 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088846321 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065450902 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071805324 seconds)
    (208/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188784703 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067086189 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077229623 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073881191 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074089047 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076247536 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.289469919 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.083328047 seconds)
    (216/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.128610423 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199968894 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074541597 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.080392142 seconds)
    (220/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067945827 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174520776 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066503431 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075175329 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066446615 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.128009102 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066090832 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067581337 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088303864 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067265181 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07607006 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070147689 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067279636 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067259039 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070716259 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 0.158999273 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073279907 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066908765 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171897238 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182033935 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089119048 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069258893 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093030873 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066565015 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065514006 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067398336 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171607083 seconds)
    (247/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081045665 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.068184262 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070865657 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076731688 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065706061 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067291867 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073211325 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066790086 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135008577 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066208446 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067195157 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066540538 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066981023 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120232414 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066895196 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123989799 seconds)
    (263/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067471083 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06721795 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070772584 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076027294 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168590838 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067010724 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144731581 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078961002 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182728993 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073613676 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066778172 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066840502 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091714952 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 0.133599467 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078822101 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067123633 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077849401 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067049511 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06836151 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067732917 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068340725 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068949845 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070917028 seconds)
    (286/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079011689 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144175374 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067624402 seconds)
    (289/309) benchmarking ("sort", Float64, false)...
    done (took 0.132854123 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092205637 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110044407 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075269411 seconds)
    (293/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06701828 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068000951 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17905358 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065659064 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06605533 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068520519 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073392779 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067869586 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066999877 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066031395 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067220011 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067150808 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066744934 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066389142 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066020471 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069762149 seconds)
    (309/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066982507 seconds)
  done (took 33.063728947 seconds)
done (took 34.416468002 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086412694 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099351067 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074197919 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093824629 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082765249 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096434489 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074471992 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079852596 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082322596 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080741782 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079976801 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073403177 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07635635 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076479882 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074355412 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098114369 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081217565 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075788158 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075536932 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066659296 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075448256 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067447341 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066860326 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073223671 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078237801 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074211547 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077065029 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076353595 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06709632 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067473762 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071891822 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075681386 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06749079 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079423765 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07585744 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075870698 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077163772 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079107956 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06692632 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067287252 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076864513 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066712464 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07481343 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073526245 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071451173 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073711515 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075581451 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07942189 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098068704 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071752261 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077158648 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078192486 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079123302 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072868231 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07256028 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075273007 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073073025 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098103479 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075478963 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071255403 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076621105 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075951227 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073753751 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075325981 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075253182 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078428021 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079808728 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07340392 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077533513 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074305167 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0669898 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075171853 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072190535 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067098353 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077730286 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080008813 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066215484 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073849178 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07531374 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075497487 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066896942 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071197494 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066670171 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072005338 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071225351 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072774847 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071629239 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073766941 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066520268 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075742544 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074200333 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074622056 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066903064 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080132072 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067315432 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073504605 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067110567 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066755368 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06635782 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072150008 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066744279 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071651729 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075952426 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06581515 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071400408 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079550738 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067146957 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073482244 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065618405 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066433803 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077627474 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077325979 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067214306 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071160484 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06556132 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07210155 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065558777 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065943191 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06564558 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066618399 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070708323 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066007377 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070226499 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071711823 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078639677 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06638842 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070962967 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070754032 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066448802 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072909637 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067134509 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066336098 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066101642 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079629063 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070532885 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066222445 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071359234 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070713327 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074209542 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064867368 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074771357 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071279974 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070042265 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072327461 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06493693 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076387842 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069800164 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069683838 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064290446 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064725968 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064669601 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065007933 seconds)
done (took 12.6232036 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072055326 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117827749 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093345334 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093264753 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082981943 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067612092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074555309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092559926 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068806804 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097229003 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088753845 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089207025 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110772953 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066847634 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067833001 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068383824 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068925242 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079687375 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094628486 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089672496 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106702896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067605559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08682014 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088020204 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08449115 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091675731 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068502964 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069078479 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070687004 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.088363168 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093276056 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070915147 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06866041 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091178884 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085967039 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081005467 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068607156 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076443337 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068496875 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067328174 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069161384 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088323154 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07548724 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07843383 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068910567 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075784064 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06902376 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083316892 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08621065 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076254406 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083523732 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091550893 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071608037 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084150817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066898059 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083236066 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077414683 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068545875 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068030108 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073214806 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067885132 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070347934 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078875419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076663021 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072703711 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082142443 seconds)
  done (took 6.658513244 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086873293 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094660568 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084050819 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084635214 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066759597 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070626753 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067662798 seconds)
  done (took 1.991400332 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069217803 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087589566 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091409034 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090964252 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081999929 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092169927 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075653904 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068116898 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097405622 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066953363 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087889114 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098793327 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071596576 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079423516 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092462505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06792255 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092090271 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068486337 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068771266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091913051 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072483651 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094613973 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079417958 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067789282 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080334961 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068807024 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100793256 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076003048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069221226 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069782512 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069504768 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094707829 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080192204 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081871391 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069024794 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083414887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081530502 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071023582 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078843069 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077558354 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081666956 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069010279 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067343519 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069277459 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071211234 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079773293 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066842409 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069314217 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068903549 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087263768 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066937109 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080281042 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071270418 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073556595 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073649976 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072901559 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075962598 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0695789 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087896765 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06902413 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085496845 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084176925 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081279727 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084238546 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067538825 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080089753 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081056849 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068945603 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070166006 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069524052 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084421299 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071428647 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069703184 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081364775 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069952948 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095746372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094816847 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069428205 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083720804 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070426098 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070463385 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08041612 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092014825 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073565268 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0691577 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072785799 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070275508 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071756199 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067052971 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072122139 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069858769 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073648243 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069855227 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071442044 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070106772 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08441323 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067203292 seconds)
  done (took 8.909648068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070367244 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069223772 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069910031 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06850603 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068817498 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069053679 seconds)
  done (took 1.878619027 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092042306 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06843139 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081376717 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068905569 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10396184 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083778028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086024301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080172688 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082313001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080421577 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084340053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087126469 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088670206 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071578895 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083808821 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070062174 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08427925 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073217612 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080373826 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072092353 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08181944 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070994244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070985482 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088372229 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072277355 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070135599 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077839984 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079929241 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079754044 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079007652 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070508638 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07230527 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076913318 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079197453 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08639626 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079033815 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06966494 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077018658 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072712092 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073722891 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089568539 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076419337 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073120187 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075921598 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07975233 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077543628 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075024932 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076803474 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083788674 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075142043 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074685747 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070205794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072001942 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075451908 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077018165 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077965101 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074670503 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084437427 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070590401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076760591 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068374715 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072474774 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077282637 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071966557 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075728048 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074768031 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076945611 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071392209 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071009168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068655915 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07523961 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068579284 seconds)
  done (took 6.994137073 seconds)
done (took 27.888808987 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.525173248 seconds)
  done (took 1.938367599 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622008305 seconds)
  done (took 2.067064539 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.544027708 seconds)
  done (took 7.986055408 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.409388484 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476884157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.741889323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133953417 seconds)
  done (took 3.242763629 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705657829 seconds)
  done (took 2.160429049 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239587351 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226891839 seconds)
  done (took 1.930310057 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348749249 seconds)
  done (took 1.791533121 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.07887775 seconds)
  done (took 2.524410962 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241738897 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161269682 seconds)
  done (took 1.851322597 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.449816938 seconds)
  done (took 1.898579368 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.219683475 seconds)
  done (took 5.668854715 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219511671 seconds)
  done (took 1.702557502 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235026025 seconds)
  done (took 1.682923498 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.823291421 seconds)
  done (took 3.273624044 seconds)
done (took 41.176251428 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08360955 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085886732 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085591559 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081855405 seconds)
  done (took 1.768246096 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075732763 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070860495 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075023987 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070793966 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075027359 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071127632 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073031262 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073941964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07077974 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071228924 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071685121 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071099045 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073827208 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072550059 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070096481 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074322789 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074963675 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071436813 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073872421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070870634 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069135404 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074237084 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07429154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070253612 seconds)
  done (took 3.192607656 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079050524 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073614988 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075520302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072306612 seconds)
  done (took 1.758904188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077985613 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088408591 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08736708 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078074987 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089435613 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084324383 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067465541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067783846 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068949888 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077413427 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06653154 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093847952 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086696116 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077235099 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079504346 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064061807 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066445844 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085567261 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078147643 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078544588 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069205143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077706355 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06674907 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087864139 seconds)
  done (took 3.320146925 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086464506 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066415037 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086232544 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092139077 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093609612 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066882279 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084898843 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094041082 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141476983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066820403 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073079566 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066783533 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105179134 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067204164 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086774506 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11255109 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113227764 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070533676 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09911286 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066539869 seconds)
  done (took 3.207516837 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084577776 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06989504 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070987645 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065776965 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076673727 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073259483 seconds)
  done (took 1.908579406 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068495448 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068206231 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067879182 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067331621 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07315923 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068056463 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067157653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06836397 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068430984 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068795188 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067969793 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066886539 seconds)
  done (took 2.281947042 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194152743 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070741773 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07113819 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067270402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072553414 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068933182 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085915361 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072269915 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097704258 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070070932 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070170067 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072724387 seconds)
  done (took 2.479453323 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190938081 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074100368 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224181263 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149336895 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106254423 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113378679 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115268934 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11193366 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136811011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100741558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15764664 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163579607 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107014643 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132819207 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09094527 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123532593 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145192454 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155787863 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0998494 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155096462 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135017184 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122217811 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14190526 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096909521 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101114141 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114546166 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074101715 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080079944 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162027428 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126880623 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139455812 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108007493 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092330854 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16459574 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156351191 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131664636 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141633193 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087118304 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117470409 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129071593 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193301031 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087254461 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152110089 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101553037 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077763887 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123531658 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10863401 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113543859 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099069209 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085931027 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275538712 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175299455 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.12902714 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086503423 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117649243 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104892313 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111340447 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115555266 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16951895 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149874344 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122252001 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07033439 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106224051 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142418794 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125698469 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104492425 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117899084 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092701217 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1244399 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150013735 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118184463 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132791057 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111799909 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084967756 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114851565 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130598989 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121397047 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164781998 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121843274 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073238154 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116971267 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095389578 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078358289 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14340753 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074769786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164333455 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095626095 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120501559 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1249765 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1048917 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104562442 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150044617 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134193513 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101003475 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084193658 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099280401 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114533346 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136448989 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084388548 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104168856 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109774456 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076656879 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125474508 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072808879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114361222 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092593958 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112999931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118474481 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076020322 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264819381 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102423988 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101723086 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123508662 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153422824 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088630378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081787518 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160974171 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119618487 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103669423 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138852431 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151294694 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121061538 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098168818 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140110759 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163853971 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087390136 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153575553 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101313922 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08142524 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10283729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117868387 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1062336 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118671837 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078685614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114897343 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153950872 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072915193 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093384575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126329243 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078984157 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078777662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102603921 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101792283 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093675368 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098001271 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101028487 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130191709 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117083411 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104149896 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121398815 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097427194 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160103427 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088131935 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103092167 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102601505 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070906227 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126085139 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147088421 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076478459 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150363026 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116493913 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111658025 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117083287 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084117549 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131776409 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07782446 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071613617 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130851109 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108060351 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103418617 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.29265889 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11308697 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118417801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115049026 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126131346 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122105567 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123138394 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103347867 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08667224 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110082404 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123112181 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071202382 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088915521 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080153231 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099414166 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090919602 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081510347 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131457206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115538342 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106430643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109816359 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094678986 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141377704 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07699968 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11881454 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118013915 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092071305 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146283905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144409876 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126190438 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098758046 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129694641 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071990947 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072593331 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086696812 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11769699 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081459177 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081742095 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108921881 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142091723 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12021369 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1288743 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118038767 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111478247 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149082375 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070988442 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117365694 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136610103 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116767264 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102084198 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088228084 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094630133 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136665032 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099977643 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170219012 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108704609 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116844799 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146215852 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097646695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075982233 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099149129 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273794693 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101131856 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135600198 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095391863 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08445715 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103590059 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079330669 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095999106 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119231941 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112420586 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129425752 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107580687 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122274292 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076583545 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106984701 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117585907 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116435567 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081499499 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111525104 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157411991 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093531712 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110893785 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142057788 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076859883 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135001187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162420729 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135463172 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082494135 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1015963 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115946681 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120534571 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112602195 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13201026 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100981271 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13169605 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106685799 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082479494 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083920212 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092226222 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100093636 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10869467 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101737876 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110003253 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093244562 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123404026 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09908616 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106534545 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112509741 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097591039 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093246661 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093041928 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164127523 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112913109 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159170021 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099885557 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136909412 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149188099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073116634 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075878402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077814562 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128339138 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080522814 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270995116 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108674603 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11202728 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117899122 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130729932 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093108935 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069905767 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105637772 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126027168 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117841539 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09338153 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099436006 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149108776 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114396452 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077516324 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10788281 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1112329 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100407031 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164032859 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078878165 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105147031 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074835222 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077768814 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121190298 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143262152 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081359071 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101541639 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114780353 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107038406 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120454989 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095198084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107666429 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125312962 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13953337 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12352961 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089222284 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108718284 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121997638 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144811277 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100180725 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09734993 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16580314 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143019691 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153310693 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088741274 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111509172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111207226 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109590849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130347253 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083528901 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153449743 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079311552 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126906458 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096278776 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085764219 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120409516 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10745256 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08516378 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133024963 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262348074 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083255714 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080784498 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109943688 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117296456 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10256179 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076167846 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135204901 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074444476 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131746689 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163769415 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080565524 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104774368 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09599097 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081715299 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098888209 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097806619 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083036207 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096626313 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159594216 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084634359 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138955187 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128445749 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109834869 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132540834 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100162309 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640090582 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078583499 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143598263 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111195264 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165560499 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095677241 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113379405 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10867918 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118464967 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135251461 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098426756 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178224778 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126302026 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117026064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080292893 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100233477 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099754516 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08584215 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103065821 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108739141 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108530248 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091615532 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112924014 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116205318 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080648805 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092961329 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146818459 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110788252 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133993771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129452144 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081981399 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11168307 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125281381 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07695641 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.262657107 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142153077 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101972384 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09717006 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080939822 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098226668 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162261397 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071610178 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148761048 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117927939 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105719166 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109116346 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.10598543 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123341439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099435057 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11575679 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089739005 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1046472 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109668319 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081361292 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.112463907 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101455085 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107132147 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094942569 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094782814 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096989772 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143102144 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070672849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094917584 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109946331 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135672055 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160907469 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102264886 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081527224 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113440546 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113630052 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109955073 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116111017 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079351807 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079257528 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07999051 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098076042 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121030268 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109730314 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114739296 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10447734 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151401252 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081541627 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225548903 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095526297 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105073032 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090140421 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080299026 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094732648 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092902245 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099938431 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107429986 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163793904 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09251467 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08705267 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088786774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073495571 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079836036 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118209162 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104102297 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261775771 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101648541 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082025487 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099982595 seconds)
  done (took 56.990156042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104047364 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082509189 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097192546 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14353801 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121372862 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199625823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150601632 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189167497 seconds)
  done (took 2.650634161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069675658 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094569518 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104289533 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082757732 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067084252 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06868228 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224238918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081339003 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067706451 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091438872 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07738985 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069564489 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.448590475 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067135318 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068353823 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076738654 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067669603 seconds)
  done (took 3.380417835 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38303812 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.594308595 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359841209 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075801 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.87711708 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089278498 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.165979911 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13651781 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081942895 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529720596 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366214453 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13024608 seconds)
  done (took 18.356756802 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084554894 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077139633 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091704244 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09143395 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080131714 seconds)
  done (took 2.060293059 seconds)
done (took 104.824967399 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082628862 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.434192381 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070528183 seconds)
  done (took 2.097531264 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093141023 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090261564 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090276161 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08729563 seconds)
  done (took 1.932268105 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076844977 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077916181 seconds)
  done (took 1.72115811 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22955602 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176332201 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099056374 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085418035 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081306971 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081970575 seconds)
  done (took 1.818956083 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075254395 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073513425 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07371191 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074445365 seconds)
  done (took 1.862958401 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070875447 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067472825 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069727869 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072582536 seconds)
  done (took 1.846426357 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086858826 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085718035 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080518944 seconds)
  done (took 1.819419994 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102571239 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095653994 seconds)
  done (took 1.766685918 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084095382 seconds)
  done (took 1.651626574 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093852743 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101458152 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133441132 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116371768 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140163697 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11611711 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085246342 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086307814 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080632871 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087502746 seconds)
  done (took 2.610103983 seconds)
done (took 21.280305526 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082600772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376425226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361780119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092658771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670984581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358819418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992096902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094500036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144754071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070124068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088777456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651807957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985586313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333402714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972674325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330272519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655214338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070212843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069509287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070409262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977623834 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069096503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07027989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070218142 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652146755 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375740888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071565108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.33276515 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070242544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074606978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.36035582 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072517466 seconds)
  done (took 16.215796278 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074137676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123564166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073837111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086779785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071821108 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071167275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073734067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070382839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124255796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070822982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088554033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069777685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073976133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071282935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0907127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070098282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072629635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07120134 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073339574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071727755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090038442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0706666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071494487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071484587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071121631 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084274324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072306608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070559336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070843362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075065573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076139869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072473957 seconds)
  done (took 4.066697334 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119299626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12723314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074746963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108185469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113813272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072606557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148932734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095048317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130830972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070718222 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088506223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069951608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105538947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071671669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09216136 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071300118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073672496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071615268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070647571 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071553443 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090616476 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070997294 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071322532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070999856 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072320582 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085776419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0725169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070699957 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071411932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075194305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076627417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072859413 seconds)
  done (took 4.326784439 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073943182 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074586916 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082196581 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083496324 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068800096 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071088716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072233312 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069081058 seconds)
  done (took 2.175250939 seconds)
done (took 28.360149121 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08160736 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069294306 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073086406 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088460196 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075493532 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080384951 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066939259 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075747898 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073068652 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073801136 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074929807 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068927575 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071590492 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066435443 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073391423 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067435068 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082637468 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071939925 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081715474 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082056454 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07073099 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074105843 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076163239 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08189972 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08203797 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081626275 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077499655 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073939909 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069175206 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071755309 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071325505 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080202185 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083858459 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08495131 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068941626 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068367287 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072946372 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070756176 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086117666 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08070364 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073221634 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080376158 seconds)
  done (took 4.725538991 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087491727 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090126308 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083951963 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081012893 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091060986 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08352953 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087246196 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07835638 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079323076 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087545338 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075018174 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082164929 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080308631 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073642041 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078351557 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076385652 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080419234 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075439296 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07807114 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079280818 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088632619 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073941279 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088910207 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080637819 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076085831 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081614626 seconds)
  done (took 3.709451994 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076626892 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087286044 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094062614 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144905439 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112669645 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082080803 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08275617 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093145621 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097627624 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069847482 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074464609 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094315293 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094569677 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075872962 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070279793 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085705137 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085873666 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071831671 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076394014 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098856091 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091031453 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087423012 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095921265 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088991128 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069279195 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072590214 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074419852 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08629443 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072222602 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081332237 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072886759 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073902325 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071054106 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08133414 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072834282 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07179124 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097868251 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084157886 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084857755 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072532954 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081522292 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072597676 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097585229 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133463981 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071153039 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07651301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075796244 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081979893 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070086829 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098488068 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082047373 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069363031 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070599059 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068695365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068934263 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071969026 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071229243 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071912862 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079530774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075909081 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092290321 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076691432 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089569151 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070099901 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079653373 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068580288 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070992056 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068097251 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098104317 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070807758 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113843582 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069898441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067774626 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079998522 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07934134 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07536522 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069506992 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086506703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080437553 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073042135 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077436258 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073054229 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073719861 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102638266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072328792 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071223755 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070263637 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076007996 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074872074 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072303506 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084182712 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069477791 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072681032 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087562506 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068713095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070018136 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072701079 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071816545 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068780854 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079852092 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073813225 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072536546 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082267923 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072217456 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074908792 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082903319 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076566049 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06780803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071398811 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072851735 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070361691 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07077862 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073029711 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071951216 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077637495 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077927807 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076829948 seconds)
  done (took 10.908978442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168358766 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158497169 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072403878 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150425092 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077748072 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082434143 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153129932 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09661199 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071151613 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071398798 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069965416 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110758013 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106543084 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1174635 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083009521 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071646947 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094614216 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119034377 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161227529 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155081512 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095534686 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080697071 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075636213 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072338623 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071268031 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079063939 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086754435 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078440855 seconds)
  done (took 4.464008301 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081916663 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108815014 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07680171 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095692749 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091745938 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072329891 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072714897 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071546706 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086381649 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079021725 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069849503 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075617152 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075555715 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075752695 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073000819 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079115918 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079750632 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072020042 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076451413 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078067534 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081934595 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097347338 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076119964 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075101375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074365834 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071972482 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079797349 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081981213 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070493388 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106040833 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.0674341 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074588995 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084462125 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071038506 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069368551 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070317761 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070337419 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070949722 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073524971 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070964701 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071029593 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075903236 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06998492 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079495123 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084202363 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073472303 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073558084 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075164417 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075080552 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068790093 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073067683 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072522017 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072674831 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077532936 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074226336 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073232877 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070397645 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096429927 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075925926 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069870408 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068738618 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0686527 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072145317 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07954781 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085402385 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071945118 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068344899 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069719182 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082403547 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085704702 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071939251 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077318504 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069403812 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071972302 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072456013 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073026966 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073047139 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070350904 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069894684 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070163462 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071131634 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071151782 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075374121 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07546362 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070692776 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070944242 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072535304 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07402187 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079287843 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068853574 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073330781 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070658279 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06860485 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073386135 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075808649 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072606976 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08509539 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081453804 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070766943 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068256598 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08544601 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074336384 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071019178 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076177956 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075257005 seconds)
  done (took 9.575531534 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095823644 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071499927 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086778462 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093448388 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079333743 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075225885 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079577394 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069491359 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.0865341 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074154125 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077334064 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068278989 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080546088 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079856765 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070697712 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080078727 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073259609 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087376344 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08483246 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068241902 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078610643 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081792444 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082146455 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084662264 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083328641 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08487943 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082065014 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079642787 seconds)
  done (took 3.872354212 seconds)
done (took 38.829259616 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.674391985 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.83158355 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.650902034 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.857907448 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.703674091 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.835490929 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.735864027 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.644704894 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.876592292 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.693458433 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.968876115 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.099623873 seconds)
done (took 64.305658332 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.691785442 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.795844615 seconds)
    (2/2) benchmarking "String"...
    done (took 1.884072732 seconds)
  done (took 5.265655612 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.863308636 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.312892983 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.881401594 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.647357462 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.65162463 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.905998747 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.425800669 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.091014438 seconds)
  done (took 29.499328564 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.753794971 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.881712211 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.31045003 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.341081053 seconds)
  done (took 14.909263087 seconds)
done (took 60.904302731 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.699699922 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.709213437 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.676346578 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.646926088 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.739385127 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.656385008 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.944262387 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.6715135 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.647778293 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.655547411 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.649342517 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.072826666 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.662603254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.922652274 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.646219226 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.645183604 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.682342195 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.226824687 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.798045251 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.666865753 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.664357128 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.656801225 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.648315863 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.786051586 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.704272835 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.646769934 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.071900481 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.651869526 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.25435915 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.650041657 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.677407976 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.243320982 seconds)
  done (took 200.259542556 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.640971135 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.47860129 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.593193082 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.641873997 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.925887263 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.817072254 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.741773826 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.033607917 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.645024873 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.668969587 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.76130799 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.645607869 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.800008084 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.621515157 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.676636972 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.675159842 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.809004114 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.819070825 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.684109356 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.789257075 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.645783537 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.641807571 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.589372646 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.760047879 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.667181354 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.74271474 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.661908904 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.647958327 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.830025378 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.766318076 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.688130937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.661932195 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840732379 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.511606111 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.663771971 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.649325595 seconds)
  done (took 164.017513182 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.823760476 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.643476487 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.641620251 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.642724144 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.647028127 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.640615878 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761718568 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.766106564 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.300959796 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.059124691 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.693756561 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.637096233 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.413011548 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.641348269 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.703960853 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.651053908 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.638626439 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.651903186 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.66428222 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.637071429 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.638810404 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.758203996 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.654005991 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.636630686 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.646117157 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.638385212 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.641857853 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.020846106 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.637208722 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.835201308 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.641189366 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.641176885 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.876168859 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.637117762 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.637643175 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.472091121 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.550403469 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.715926321 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.638235799 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.640963009 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.635647636 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.853729824 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.635924398 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.63589406 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.63656023 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.634258096 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.752939451 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.637454528 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.755642315 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.637943952 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.113542892 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.63269226 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.63174081 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.634573132 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.051948337 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.222499278 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.634811152 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.631645296 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.627955109 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.629881912 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.634475803 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.973249975 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.867112912 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.629245634 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.626918151 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.640622816 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.627282938 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.871001953 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.626654688 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.846943755 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.642087651 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.747022953 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759501229 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.627419628 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.625569271 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.625843786 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.690408513 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.718594414 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.626150452 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.625882835 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.624446788 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.624999031 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.70494963 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.625379731 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.745157338 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.635046223 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.625595981 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.680230788 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.694658013 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.624521536 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.440805812 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.628102849 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.625714641 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.877224837 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.689278915 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.625008609 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.625178416 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.719953514 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.747898468 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.351563513 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.627288309 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.933759571 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.62726734 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.706103816 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.624158452 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.737414239 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.625090301 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.704385772 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.631497136 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.625684188 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.66088262 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.625396445 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.635379834 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.623153073 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.995306832 seconds)
  done (took 384.55047816 seconds)
done (took 752.29776391 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.244788055 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.209215716 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.30858066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.224726261 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.194212859 seconds)
  done (took 12.744848569 seconds)
done (took 14.309904369 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.704421939 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.705146233 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.641903951 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.703607105 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.638806154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.704003781 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.687682276 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.644716029 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.673741093 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.644221979 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.672067965 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.6444732 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.6310728 seconds)
  done (took 23.259812769 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.864865499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.866673995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.690480795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.855983823 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.666043746 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.852134064 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.780897362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.771966669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.764322518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.633320303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.631598391 seconds)
  done (took 20.942949933 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.854594172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.861443753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.697353413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.861588518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.670127116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.865210036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.786760104 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.770819905 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.768186104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.63546454 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.631854288 seconds)
  done (took 20.966769664 seconds)
done (took 66.734033742 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.627341259 seconds)
  done (took 3.190498508 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.645909179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.798252752 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.627463556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.627617729 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.627208671 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.628016667 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.626813093 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.628397508 seconds)
  done (took 14.774881682 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.625907748 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.62727431 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.626232819 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.625388195 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.625513549 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.627678472 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.62592603 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.625963246 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.627228074 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.627187008 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.62629033 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.627503516 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.625353415 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.626471884 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.626479236 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.626731466 seconds)
  done (took 27.589777913 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.627851003 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.627673596 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.628234182 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.626851274 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.625938692 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.625928248 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.629675731 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.627514728 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.626309564 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.626812511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.627577493 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.627963656 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.626475536 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.626747265 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.626226554 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.626696602 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.626694058 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.627334255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.63109705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.627858463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.627809722 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.626328822 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.626865338 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.627835652 seconds)
  done (took 40.622754798 seconds)
done (took 87.745243907 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.416107276 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.386191519 seconds)
  done (took 9.369450887 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.629155255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.626895627 seconds)
  done (took 4.825708877 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.626934718 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.627593025 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.626609639 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.62837902 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.626689828 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.626787748 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.627536203 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.627774261 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.627725821 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.626844001 seconds)
  done (took 17.837544544 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.626179119 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.626994471 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.627122658 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.626721286 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.627558378 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.627173509 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.62665077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.626891681 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.626683918 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.627097412 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.630265766 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.62662709 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.628769132 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.626584618 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.627964006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.627239764 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.62747684 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.626618933 seconds)
  done (took 30.855638164 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.627522234 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.626806528 seconds)
  done (took 4.819314836 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.627170687 seconds)
    (2/7) benchmarking "second"...
    done (took 1.628023331 seconds)
    (3/7) benchmarking "month"...
    done (took 1.627059144 seconds)
    (4/7) benchmarking "year"...
    done (took 1.627368135 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.627282547 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.627849435 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.626674636 seconds)
  done (took 12.956760499 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.628702157 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.775499154 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.840322691 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.214094605 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.62920523 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.631815152 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.549732212 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.632974466 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.633316216 seconds)
  done (took 18.10194577 seconds)
done (took 100.333317725 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.46419076 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.627181066 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.860577703 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.689480389 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.637239238 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.921156652 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.668050355 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.908108865 seconds)
done (took 41.344405286 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.657610914 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.375479305 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.421419742 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.695128303 seconds)
  done (took 15.057986644 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.626832382 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.930644644 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.651026124 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.443538074 seconds)
  done (took 21.222883265 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.989258738 seconds)
    (2/2) benchmarking "read"...
    done (took 1.978416098 seconds)
  done (took 5.537449313 seconds)
done (took 50.045705847 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.629087287 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.630653161 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.629928836 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.630551649 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.630487027 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.63053044 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.62872254 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.629153423 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.629273672 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.630733955 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.631470572 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.630150933 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.629314869 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.629936049 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.630196937 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.629567829 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.629750491 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.631213283 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.630614449 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.629568395 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.630803975 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.629840824 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.631443318 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.63120342 seconds)
  done (took 40.692248134 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.630586804 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.631037338 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.631097219 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.630535333 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.631025069 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.630639112 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.630786419 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.631378457 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.630842407 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.630816244 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.631545508 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.631135188 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.630548011 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.630523542 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.631137974 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.631285653 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.631718897 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.631587418 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.631016328 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.631624531 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.631214447 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.630953172 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.632056539 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.630387487 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.631075783 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.630099416 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.631592963 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.632265481 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.631820567 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.632316109 seconds)
  done (took 50.503227477 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.635031111 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.637787468 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.631980097 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.631657565 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.632580819 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.632333602 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.632135384 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.631803652 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.629740696 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.630854981 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.632313677 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.631802357 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.633041653 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.63238621 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.63180938 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.631067383 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.633297759 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.632018014 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.632629786 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.631669871 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.631493482 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.633154019 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.632703227 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.632136261 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.631920518 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.631875757 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.632895871 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.632846199 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.631339806 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.632437178 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.63213953 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.632566606 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.632102211 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.632484166 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.631840619 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.632847955 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.634613573 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.638318697 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.63272897 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.631862939 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.633498399 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.632667309 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.632713377 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.631547739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.631330722 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.632558453 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.633230901 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.632703478 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.634317346 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.632349447 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.631697324 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.633683923 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.631992156 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.634252111 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.633907572 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.633302289 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.633723888 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.631805947 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.633723898 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.635319682 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.632898632 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.633731882 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.633022123 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.633717659 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.633240578 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.63458054 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.634086369 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.634006336 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.632808392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.633718803 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.63326957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.634457587 seconds)
  done (took 119.13774407 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.6329018 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.633960458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.634489601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.633722849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.634811091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.634303303 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.63413777 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.633345309 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.634837043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.633064342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.63460679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.634903843 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.633959076 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.63517305 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.635526767 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.634338151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.636077319 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.63463121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.635685608 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.635034391 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.633622804 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.634221099 seconds)
  done (took 37.528835586 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.634869789 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.635290682 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.635702515 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.634607509 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.635678629 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.635969258 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.635402007 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.634598325 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.634421849 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.63660722 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.635565724 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.6367867 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.635397813 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.635435459 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.634522238 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.63643907 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.636247627 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.635380952 seconds)
  done (took 31.011883375 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.634634789 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.635311197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.635769331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.636099065 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.635916624 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.637295675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.635650967 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.635450191 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.634690645 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.635907262 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.635398232 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.635755358 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.635854131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.635270552 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.637245146 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.636457167 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.635550562 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.635832384 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.636282178 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.636614803 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.63651028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.63749765 seconds)
  done (took 37.56539145 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.637171435 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.636916161 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.636814152 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.636282033 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.637207087 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.638029369 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.638336385 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.639754556 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.63764023 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.638738719 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.637008543 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.638225179 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.637334722 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.636872465 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.637869114 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.63779423 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.638754298 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.637153918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.637156288 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.63886796 seconds)
  done (took 34.32906457 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.639258571 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.638398927 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.638680612 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.638344783 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.640498715 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.63876704 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.638457018 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.639733731 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.639061938 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.639377287 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.639581267 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.638728595 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.639515743 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.640390225 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.638808935 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.639033758 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.641120644 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.640113952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.638646698 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.639522424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.640178259 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.64045673 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.640814183 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.639906584 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.640036682 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.639923858 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.639447315 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.640284666 seconds)
  done (took 47.483746727 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.638102948 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.638441091 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.638790597 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.640031524 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.638406111 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.641349222 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.639651272 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.640059876 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.639693002 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.640657868 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.639101116 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.642834568 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.639430832 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.640196399 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.640496642 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.638815365 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.639256418 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.641056234 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.642482424 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.640013131 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.641024385 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.639394582 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.641484943 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.639939174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.642539678 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.641167299 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.640827357 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.640544545 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.640921165 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.640627465 seconds)
  done (took 50.78713903 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.660076659 seconds)
    (2/2) benchmarking "in"...
    done (took 1.661842354 seconds)
  done (took 4.901068271 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.641101527 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.641442858 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.641005086 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.641042798 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.641470986 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.640685557 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.641477073 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.640395096 seconds)
  done (took 14.707014404 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.642604848 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.64172641 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.640523658 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.641602276 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.641744282 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.64415377 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.65133222 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.642394864 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.644754374 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.643674816 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.646979183 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.649400679 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.645873817 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.644342171 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.642576535 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.645759321 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.642543477 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.643332171 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.643211005 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.643461471 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.643255524 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.645898955 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.646280119 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.645082136 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.647593236 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.654323599 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.650445282 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.642774837 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.645291956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.649129365 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.64559531 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.643513272 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.644215007 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.643143295 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.643868346 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.644106716 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.654559591 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.646405502 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.65087134 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.644357209 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.64335149 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.643048549 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.646035899 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.646775363 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.647093231 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.642667928 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.642362278 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.64212621 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.643916454 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.646003886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.648732721 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.644732477 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.643962259 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.648939184 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.645831654 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.650905861 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.644590575 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.647514611 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.65177208 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.655619987 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.657891422 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.651283125 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.647370846 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.644596013 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.652565888 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.666104191 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.654877544 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.643787531 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.643423101 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.643944542 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.653455898 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.658065898 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.654536405 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.644938964 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.644312926 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.644665868 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.646274568 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.643690595 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.65417652 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.650931642 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.645044408 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.644810854 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.653156058 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.663870496 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.646935964 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.644553834 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.645343599 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.645109861 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.646927361 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.656416863 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.647738571 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.644535582 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.645354583 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.647214517 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.648054434 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.644709745 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.646265163 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.649266461 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.645959314 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.645498639 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.646203925 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.649351797 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.658417215 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.645434341 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.646601797 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.653049119 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.645728859 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.647951342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.655706834 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.644461897 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.646127513 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.646424924 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.654447863 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.64477098 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.650278574 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.654309798 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.646890034 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.648788539 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.64575695 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.646180846 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.656034765 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.669248214 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.647134422 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.64654736 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.651326045 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.654784678 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.646618964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.651639409 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.646172577 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.646807278 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.645009653 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.650600563 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.648088612 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.652718335 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.647655321 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.650544285 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.649999333 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.646875704 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.645876995 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.650418334 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.64992002 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.649578964 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.65021478 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.651836867 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.647672094 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.651652888 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.655902939 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.64874208 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.650255825 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.651094617 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.648152731 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.650131462 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.650224282 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.64727287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.649427365 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.649319142 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.650343763 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.648529454 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.648183044 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.647555001 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.649211786 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.649307638 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.653649736 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.648840579 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.654879428 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.650390668 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.649405569 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.647798053 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.648166961 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.649483089 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.648640368 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.649344625 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.652457413 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.655019418 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.648906467 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.649759409 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.653856025 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.650239799 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.648744359 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.64965436 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.65291171 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.659334921 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.649020491 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.657260868 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.649607834 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.648537168 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.648975472 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.651656669 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.652044277 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.65037394 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.654144925 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.656069615 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.663153744 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.660298218 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.650959423 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.652356014 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.651736319 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.653802246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.657424089 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.650579545 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.650635597 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.650622819 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.651453337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.650539444 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.654170032 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.652112668 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.650895869 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.649687556 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.649705708 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.650642573 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.652501569 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.653623701 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.654940108 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.650595112 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.653130797 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.65270773 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.652450184 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.653178916 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.652235699 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.65240267 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.649816803 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.651707988 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.660006979 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.651130379 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.654511767 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.653468903 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.653403428 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.651479106 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.651990075 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.657289275 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.6562135 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.663398584 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.653963622 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.653918676 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.659891603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.655614077 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.652028893 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.655065341 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.651045051 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.65082388 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.654809843 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.659390438 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.653660019 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.653182103 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.653118268 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.653890961 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.653240382 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.661937827 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.653840383 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.653523774 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.652951215 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.655001452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.653585901 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.65506604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.655148954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.654329879 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.657190286 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.653919023 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.65314426 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.655134358 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.653679674 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.654343778 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.653150525 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.656057604 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.659167139 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.660772519 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.655415307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.656943879 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.653847135 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.65537014 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.656009687 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.655352493 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.655505539 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.666287302 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.660017693 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.662341 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.656335098 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.655228607 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.662538566 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.656094236 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.658366104 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.655932008 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.656417127 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.655936561 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.656900507 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.654101536 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.656311354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.65372843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.658670972 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.655979793 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.656917889 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.654530682 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.65577705 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.653553478 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.654256639 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.652874297 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.655106977 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.654895069 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.658906815 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.658401266 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.655059458 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.65676667 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.666384399 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.656335949 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.656777601 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.657271894 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.65601868 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.655453023 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.658548977 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.655149572 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.658567555 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.661093487 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.659132665 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.664093932 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.6563811 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.665639137 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.65559739 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.658792466 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.661666012 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.655492682 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.656209316 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.65673652 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.655644612 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.664657126 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.656100174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.656588916 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.660268652 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.656335637 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.656626794 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.65666877 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.65644535 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.654744238 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.656801378 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.66580043 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.658884357 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.661265986 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.660620002 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.65740261 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.657040428 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.655799662 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.657145026 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.661450074 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.656687343 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.659443396 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.660358086 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.658821293 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.656720062 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.657246632 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.658794248 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.654975829 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.656793443 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.665740137 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.65747615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.661709255 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.657362381 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.666100343 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.658244884 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.666736694 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.658554341 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.658689399 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.657320636 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.657298385 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.662100866 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.65877236 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.659608752 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.656674293 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.65935213 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.660537341 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.658882194 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.661776419 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.660358975 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.658575336 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.66000271 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.667751423 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.677316835 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.660918129 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.661019651 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.658134965 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.66138231 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.662567268 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.661550559 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.659482427 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.662465812 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.669088921 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.664959346 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.66073468 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.660058459 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.660496817 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.657885829 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.658303927 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.658111339 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.65856227 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.65924216 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.662952171 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.659163182 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.665078473 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.660104891 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.660721221 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.664047509 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.660331726 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.670635728 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.660203237 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.661866337 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.659304851 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.660085606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.660733555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.661347032 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.658746194 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.661536932 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.660030399 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.661486816 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.665855803 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.665627859 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.664620515 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.660729063 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.660240355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.662264186 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.662730277 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.661581375 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.65949792 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.660756852 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.663483293 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.661887261 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.662753328 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.660758636 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.659013632 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.661055339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.660489895 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.665172148 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.667719022 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.662561735 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.659962782 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.659553078 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.660973602 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.661881653 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.663043024 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.6713104 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.666369243 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.671359152 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.66839338 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.66525594 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.663769948 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.664297468 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.66878468 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.661319051 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.664531695 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.662380409 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.666629908 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.66226886 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.665140227 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.661545706 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.670839781 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.664162181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.662090956 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.672143732 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.665820731 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.662819853 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.665588231 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.667152562 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.662371156 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.661229261 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.662834793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.665110857 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.671296137 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.670059499 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.662617473 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.665679563 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.662788439 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.664714095 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.666407169 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.662928101 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.666504156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.662277448 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.665813583 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.662315766 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.662874763 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.663875087 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.663220058 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.663467755 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.665579539 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.66884733 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.661949597 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.666156476 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.665388059 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.663415243 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.663449167 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.662655744 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.664285153 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.661911105 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.665433834 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.663867709 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.665358791 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.667280505 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.663754993 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.664961458 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.665743314 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.663975184 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.667365899 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.673127547 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.669776985 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.664167352 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.664267151 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.665054219 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.668863398 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.663202386 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.664050655 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.665409919 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.667175565 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.663346248 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.664051112 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.664602694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.667116372 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.681193457 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.666713058 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.668358806 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.666866719 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.669724069 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.66529291 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.665084016 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.665787615 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.669210126 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.667572748 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.671027529 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.667321389 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.675354333 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.666508384 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.666852954 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.66756099 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.667597764 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.673556111 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.669753876 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.665798797 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.665638076 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.671236056 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.680960698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.665447488 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.674460612 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.693348057 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.66781562 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.666289317 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.665703479 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.666265658 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.666364028 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.668931653 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.665488549 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.665735385 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.665074823 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.665775671 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.667895164 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.673383868 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.668677823 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.665033355 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.666472422 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.668233651 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.66979495 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.665221333 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.666853841 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.665862212 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.668054779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.666173869 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.666313786 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.668802269 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.679467025 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.67711989 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.666556549 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.666373552 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.666950252 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.673040221 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.670788179 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.674502256 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.673039553 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.667062087 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.668646733 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.670649308 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.666639555 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.66754319 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.667763169 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.668900334 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.668539778 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.665963185 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.681015746 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.673827178 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.674304556 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.669241092 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.668615738 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.666817877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.670786715 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.668708434 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.668868333 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.673456078 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.670327688 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.672083206 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.669037549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.666844806 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.672008363 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.674197885 seconds)
  done (took 989.424519417 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.668492124 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.667512531 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.668170198 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.668360998 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.668341399 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.667836169 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.669257772 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.668624045 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.669319197 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.669958979 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.668763115 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.669091123 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.669830099 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.66876911 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.668469007 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.669526129 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.66968688 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.668527541 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.668281408 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.669239828 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.668810617 seconds)
  done (took 36.651188641 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.669586571 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.66914784 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.668924913 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.669897253 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.669716313 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.670365238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.669945154 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.669636702 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.669616855 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.668773072 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.671042425 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.670524296 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.669182711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.669867417 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67029776 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.66925442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.669199212 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.669455077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.670464477 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.671736794 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.669556286 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.672375961 seconds)
  done (took 38.344537666 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.670644594 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.671192251 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.671561442 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.669411948 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.671037526 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.670710083 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.671412827 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.670650587 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.673034801 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.673492805 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.670946673 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.67216881 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.676109599 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.675853469 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.67426678 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.670047893 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.816354832 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.671591139 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.670717134 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.671883671 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.670500967 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.679322302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.671419794 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.670717413 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.672167056 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.672574085 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.674302766 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.670513112 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.671685993 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.673326002 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.674109314 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.671250319 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.673948611 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.676282189 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.671464437 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.673337985 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.675142539 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.672239729 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.672185173 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.671399778 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.680805642 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.690162428 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.672294899 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.680687312 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.672511708 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.671095422 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.675522628 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.679205662 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.674034027 seconds)
  done (took 83.746096372 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.672612207 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.672932262 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.671843378 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.671120769 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.673903904 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.672584348 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.672024265 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.673110754 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.672652881 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.672929874 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.670702464 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.672542114 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.671429189 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.671498738 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.671414349 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.670446138 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.67323281 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.670999269 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.672809674 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.671550374 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.672390472 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.672266468 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.671793556 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.671460562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.671289039 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.672413732 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.671730326 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.670543546 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.671093272 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.671603328 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.672169612 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.670673317 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.672059779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.672738555 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.672505612 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.670825044 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.672338493 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.671714422 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.672700671 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.673408938 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.671721267 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.673134057 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.671855491 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.672956719 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.673595821 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.673938442 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.673673576 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.673045029 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.674813637 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.672137673 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.671852616 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.673851196 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.674403519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.674094067 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.673233898 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.673869709 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.673001424 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.673390828 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.673496564 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.673911556 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.674054618 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.67392295 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.674085222 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.673419832 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.673242497 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.674137934 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.674268415 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.672743689 seconds)
  done (took 115.347276462 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.675869443 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.674801115 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.676883497 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.674939151 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.673381098 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.675934538 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.675486112 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.674406372 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.673950901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.674236267 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.67564171 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.67496583 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.67447286 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.674722337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.674737225 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.674946868 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.674491478 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.674634219 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.675160229 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.675373848 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.675694517 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.674771725 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.675198285 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.676336123 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.675119289 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.674379273 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.675948131 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.675705909 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.674844516 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.675467152 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.676318577 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.675567579 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.675207582 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.675666394 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.676005772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.676147919 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.674667436 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.675423406 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.675329336 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.675822299 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.674556151 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.676777347 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.677599033 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.676492394 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.67559922 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.676670074 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.67767228 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.677042677 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.676396287 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.676861257 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.675717871 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.676045318 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.677589223 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.676289003 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.675411774 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.676140186 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.677092502 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.677093211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.677590634 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.677815405 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.676171649 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.677838618 seconds)
  done (took 105.507997632 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.675687401 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.676889832 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.676874228 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.676272519 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.676901975 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.676663688 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.677001369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.677104341 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.676515288 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.676766992 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676256706 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.676530001 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678083963 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676660839 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.67726642 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677837278 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.676507995 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.676310837 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.677898338 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.676929448 seconds)
  done (took 35.150065963 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.679333283 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.67645901 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.678572518 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.677995145 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.67750162 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.67892722 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.680300315 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678514341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678549731 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.679144055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.677640592 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.677276787 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67834232 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.677580339 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.677820237 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.678323748 seconds)
  done (took 28.465940023 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.679107108 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.678486075 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.678770855 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.677972337 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.677597334 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.677112334 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.679035614 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.678646389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.678298328 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.67978784 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.678733177 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.679583602 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.680091679 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.679162847 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.680086072 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.679075128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.679617743 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.679170858 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.680151352 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.67972779 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.680132307 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.680359723 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.679034925 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.679963723 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.680321006 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.681611162 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.679920991 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.679767509 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.68074076 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.679638123 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.680520845 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.680671132 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.680550316 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.679618601 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.680948921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.68016453 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.679609482 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.680323423 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.679524258 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.679078305 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.678940672 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.680592702 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.680450509 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.679774052 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.680418807 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.681191419 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.680414343 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.680524284 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.679685217 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.681930474 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.680875956 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.681419176 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.679933829 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.680969254 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.681223697 seconds)
  done (took 94.007300255 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.681539088 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.680909771 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.680468073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.681592596 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.680029481 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.680719667 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.679771487 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.681706699 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.680829518 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.682078485 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.683567257 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.681808727 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.681078933 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.681968635 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.680938029 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682207656 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.682933596 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.681344074 seconds)
  done (took 31.882093962 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.682928613 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.681090496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.682321357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.681588378 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.682605267 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.682755203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.682751939 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.681856923 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681272509 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.682838579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683789988 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.682300511 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68290646 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.68241405 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.6851083 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684102571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.682227287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.682936583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.682673274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.683382413 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.682411351 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.683056478 seconds)
  done (took 38.637736109 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.683182172 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.682829166 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.695937894 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.699780841 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.702865545 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.709649714 seconds)
  done (took 11.793353465 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68265783 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683007573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.681864098 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.682983215 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683524871 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68217332 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68295081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682656189 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68282248 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682876969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682786934 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.682650539 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683567448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.683196739 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682857552 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.682063653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68367334 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.682633446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68438746 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682739961 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.683981158 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683186247 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.684824932 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68426856 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685309455 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683251797 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683444907 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684873448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684911767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685323949 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683740502 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685000587 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684434877 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685268432 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.685191933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683971947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.684331975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68509127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685837611 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.687095029 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.685501535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686605051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686255936 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686906704 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686722182 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686179828 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68575675 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686204886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685970959 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685309117 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685245528 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685769498 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.683822482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684605859 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.685917473 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.685983555 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685930987 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685504491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.685918382 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685441262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686034921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.685206438 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686053244 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684842691 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.684808664 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685964635 seconds)
  done (took 112.800358719 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.685770802 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.68631693 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686731548 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686407426 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.687183003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686231994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686527106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.686357795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.687123274 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686961943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686604746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686667866 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.687231878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.685088397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686806836 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686521687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.687651385 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.686787493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686264464 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.687180315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.68621609 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686350814 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.687921972 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.687725201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.68736856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.687844711 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689113367 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.687851114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.686634038 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.688056984 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68634299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.687649947 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687700328 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.688417875 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689045258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689988297 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690231697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.688899544 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689473088 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.688909404 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.68740864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.688718122 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687705949 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.686610982 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68737181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.687848557 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.687830723 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.687631472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.689405816 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.688029596 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.68863466 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.689057666 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689835826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.688677993 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689132808 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.689022575 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689807624 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.690617093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69016718 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.689550867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689163147 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690072947 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.691422901 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.690314843 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689934359 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.689247189 seconds)
  done (took 113.031024196 seconds)
done (took 2305.011093404 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.701624183 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.742739616 seconds)
  done (took 15.067673422 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.855690929 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.808305938 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.693188872 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.702007322 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.695968192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.723280338 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.718251022 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.694512713 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.694594932 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.694362086 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.694036792 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.878316419 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.692990235 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.695377979 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.694185148 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.785880941 seconds)
  done (took 49.351710058 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.695573616 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.698217355 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.705664422 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.69927139 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.699677435 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.710604165 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.727917797 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.702018782 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.73121644 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.708170605 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.76526395 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.709229295 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.699057178 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.747290391 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.707808392 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.710608409 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.787527882 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.769120091 seconds)
  done (took 32.6037195 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.772732044 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.701453911 seconds)
  done (took 10.108314289 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.693386434 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.697368745 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.708390401 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.709799442 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.727035743 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.713017278 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.694337343 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.734664576 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.723254022 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.700131176 seconds)
  done (took 68.733781762 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.701582297 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.699936945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.697823113 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.693976257 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.694137668 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.699995985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.696828231 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.697145437 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.352637694 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.732670236 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.703543964 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.70365008 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.697281604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.69892953 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.696327962 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.7185751 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.827270295 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.69436768 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.694715833 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.703606178 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.699366842 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.758886267 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.709130845 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.698314918 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.727448344 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.35585955 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.707218747 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.703648392 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.830857757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.695932624 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.697781911 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.88326717 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.702426191 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.165636395 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.957089938 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.701130278 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.705725317 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.705833207 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.696690903 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.820959016 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.698640013 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.705010724 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.666280714 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.929659664 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.788742714 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.740502297 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.035611075 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.701089828 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.698641753 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.727582243 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.701782534 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.699774498 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.711362443 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.214463344 seconds)
  done (took 123.378867528 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.697957261 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.041470744 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862597821 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.698267214 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977813549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.899693718 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.699448048 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.742592087 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.698086496 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.923573849 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.950617724 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798261354 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.69809516 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.69618094 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.697118026 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.696038429 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.850042836 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.765012102 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.699442877 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.696705555 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724267432 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934641886 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.816935293 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.701517403 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.722852198 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.904399643 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.818347095 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.797520168 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.490194851 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.696358446 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.75682959 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.6988061 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.696219751 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.698598825 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.849668973 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.789699539 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780863337 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.700545989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.700670015 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.699310619 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.356535914 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.894791916 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.790258693 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.82610449 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.94719339 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.897927205 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.477406908 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.697167761 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.434324907 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.85891799 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.922860969 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.925390723 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.817324304 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.699748757 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.032654995 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.697753866 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.69910289 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.944996161 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917378524 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.792532425 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.700138068 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.699057529 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.698560666 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.933913129 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.700610848 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.79239653 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701544002 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.699469728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.792726744 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794796295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.929811022 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908499309 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.728556534 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.036072831 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.196341645 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942751441 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.761882863 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946601372 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.701916272 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.699469494 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.775069957 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.540816778 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.95171178 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.939656856 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.940732015 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732720773 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.419248918 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.700690509 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.924410831 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918472674 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.957819033 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.946761822 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.93461394 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.002170448 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.700129001 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.700272634 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.931939666 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.702763703 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.047204122 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.928635476 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.221232766 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.723750757 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.00020855 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.829448276 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.702700687 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.326708895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.700739068 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.927299957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.739179174 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.70105654 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.700279866 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.91766706 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.690484566 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.700671664 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.346629117 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.759170937 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.702723573 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93114723 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.701972955 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970050403 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.702269642 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930684257 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.196134776 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.729758065 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.873521278 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.949545387 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.70561119 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.938980934 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94317078 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.813513533 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.918844346 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.410183081 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.702692137 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985682777 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703980991 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.701420014 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.86988528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.703957756 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.842266968 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.704470318 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991868244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722869774 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933514833 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.705419711 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952396224 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.7330007 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.751141323 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.706039112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.820695581 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.704001873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.62406627 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.858105755 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.705378715 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.703796945 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.251485417 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.703413543 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.84935923 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.926010463 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7230935 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772765061 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.364690179 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703058533 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.782834438 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.724483244 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.082600477 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.703541771 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.952468342 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.706307562 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.703696277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.703578447 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.936752671 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.886156436 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.704527128 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.703021564 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.609115966 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.703834611 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703046078 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.883163668 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.198110655 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.704173758 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902923713 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707093638 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.829712628 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.708250332 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.777274791 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.034448215 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703236873 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.706424557 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.703656781 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.705906982 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.704255862 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910791899 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.727821528 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.20376205 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.840396105 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97463465 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.011752801 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.943707694 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.746739099 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.706827557 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958084029 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.706796344 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.766748073 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.707523589 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.724173252 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929771241 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707370405 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910738182 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970808747 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.547385749 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.75100307 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.70863655 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.706710768 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.706416373 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.849214501 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78780506 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.708404756 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.705692312 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.818406759 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.8254109 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.912868077 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.706903836 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.837378334 seconds)
  done (took 865.059193471 seconds)
done (took 1165.931691488 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.705131839 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.709373621 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.708569022 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.706891889 seconds)
  done (took 28.471271526 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.710190507 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.707671822 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.708237212 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.707776888 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.707783635 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.707804732 seconds)
  done (took 11.890201941 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.709134671 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.707894507 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.707380486 seconds)
  done (took 20.766822181 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.776894349 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.103155393 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.845006812 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.129484405 seconds)
  done (took 9.496450721 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.709133423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.708878698 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.709246369 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.707634806 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.711306573 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.712028494 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.709674384 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.709279584 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.712864701 seconds)
  done (took 17.031591442 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.809203104 seconds)
done (took 93.109088912 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.910280656 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.015755069 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.774328759 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.316240437 seconds)
    (5/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.951646678 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.810380097 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.728474466 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.707352329 seconds)
    (9/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.283454397 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.184758825 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.842816756 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.70694169 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.378827184 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.835967277 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.835863007 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.380635235 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.947666642 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.994479016 seconds)
    (19/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.710775707 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.728049394 seconds)
    (21/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.798903574 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.01948713 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.501508759 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.693966795 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.641817967 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.785686121 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.863633736 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.796382695 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.795200259 seconds)
    (30/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.711697311 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.014903584 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.923972191 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.797437904 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.708094379 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.866826488 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.769265806 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.875513055 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.809585763 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.092936083 seconds)
    (40/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.093486955 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.056984446 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.795583009 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.330999248 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.665348308 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.238019707 seconds)
    (46/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.722993241 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 1.945830737 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.774649606 seconds)
    (49/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.041523952 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.415020656 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.719667232 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.362874293 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.878776938 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.295640644 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.081623405 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.527495632 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.124959072 seconds)
    (58/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.723367823 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.870521965 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.737599576 seconds)
    (61/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.73074048 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.814177611 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.805379702 seconds)
    (64/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.822272253 seconds)
    (65/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.268185447 seconds)
    (66/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.568239087 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.990512833 seconds)
    (68/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.736887544 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.866978869 seconds)
    (70/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.81015876 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.719286708 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.964215653 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.768809709 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.117390419 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.904491288 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.72332991 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.195466166 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.732454271 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.897724618 seconds)
    (80/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.991864272 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.936384791 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.992788674 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.726195538 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.763348383 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.744425429 seconds)
    (86/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.862296533 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.071486746 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.894745745 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.959248047 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.737421642 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.490501839 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.750064451 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.728585748 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.548763585 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.096117105 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.037521235 seconds)
    (97/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.057240812 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.726948453 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.803694279 seconds)
    (100/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.836469848 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.828742426 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.723856545 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.867566361 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.885691687 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.807819575 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.535869073 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.067960718 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.357633181 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.393814817 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.014694821 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.936334291 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.747067202 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.950345241 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.805525917 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.609664376 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.501356482 seconds)
    (117/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.619020187 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.859662328 seconds)
    (119/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.646282986 seconds)
    (120/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.625758424 seconds)
    (121/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.145304592 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.11828708 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.724993383 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.756849294 seconds)
    (125/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.139709502 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.726581023 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.544093959 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.725107319 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.988394282 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.974022854 seconds)
    (131/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.882276931 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.756327752 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.038275802 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.751635445 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.119396019 seconds)
    (136/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.891053617 seconds)
    (137/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.125953313 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.864297197 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.915629062 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.808758991 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.872646473 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.519899538 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.837721639 seconds)
    (144/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.745981318 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.84999578 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.412655011 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.119608449 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.860595983 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.119746959 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.9118306 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.724547895 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.431849544 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.901899568 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.934049013 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.721248488 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.049466614 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.441288446 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.110085042 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.387458239 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.832963207 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.393032267 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.732172041 seconds)
    (163/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.435639887 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.926464308 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.127706156 seconds)
    (166/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.844958729 seconds)
    (167/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.854287509 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.085063903 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.865101654 seconds)
    (170/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.837474185 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.129496919 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.731125817 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.938014348 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.813383445 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.974481799 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.722745475 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.728315085 seconds)
    (178/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.749080606 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.044874311 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.946293833 seconds)
    (181/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.959959557 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.808179556 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.594487614 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.126274201 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.053332624 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.539338743 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.856884971 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.72640912 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.102408836 seconds)
    (190/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.938033355 seconds)
    (191/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.78825724 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.070248823 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.530538862 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.840544162 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.723706719 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.90157459 seconds)
    (197/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.008782445 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.749322161 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.745478412 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.724588568 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.591679114 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.633647558 seconds)
    (203/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.761709966 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.847153439 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.635442821 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.907471716 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.969303946 seconds)
    (208/309) benchmarking ("sort", BigInt, false)...
    done (took 6.727869235 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.727868951 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.876634322 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.755134018 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.925220805 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.433744445 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.723440091 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.756088814 seconds)
    (216/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.011438247 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.038175292 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.735784969 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.012653641 seconds)
    (220/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.131077333 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.728196353 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.824931404 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.748283208 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.050774378 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.832585765 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.808482817 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.413158181 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.64884555 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.061245179 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.75645173 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.032035416 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.144234098 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.042516677 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.795062021 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 4.619100356 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.740499089 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.727985087 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.010502903 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.726191423 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.739752145 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.07323158 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.766250235 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.726063426 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.901764916 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.726845801 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.020426352 seconds)
    (247/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.215273321 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.815591425 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.744342188 seconds)
    (250/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.203412013 seconds)
    (251/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.857322129 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.80268119 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.74702596 seconds)
    (254/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.87128339 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.731753755 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.033103568 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.765116084 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.018045309 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.545012273 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.645411207 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.608988059 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.85860124 seconds)
    (263/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.814688423 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.845286794 seconds)
    (265/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.790066164 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.053538672 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.827193231 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.078913399 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.72981855 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.893785373 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.733250037 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.745091048 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.904916651 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.839379602 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.608836158 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 5.573960994 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.300682065 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.060811914 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.743990427 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.229124967 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.727633938 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.053545157 seconds)
    (283/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.772245471 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.787725804 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.916007062 seconds)
    (286/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.020550631 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.72905514 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.733126034 seconds)
    (289/309) benchmarking ("sort", Float64, false)...
    done (took 7.217938578 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.377396798 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.863826267 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.505074384 seconds)
    (293/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.857855956 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.727074734 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.428005142 seconds)
    (296/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.730401167 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.966258775 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.810692913 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.75782515 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.960035579 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.91847894 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.956442794 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.731735802 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.961845543 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.824843082 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.861087872 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.94669701 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.792863352 seconds)
    (309/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.806206582 seconds)
  done (took 967.858121024 seconds)
done (took 969.582341755 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.757794733 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.748739119 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.731225523 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.753479852 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.845405136 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.778762843 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.743900471 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.734428732 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.781601612 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.780601814 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.729714068 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.777013494 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.732361085 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.732530869 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.731604746 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.748224601 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.047774044 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.769437436 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.750613893 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.743903518 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.750880084 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.730745919 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.780785191 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.776337335 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.735878302 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.736536669 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.736685622 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.751318828 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.844669095 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.736303937 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.735850181 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.745321502 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.045304952 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.766293047 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.730121276 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.751697929 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.746187952 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.744539542 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.737727578 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.766273513 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.195705821 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.739689236 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.733655763 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.733739714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.73290362 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.739728048 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.732849976 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.741128895 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.748293709 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.748300456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.185358469 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.758009737 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.737809199 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.734370264 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.746935335 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.73345382 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.738641176 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750192196 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.753165902 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.750603092 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.029965327 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.775835243 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.737819964 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.752761601 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.743202378 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.220868766 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.739869007 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.739281714 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.195112202 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.748910714 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.221763431 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.751424653 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.736212327 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.749892291 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.769235183 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.04797466 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.769583281 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.73680353 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.743402855 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.733835452 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.748092446 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750750814 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.738427696 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.733589131 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.748940417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.77967725 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.746699385 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.734814711 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.745362025 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.755800607 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.744410338 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.745997583 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.737312204 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.732916985 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.745972223 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.73826467 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.738587169 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.737964148 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.739457921 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.748031723 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.193052375 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.759015405 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.733701996 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.732594519 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.736281502 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.750028981 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.197812986 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.747643048 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.757401002 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.785685742 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.738390714 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.034401544 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.776310167 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.753505402 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.747880541 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.739235725 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.734840249 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.034383161 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.225078183 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.759440755 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.737132615 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.73571472 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.754584044 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.738745687 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.73454649 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.051705676 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.77549892 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75261845 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.861374511 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.750578284 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.769856505 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.735652436 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.740900142 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.786572136 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.755443111 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.770524575 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.742582925 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.75390914 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.755027371 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.735757025 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.750935567 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.750186853 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.740614815 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.746106753 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.736514518 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.787014338 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.753949395 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.75378216 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.757387841 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.86182912 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.735981787 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.034927625 seconds)
done (took 273.7951306 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.819991279 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.734801222 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.829328279 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.735361762 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.825491901 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.811370647 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.736457595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.736920203 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.735477499 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.229965686 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.736157883 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.748294747 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.742590229 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.741252248 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.813328031 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.743399181 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.742144998 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.181199747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.742853155 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.825075424 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.740772477 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.743406015 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.743054632 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.232242114 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.743023983 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.743442218 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.823273675 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.742310583 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.178042819 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.741956289 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.743783306 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.178827364 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.823817619 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.770198803 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.750116372 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.749435809 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.832103618 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.7517892 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.813048359 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.811909157 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.835663785 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.777115515 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.743720342 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.741500679 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.747297943 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.744682561 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.743366511 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.775384842 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.743292895 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.748011408 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.183990689 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.75085679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.748960403 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.744943885 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.744641941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.77056076 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.74606614 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.745395826 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.826968826 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.745920071 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.812932505 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.232478183 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.236803945 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.74619703 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.743392601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.744875215 seconds)
  done (took 176.66532823 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.810449937 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.820624164 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.810005974 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.749578079 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.794680825 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.813255022 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.750449157 seconds)
  done (took 14.225660185 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.75145079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.745089204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.793836352 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.792863721 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.744413812 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.901517508 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.74453794 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.757025912 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.750348237 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.772569388 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.745565782 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.745301163 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.752154376 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.745569348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.795126777 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.757149859 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.860439555 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.748481142 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.746038515 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894130838 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.751433873 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.753271223 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.771821847 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.75878751 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.746928905 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.752937428 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.322390286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.746711479 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745500072 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.746288111 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746521593 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.788991319 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.746052121 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.745792701 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.746301443 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860348655 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.746212229 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745157297 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.747303651 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.746040647 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.746787893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.746274711 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.745058086 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.745275719 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.746358193 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.768923957 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.748719515 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.746674618 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.744912851 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.745396697 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.771584454 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.745580714 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.745585749 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.7506665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.788967732 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.752153031 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.744846222 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.745164265 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.745626013 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.745558858 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893861651 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.794688916 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.7448368 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.794433826 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745162816 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.745580311 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.744017553 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.744510557 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.832412065 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.743635099 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.793298944 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.742527827 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.904484618 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.767831452 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.7462596 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.748079867 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.749225267 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.744543702 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.743089901 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.750990069 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.742091551 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.74606189 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.749466533 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.747825414 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74606804 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855642872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885150394 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.742881161 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.745848544 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.753909799 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.741316696 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.786589542 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.742465834 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.741984812 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.798974783 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.858876206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.768678201 seconds)
  done (took 193.586437301 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.747660968 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.748539289 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.743160366 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.758516099 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.741971482 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.741522542 seconds)
  done (took 12.155408943 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.743225684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.743961138 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.738711964 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.738518607 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.737270902 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.739028287 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.73930117 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.743502934 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.740407616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.737462115 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.7392022 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.73687547 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.738493828 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.737772441 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.734824625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.735526637 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.736462503 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.735851974 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.736306923 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.736604032 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.984195445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.734524721 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.735030641 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.739293627 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.738034826 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.732827097 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.747400705 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.73279234 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.733855941 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.741904927 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.735761261 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.730627405 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.734460248 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.738514168 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.735268798 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.735065108 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.732457036 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.729736568 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.728798841 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.731163173 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.729465503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.728920544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.727445518 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.728056582 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.730242955 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.735908088 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.733316874 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.741413417 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.728766909 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.728358471 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.728318608 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.727226586 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.727895095 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.729471489 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.731484172 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.733711039 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.731797942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.728752634 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.729223732 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.729241221 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.728488826 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.726089055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.727245352 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.729452188 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.733506435 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.722882851 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.725860902 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.728810658 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.724111748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.721291562 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.724475706 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.72131483 seconds)
  done (took 127.719464686 seconds)
done (took 526.044215332 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.141874108 seconds)
  done (took 8.795527067 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.918944762 seconds)
  done (took 8.609483569 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.572623747 seconds)
  done (took 10.259691931 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.773011791 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.779372251 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.768803314 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.760992972 seconds)
  done (took 28.785408886 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.954765261 seconds)
  done (took 8.639555142 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.768598972 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.755736052 seconds)
  done (took 15.27902108 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.832240413 seconds)
  done (took 8.517832957 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.819835244 seconds)
  done (took 8.521466642 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.759048233 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.767018304 seconds)
  done (took 15.236138552 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.756931872 seconds)
  done (took 8.441554693 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.972579835 seconds)
  done (took 9.662088453 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.771522835 seconds)
  done (took 8.495991971 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.773738875 seconds)
  done (took 8.457731872 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.877601892 seconds)
  done (took 8.561817886 seconds)
done (took 157.919571952 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.759713475 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.750391568 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.754694296 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.750663219 seconds)
  done (took 28.699000869 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.781837336 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.781111139 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.781596042 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.79196921 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.784393928 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.779396411 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.771261361 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.772462143 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.791232957 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.783850511 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.780167079 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.779907662 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.778741776 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.772568477 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.781213777 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.782543612 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.788469144 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.780183642 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.77181814 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.783534111 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.746340196 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.789056477 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.778691515 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.74475279 seconds)
  done (took 44.35753987 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.933882295 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.81448121 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.894837901 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.793685903 seconds)
  done (took 9.11261286 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.790847962 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.794047807 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.805802058 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.841736934 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.865210475 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.800585516 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.763158993 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.760884819 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.743099916 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.789126443 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.864835015 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.784030288 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.880900872 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.73751587 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.914795671 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.734474598 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.733232399 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.78654933 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.836463028 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.848802245 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.732429448 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.782875768 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.787044659 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.780499375 seconds)
  done (took 44.832797662 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.731402045 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.740002214 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.738196755 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.732404388 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.731675672 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.731926246 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.735807483 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.731444233 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.751150148 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.731049548 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.729029568 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.730567119 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.7344628 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.728174427 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.727346074 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.741319554 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.742843251 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.727849591 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.732666048 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.73318045 seconds)
  done (took 36.349319674 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.724352183 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.569602272 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.070060549 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.973298835 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.722649041 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.720949828 seconds)
  done (took 30.440211533 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.732881264 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.727609247 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.71775675 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.778043451 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.866448003 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.72679435 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.718644842 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.729810093 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.763824203 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.783529159 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.736047346 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.745753925 seconds)
  done (took 22.680602978 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.725524178 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.717059258 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.72289206 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.72840942 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.727676989 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.722969428 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.724529483 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.712849949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.730332394 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.735082917 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.723200188 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.727208868 seconds)
  done (took 42.34995065 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793962293 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.588150593 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168686611 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178307204 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239601442 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918181471 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.716704896 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.798762735 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.715959569 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987536604 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006949998 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912881938 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.967313154 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.579554718 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766699797 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.189851495 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01148597 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940207114 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753621132 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388908171 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757578454 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35084553 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.498117108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.76210753 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927288333 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.845042236 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.981860142 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.674991515 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772089907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727863394 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729059623 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.724624574 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995345204 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847510965 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795021314 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730966655 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.136842016 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.429922745 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.732092982 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.425590333 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.11105397 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837738253 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727924786 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.725092493 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.651214524 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355684574 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865073886 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.727007673 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.426621444 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.726074459 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730845423 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799694874 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.726921086 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.532387815 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406324544 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.992776184 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.72617591 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72779947 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279430165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787375767 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418277164 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.707059498 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.810497537 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402902503 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106925817 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.881990492 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.727699952 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727225524 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652831057 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.399395075 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76888978 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.862777898 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.745683437 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366867026 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020159448 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.096747742 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76531733 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012466707 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.643991796 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.706098173 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944134348 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.675528851 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654477115 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.557999058 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.654567251 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940474525 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764614207 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.323994413 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76713419 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808993453 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732645658 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741438462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730471688 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.941253668 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.623515795 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.728351337 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 3.971289875 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965494425 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746338464 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809453807 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652735166 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.725882245 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968553601 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.925217652 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.096383623 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.253333368 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809145897 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.721484966 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.771076143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.721245258 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.76593208 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.991702818 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781664598 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787255989 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765319205 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.670509851 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971361058 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753838264 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.857208569 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.040442731 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94908462 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.06271273 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.971284461 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784022114 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.723992111 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.722446141 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.456672287 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256075553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.935417228 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.730823081 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324922578 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770752271 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.717433571 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648086397 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.392484531 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041257972 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.778098179 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927254224 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.704555005 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013208566 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634724497 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.838846638 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.703210231 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.919048606 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.351244733 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.777749191 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949795217 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.057545043 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.116715183 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751003077 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708225443 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786014151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711193249 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.246185266 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.986966392 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.69358159 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.694646629 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.443821248 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.668465726 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.694402321 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.689250434 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211655969 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965114392 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707628112 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.685056672 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555554494 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.693736639 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743167245 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687253489 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.682812578 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.220893947 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.182212017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.685601827 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.363611669 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893089466 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680014796 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.377700986 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77685094 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.689212138 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951982293 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743571085 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.603414914 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.377232908 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.37922079 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.677072504 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604575616 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.67845891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680211772 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683477313 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.864944708 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952596278 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.730065748 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.42747974 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.70851423 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682576052 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.680276267 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.678298944 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.190168074 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757516221 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354879828 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.730855457 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806578409 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.687718003 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.603478405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.678116843 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678747881 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.677653787 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.626215381 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724859563 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.421022641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799052493 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926281857 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.082890668 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687641765 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.436326209 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.71835803 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.692927572 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.977991426 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433945866 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.788127564 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683025187 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.679793721 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.425645195 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333383424 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227663067 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972850358 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002250734 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020399157 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.287873541 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.935051399 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760268462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900245341 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.19577755 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730149588 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762371022 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613017059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687747724 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.327789815 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03017667 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682849996 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892218613 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959020639 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.033884277 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798678451 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878766481 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70430375 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.675436877 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.633506664 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.210999316 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691939441 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.071653349 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869322392 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757936329 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.96616951 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.746863458 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.675965343 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018602993 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718583405 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.376252339 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.028636918 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314782297 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.074886441 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886251152 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.675520925 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.114387211 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025718763 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.112729684 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.731713062 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603197768 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681464733 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681063202 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.687953053 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.668328238 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.539944243 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.918501393 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682843717 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903212806 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.044950501 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980498694 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.583940423 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.680169567 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.677335253 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928257806 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.588469417 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768870863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.231910678 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.20501783 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.684066383 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.604098024 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603329428 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.378465292 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.681416637 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643347524 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904836956 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.783304291 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359997505 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298291413 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923089618 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922821336 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.689462255 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958683255 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953670167 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.170103136 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698024056 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.775239934 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.973183008 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.379400934 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.893168384 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904469964 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209956843 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897223589 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130655223 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.652568411 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.679690921 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886309425 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.894154819 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.037611361 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843414613 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.389975134 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.775702492 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985986007 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74136527 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.036684201 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.855500165 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.774455269 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687782179 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757517684 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684026706 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.686653057 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686022629 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690728899 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045629987 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792133492 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.692342591 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756694456 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76893206 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.195597155 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.688504578 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961782775 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050322871 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021391962 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748181162 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.685995207 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.68802142 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611366828 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814495392 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.123897891 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956051296 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.801735801 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.826725651 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704887786 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987094206 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.179663123 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928324041 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958482564 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.56790374 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.63768137 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.73869022 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.90239759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690554488 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.889069568 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916546539 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99999746 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251569765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.069325274 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.811318191 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957803777 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049865099 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.686098505 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262651674 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.791031369 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029674256 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.718013972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045112178 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929741405 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682663622 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799994577 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684012904 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.88417683 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.127451237 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.425484983 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948134388 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535655984 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.682291058 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959023005 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017443979 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985406461 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75539578 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685032747 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.370978617 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813374956 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.56527889 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.895017008 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.679723561 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88197953 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.389841076 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68263556 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95094126 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986065472 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.679108007 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.568197937 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682488604 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.682562809 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893501902 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898427575 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927824889 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683168967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.688175432 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.485993965 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953236919 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741111712 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607255774 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.682159141 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72528904 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908203626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69913418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.194011529 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.379152579 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960263158 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.588155744 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693376056 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31621673 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982590839 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008039147 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.215935339 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891453931 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233213891 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6719067 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972190803 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.672732914 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309951467 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985701228 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.672430181 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411264662 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716969718 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.945247545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998754654 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.791091414 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429977604 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.626092525 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888181967 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031091195 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604689829 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.676123937 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.721852408 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.674770225 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656081691 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683076331 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.56531254 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33796179 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.450464841 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231659398 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.677399796 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.679785835 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 3.989637656 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432221658 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715332109 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691165398 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.683536116 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.366202094 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.961494283 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92006179 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422806552 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.710553395 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.677477166 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.67607315 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593442224 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858412048 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.862645797 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958028171 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.276276815 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.716942856 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67660466 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.882585265 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878758113 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.007535204 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792968992 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051752432 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722064425 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.614868198 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380137087 seconds)
  done (took 1580.675306105 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.702847066 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.688394757 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.682672756 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.714482856 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.69827306 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.68053454 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.719244569 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.75271453 seconds)
  done (took 55.251541924 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.66809916 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.825217553 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.670370257 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.667310237 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.670970618 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.667893841 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.826220915 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.678805415 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.67148774 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.67262668 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.667610299 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.667323272 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.94459475 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.690200876 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.667006155 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.669640156 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.670193026 seconds)
  done (took 70.605700026 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.66853718 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.879967318 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.706629214 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.670399069 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.867233796 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.681933832 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.58677877 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.685042746 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.675332508 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.0838864 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.96322084 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.710284389 seconds)
  done (took 87.784030287 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.674300081 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.670247069 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.669022916 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.669216673 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.669582223 seconds)
  done (took 9.960696129 seconds)
done (took 2064.855621331 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.897472269 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.870035126 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.915934473 seconds)
  done (took 5.389900062 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.8095194 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.866089112 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.972281813 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.980471428 seconds)
  done (took 9.235205102 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.95067731 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.048706319 seconds)
  done (took 5.604626675 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.034086095 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.681499103 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.054204745 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.671635241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.674658143 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.671060149 seconds)
  done (took 21.62743982 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.669008266 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.669043053 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.671646985 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.670361748 seconds)
  done (took 8.280747759 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.668039878 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.377199402 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.666500876 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.681239853 seconds)
  done (took 19.997929779 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.815946924 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.784261728 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.811544962 seconds)
  done (took 7.015735724 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.889648324 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.775130384 seconds)
  done (took 6.268611026 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.82462345 seconds)
  done (took 3.428679399 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.697091358 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.938127786 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.154899418 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.200573414 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.26052866 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.549400183 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.998112773 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.919392543 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.082456049 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.114103328 seconds)
  done (took 22.519673586 seconds)
done (took 123.641383722 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.01901476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.684448411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.870000954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.02841471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.895045759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.86911392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89246809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.01627421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.700434684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.689601083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.028129169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.891846615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.839629274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.683607524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.842346608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.685826386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.889414593 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.025314044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.707840754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.925386268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899786715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.6751624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.870167643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.68843206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.891993885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.822547588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.219863161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.688483106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.852939771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.228716928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.827127113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.07368328 seconds)
  done (took 161.529498729 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.670193595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.670829766 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.671785743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.67118315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.205142947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.67236822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.671345252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.671169242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.093157603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.079984629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.673067147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.194211701 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.675051415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.672091974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.671533362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.67176697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.253468026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.671614144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.672155011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.674078675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.673084253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.044110839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.681269207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.054420957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.235231076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.672612751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.671703479 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.671913537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.673265718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.672928318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.672160087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.672039306 seconds)
  done (took 202.909071731 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.672482099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.67205498 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.673186158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.673100878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.672954729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.674100872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.673387071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.672995971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.314862957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.299526939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.672940995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.673001624 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.681821406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.673001321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.681184092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.673109474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.67363968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.67253257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.673639251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.673699387 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.674864731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.479500083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.673752297 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.501261777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.67750232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.677257803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.673965434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.674562468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.67290709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.674928785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.676175994 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.674006882 seconds)
  done (took 214.105528073 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.918238481 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.673984654 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.675514339 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.587454898 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.674985977 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.675563705 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.65524576 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.922049302 seconds)
  done (took 17.397695744 seconds)
done (took 597.563243487 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.030186063 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.874586278 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.854923094 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.69977986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.932375458 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.742374241 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.693225436 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.758636427 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.507770127 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.769687347 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.343338611 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.721453032 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.437408713 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.725600227 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.818021284 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.75403748 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.286181333 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.395112663 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.869559562 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.746270479 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.875334038 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.611005131 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.779833858 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.55120017 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.462064262 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.676122758 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.73261203 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.294735121 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.708953614 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.850338426 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.336135678 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.96502293 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.70892948 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.693752748 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.756541779 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.728587249 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.92856677 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.706472919 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.821231619 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.409149704 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.758201198 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.413554794 seconds)
  done (took 94.341819964 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.684651293 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.683198839 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.682168841 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.682062372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.691349748 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.681841534 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.682573289 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.682232176 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.682174738 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.682287803 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.682287431 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.690812439 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.681927821 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.691175369 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.682480615 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.682589207 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.682368047 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.692039902 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.682776703 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.682772628 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.682004755 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.682025506 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.67855944 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.682637284 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.682912746 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.683643669 seconds)
  done (took 45.402574057 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.677219591 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.828848646 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.921411115 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.6984508 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.679061767 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.682050902 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.696526278 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.683141592 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.681059926 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.680546775 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.781265988 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.68379238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.69679504 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.919974918 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.695207963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.677785714 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.678403096 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.679696425 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.837568049 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.695216482 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.698392437 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.683505348 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.697708476 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.691984625 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.681541887 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.679819623 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.682636996 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.151846169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.688651699 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.781637077 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.724001456 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.701613775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.094482451 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.930972408 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.73495245 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.686658986 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.680191019 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.786708056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.686172795 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.681768482 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.698520093 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.686580121 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.923032901 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.204726966 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.695354343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.679584168 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.162564331 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.796848359 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.722120985 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.69302592 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925931661 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.697232292 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.68109961 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.681116461 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.716622078 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.690601623 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.680446792 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.037409788 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.692389197 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.698359831 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.685018199 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.681565929 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.844374797 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.690744001 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.832006837 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.691466045 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.687991881 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.682356062 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.926725095 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.697814521 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.21687171 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.69635101 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.680570959 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.78242777 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.837532753 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.187464937 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.694929269 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.842985973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.109468037 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.705656806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.691919686 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.15192443 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.708827234 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.689528148 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.682202513 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.681871213 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.681159673 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.723842442 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.697461571 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.126108544 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.21641447 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.053635632 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.708967585 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.697383097 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.683109052 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.036600602 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.691169252 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.682050396 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.917844415 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.226062818 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.697363939 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.689938751 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.197110624 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.699431388 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.701482318 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.690930748 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.930260713 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.699264504 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.72490593 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.682741977 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.689393494 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.685446564 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.701764624 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.690219641 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.682951922 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.190036258 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.80625899 seconds)
  done (took 210.18138059 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.682790605 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.683539836 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.683230055 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.684421449 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.682335641 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.683508842 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.682439533 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.682973973 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.683948867 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.681452486 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.683045982 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.683448436 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.684409726 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.685754767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.725357908 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.685296029 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.28647017 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.683506942 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.683221564 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.684147263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.325237558 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.687988746 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.684407079 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.684178581 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.682553873 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.684487156 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.685706922 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.723845357 seconds)
  done (took 162.09503547 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.684830886 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.797124097 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.705325052 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.713950844 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.690939254 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.685112663 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.781515373 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.701439151 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.689749649 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.684679019 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.683843642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.745134477 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.699208037 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.781975498 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.71593862 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.791130274 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.787069903 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.691059134 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.685312913 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.68659392 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.71477425 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.695248939 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.746062195 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.812010404 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.706962047 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.798309659 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.709034325 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.687324157 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.686513484 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.798886514 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.707356537 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.747030087 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.717468149 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.704197951 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.803112757 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.801501943 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.787004922 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.78761186 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.691573208 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.686228068 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.685800917 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.688743713 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.798812678 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.708065063 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.687498055 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.802494711 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.706090841 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.686702755 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.687384409 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.686679236 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.699612307 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.704425069 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.751466941 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.820860489 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.723831662 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.711013923 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.783941747 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.808067779 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.688113831 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.783436223 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.694855721 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.80085204 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.708445489 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.689338625 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.688512541 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.691151561 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.716618791 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.792228679 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.789480493 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.693998613 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.783123369 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.722412724 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.695428182 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.687849861 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.688348392 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.80062466 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.804889851 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.722243079 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.724427678 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.718370252 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.69804468 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.688427806 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.690060596 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.704887434 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.692586604 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.803363915 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.80532159 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.693438631 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.688689937 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.68878699 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.689074846 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.713134202 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.809391539 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.725646039 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.794122869 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.753354421 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.766482311 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.704908082 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.702179455 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.693813067 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.751441807 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.707841595 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.701096004 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.979118019 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.748752411 seconds)
  done (took 183.433136077 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.059987216 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.735538947 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.745359499 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.013715469 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.049540073 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.61744556 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.737099617 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.736766842 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.761221613 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.922855001 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.809267965 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.758203509 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.725161145 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.71061554 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.738155495 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.756251749 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.744555329 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.082863844 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.966691355 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.878474539 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.728582345 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.024471707 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.05499906 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.322976354 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.789028287 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.125236929 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.309114059 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.878617254 seconds)
  done (took 56.410777727 seconds)
done (took 753.477192593 seconds)
SAVING RESULT...
DONE!
