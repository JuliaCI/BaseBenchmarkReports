cset: moving following pidspec: 22631
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.239233888 seconds)
loading group "string"... done (took 0.578978484 seconds)
loading group "linalg"... done (took 8.021323936 seconds)
loading group "parallel"... done (took 0.170072669 seconds)
loading group "find"... done (took 1.216853559 seconds)
loading group "tuple"... done (took 1.974644906 seconds)
loading group "dates"... done (took 1.321476181 seconds)
loading group "micro"... done (took 0.201657342 seconds)
loading group "io"... done (took 0.939351366 seconds)
loading group "scalar"... done (took 39.950451974 seconds)
loading group "sparse"... done (took 12.077748241 seconds)
loading group "broadcast"... done (took 0.955995204 seconds)
loading group "union"... done (took 13.875586679 seconds)
loading group "simd"... done (took 4.788364008 seconds)
loading group "random"... done (took 9.259492212 seconds)
loading group "problem"... done (took 1.681263179 seconds)
loading group "array"... done (took 21.498507907 seconds)
loading group "misc"... done (took 1.615338675 seconds)
loading group "sort"... done (took 3.357258185 seconds)
loading group "collection"... done (took 18.312074121 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545762428 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127070508 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137756327 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120587387 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151811975 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117994917 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125735112 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085439716 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.847684376 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152541091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115861044 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438140373 seconds)
done (took 5.337804621 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176693546 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089385319 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080275179 seconds)
  done (took 1.2105893 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066531403 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128653148 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06793186 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068054282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068847515 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072371616 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069035299 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06975113 seconds)
  done (took 1.588126457 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073842589 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069849218 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068752397 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070573601 seconds)
  done (took 1.325127644 seconds)
done (took 5.41780432 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.810729181 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210701726 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190889829 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417076314 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137928343 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183457866 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640058009 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344425623 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205946867 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096000114 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114145362 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.365089747 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124813427 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649831595 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080997403 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096764177 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14285801 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.462611283 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072657146 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085659069 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093825378 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131764935 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089154936 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077307757 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152553982 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070869661 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145628299 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084005369 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06977261 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222114951 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17593317 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663403464 seconds)
  done (took 10.489080991 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102977616 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100365486 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069444263 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125874806 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098756951 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070994435 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076352954 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068999763 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090660827 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129981299 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092449254 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109331857 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066644872 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070300926 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084248062 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198282135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081658792 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082480884 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071718443 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079468048 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10853309 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078874085 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080666776 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080613029 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134068491 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170479804 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09744567 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098207163 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068026659 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082470255 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115667343 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128606982 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067360147 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067183231 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126597796 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096126423 seconds)
  done (took 4.553151583 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.105749968 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154101432 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091313085 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141147021 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066299201 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112616924 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066703778 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091266167 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238712549 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083484333 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.404498244 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.631687871 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12354168 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117785818 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10547505 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071317786 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07206662 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068634833 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.299084483 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103340796 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115494938 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086926225 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078351943 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073288237 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067397029 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074062451 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066581116 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071228798 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091067828 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078702022 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333740424 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130224526 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07115127 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.059592957 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.073418939 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168305965 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070354489 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095211075 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108438759 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0941581 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143333312 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068833282 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065197218 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.2993654 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067604604 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067698877 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07492609 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069845596 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088617689 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112821242 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122504812 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067744862 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069159516 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172490141 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066170203 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085492256 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.265320788 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153675621 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06687132 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302869779 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095269606 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07267951 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06662298 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.192664317 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123218348 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069504975 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068658912 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070290597 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069706275 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36553526 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066724478 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.91050561 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071748875 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080335775 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07345219 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072706215 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080772484 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080745614 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093131257 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067741634 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075877332 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069858179 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068607337 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069475591 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096482752 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.395828342 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06806242 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074645977 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06752001 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099118703 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102129568 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070248752 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068043431 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104528424 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070545689 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066845248 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068316371 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117975723 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070286576 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112818702 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.168744896 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.064940979 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065904312 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09809194 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070899173 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102380886 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080015868 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071631331 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466663235 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065939088 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073005643 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067515164 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068499799 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067720841 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079213688 seconds)
  done (took 22.044499684 seconds)
done (took 39.23529117 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24412001 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083748732 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08471996 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084665792 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085092632 seconds)
  done (took 1.715584114 seconds)
done (took 2.829264683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126944846 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100636999 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065586025 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098454883 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068048177 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101533583 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100736794 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084116817 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103227242 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065348781 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097947496 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065089939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065531671 seconds)
  done (took 2.275149287 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082794185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085684789 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072130805 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084879682 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06456777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084435352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083214636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089270355 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081427642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073465327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064567507 seconds)
  done (took 1.973741554 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083056352 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084206169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06987499 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082086029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062953699 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082692088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081894365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085760564 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083829465 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076337534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064784143 seconds)
  done (took 1.960215839 seconds)
done (took 7.312027969 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076528607 seconds)
  done (took 1.171621549 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.540076707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.672811222 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079001633 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101014289 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193819955 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113176544 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240523367 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082403613 seconds)
  done (took 8.2899913 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095348379 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070675534 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081019535 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070984031 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070471321 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069879482 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070439176 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069523253 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069882973 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070897685 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070106362 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070003038 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069855457 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071092119 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069951709 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072646191 seconds)
  done (took 2.341820219 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098394004 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096333248 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074019205 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077862765 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075384848 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074685748 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077225728 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076417885 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073932475 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075436733 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07883885 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076360273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07568659 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067057417 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077406109 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.0791756 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074205688 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076956318 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078266531 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078109367 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078031805 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066999166 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076291631 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077193658 seconds)
  done (took 3.068825935 seconds)
done (took 15.978496317 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117429047 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080764141 seconds)
  done (took 1.298782514 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079039092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081287091 seconds)
  done (took 1.271258847 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079243767 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063246335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087291909 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07650697 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065621729 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06559222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086361739 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065686914 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065561487 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066051583 seconds)
  done (took 1.83320357 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065938814 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074286072 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069494067 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079540674 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070870545 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06475924 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069793635 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065973719 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075033323 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064415203 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069162726 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084148347 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068936492 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086442002 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069475217 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069334156 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071194311 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068296827 seconds)
  done (took 2.402992979 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064140276 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064638994 seconds)
  done (took 1.249167338 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068155699 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06411132 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068034972 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068153578 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065429908 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065347 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065816256 seconds)
  done (took 1.580631177 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400367601 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121547991 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330771761 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071124266 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080509965 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256502739 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065288739 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070063927 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069966008 seconds)
  done (took 2.625246042 seconds)
done (took 13.379812452 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081552127 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087016726 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098567394 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417126279 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096388513 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070780837 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115659725 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18080026 seconds)
done (took 2.275974793 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212188292 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.934861296 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.485113304 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208320307 seconds)
  done (took 2.747482927 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344576003 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081161684 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079825312 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069793796 seconds)
  done (took 1.703798793 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067888084 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071522307 seconds)
  done (took 1.261545354 seconds)
done (took 7.051508326 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065728231 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090776297 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.0669385 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066959516 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067086646 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.067006678 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066416337 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.066748219 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06692189 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06655561 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066638388 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066492835 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066808675 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066754128 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065535258 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065279685 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065188539 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065664618 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065567387 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065482902 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067108479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066718012 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066854164 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067384646 seconds)
  done (took 2.775758347 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081707062 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067741591 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071334251 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070925151 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071515445 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071570742 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07126446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070117937 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070861396 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069059579 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07137454 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070536424 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067827852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069973119 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067114864 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070112765 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069470713 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067732161 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067804742 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070928285 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070328511 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0692539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071261833 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070623315 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071234291 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069832774 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067153022 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067407789 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069600869 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07021372 seconds)
  done (took 3.239380544 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068225024 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062343505 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062668779 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071889404 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064053842 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063988772 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061346752 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062415912 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062547344 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062213224 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063240713 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061867299 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062108066 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06267878 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062518681 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066089746 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079633764 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062342504 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061792942 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062277228 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065863922 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061514152 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063823681 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064479765 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062321608 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062484013 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063915557 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062737912 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063609931 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063294258 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067797625 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067945992 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062849197 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068033434 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067659621 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06328526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067695011 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062728314 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063579991 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062628744 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062575406 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062808204 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063251152 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072453834 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063144049 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064412369 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062068341 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06289572 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061725877 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06377324 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062677789 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062862468 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065131609 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064306755 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068280387 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06262731 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06373272 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062860434 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063555832 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062576199 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062653974 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062259964 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065603359 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063423345 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080497875 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071765201 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062446396 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063968515 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063136271 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066484569 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064322166 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078912455 seconds)
  done (took 5.791932501 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085789411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088425618 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066737481 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068526205 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064143057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063587039 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071991882 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063720968 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068553255 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083482469 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063809586 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068261347 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067974018 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067436025 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063947079 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068735621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072721852 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064255682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063823359 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067942497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063985132 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072094808 seconds)
  done (took 2.682450764 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147402806 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069003444 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108544986 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074799885 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073093503 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075353371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069856957 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069834442 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069750658 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070453658 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070493771 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070245797 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072620832 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070395535 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071018252 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070294061 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070096951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07043216 seconds)
  done (took 2.536915765 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078938125 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068017302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089180368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06897145 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06902935 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069053989 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078629474 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07525581 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0695067 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070027834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07515181 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068534463 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069427029 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068976867 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068636502 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06952388 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069056236 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069307731 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074502429 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072114821 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07135401 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072410952 seconds)
  done (took 2.730556957 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07883329 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067240415 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093961173 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071867999 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063869694 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063573825 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070214683 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068920199 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06965718 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067727302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068233479 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063716873 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070059748 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067835881 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069270242 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066924233 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066354161 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068051732 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068657663 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063687832 seconds)
  done (took 2.533349242 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08454869 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0657234 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066192817 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071530668 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065010913 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065500872 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071827016 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065181223 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065093752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086386517 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065502162 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065165863 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071936468 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069469424 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065297366 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071516566 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07489483 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071901883 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065314594 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065240433 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086239077 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065183666 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072413214 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065183475 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06505347 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065233325 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064945523 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069410267 seconds)
  done (took 3.092383292 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065542905 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065506404 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067205572 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066731173 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066388269 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066327852 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066640747 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066248011 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066066662 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06549515 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065616298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066156814 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066607893 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066292912 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066893329 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066527878 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066779955 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06681967 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0666688 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066707861 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066305611 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066401171 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066196749 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066781812 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066355569 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066336069 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066303904 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066358925 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066355768 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066466781 seconds)
  done (took 3.140983614 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075145136 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073567789 seconds)
  done (took 1.299060112 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064162759 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080233547 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061518606 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074257455 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072226297 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065896492 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071677572 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070667639 seconds)
  done (took 1.704340182 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086072698 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076327693 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064730396 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076495491 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074931632 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085090553 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122961348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063974774 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074529825 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065209154 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082239998 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066299631 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074588637 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069411529 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074555859 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075188637 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063374653 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071273876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067791307 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064032175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066341161 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078863474 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075145732 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06369611 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071011086 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091957669 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080034134 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063568926 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071256792 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077100619 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074602017 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061020059 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063637982 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064448442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062611986 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075376804 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082653178 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071085601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07720506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064751591 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072569463 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061925264 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072586855 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075009196 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081791904 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065831265 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066161204 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063378163 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066073111 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071536076 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063546641 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069737359 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062910221 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077931515 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073067585 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081198942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064650665 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071172584 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072431765 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072469594 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076837442 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071773271 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074712106 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065243007 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081395323 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07482799 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077747909 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063419304 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062576795 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063437703 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07984368 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094278934 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074620231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065120237 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06442522 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0620791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071075118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064506435 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073121482 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07553927 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063553736 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069201169 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078025695 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068658535 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070368376 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070390431 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062670931 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06732091 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064742581 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083269116 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062697741 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06198463 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065007116 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080917183 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071394934 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064016789 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064823244 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076035962 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062458725 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065671372 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06514595 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069978083 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077558722 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068605192 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06900986 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078715072 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073617062 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069722578 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071259354 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061806347 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065165897 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066968002 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075968313 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06163726 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071710533 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068519926 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064520699 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076600363 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062827474 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064109143 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076837411 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075778489 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062744391 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061442263 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071700574 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063883324 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066488948 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077524239 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062856441 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062330291 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062388702 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07198354 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063922328 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071936925 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067699868 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071237962 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061731911 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062245212 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068079777 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076326315 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066256503 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070502245 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074179924 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070245175 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063784303 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076798943 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071410483 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066383474 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074171644 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068165854 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062226947 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066384329 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071223014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063252682 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071889554 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066477948 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071168484 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064700256 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063051408 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069728894 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06467343 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066355039 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069199926 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063228345 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079090534 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070438909 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062465065 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061871328 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070991808 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065343398 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063674176 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066539416 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070717793 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064564423 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062608642 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064305146 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070638669 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072567905 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06770002 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064033299 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071991144 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079934773 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063010659 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069684688 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063443321 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.062608796 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062389849 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075106852 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071644482 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064588678 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068172063 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059635312 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072579349 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076531351 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066855496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062367257 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066406428 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067473266 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075471719 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067439566 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063266031 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062693555 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070331276 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067060977 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0718047 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063567895 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06731933 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068881495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061224423 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066702285 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062828307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07571766 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068616963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060125654 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063179293 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061059325 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072608124 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06091284 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063577953 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06682934 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064432024 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062498947 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068575302 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060368591 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075604652 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076015823 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069448467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06708885 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063858864 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076759177 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070526279 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073633539 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071903603 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074420364 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080132194 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067337416 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071345574 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080006841 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064524827 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062536752 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076729395 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063349747 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063326338 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063584294 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063260049 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071817055 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071779489 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074038866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062153398 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071216726 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062969984 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066657536 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063018456 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073245869 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07106283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069406357 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076330574 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065564797 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064995798 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071807092 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064039441 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064514787 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064528313 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069235452 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062901357 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068593478 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065479333 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070745487 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06698824 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062848183 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07063465 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065039717 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069671003 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073730325 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063984435 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070584803 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071214375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064612531 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070356663 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067625327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067019367 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071447126 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.306274823 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071736779 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074733033 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065921282 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08095411 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067456316 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08127846 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072466493 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065180142 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074849864 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075878575 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073638712 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06978943 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069987474 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074994554 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068664958 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076522523 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081878063 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069743774 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085048287 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080312627 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074237395 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074807652 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073060428 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073323057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069996885 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071953089 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068474812 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072857408 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06701277 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076744578 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074915715 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072640196 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074446042 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068261121 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072715245 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068750748 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064853722 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069954055 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069970236 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067081194 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080836429 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067537783 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070315419 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06598946 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067885865 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065579104 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063952387 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074987148 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074509646 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067438224 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076922444 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069008094 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072235257 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082255923 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063123495 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064785709 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064014934 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0672967 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078852414 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066101439 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08049043 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071623939 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068877739 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063544242 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066442802 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064738205 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063688042 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064447917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074889904 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068443312 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065403829 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066352587 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073315156 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067863179 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080320022 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066525285 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071136985 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06676164 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064125301 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068952896 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069279879 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073517682 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067354973 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067587097 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06402409 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066717646 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070840565 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072693838 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066941081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07277077 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079011698 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066684701 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074212122 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068881019 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063969743 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073152242 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066509778 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06607809 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068910309 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074598763 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074216335 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06681865 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080897292 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068699144 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072669019 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066197883 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064087231 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065435788 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065905108 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065871883 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068471906 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067792598 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080039261 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064146569 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072662604 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071577272 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069868266 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076373035 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066397187 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072032129 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071345608 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067278936 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072672857 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079458367 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069961492 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073330779 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066627351 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072380969 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076001707 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068573255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077476051 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071370306 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065941882 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071197135 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06681516 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066098277 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065167065 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065057316 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075974267 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065959559 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067522264 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068466979 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063284402 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06957249 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06743913 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.214437277 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072713778 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075129918 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065583348 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064292857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068624995 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068132881 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071861498 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072966626 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075821305 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073010078 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069883297 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065532664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080422151 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076377068 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074338015 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067872703 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073768135 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067386862 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073374772 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070508362 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071454222 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06772174 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074527576 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071439163 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068921496 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076961993 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074239632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067041775 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07194637 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07279426 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070422996 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064240359 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066675225 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072988077 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075850254 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072602607 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065820361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08163922 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067195756 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070822655 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068146994 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065106977 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074107748 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064294778 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071695692 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067076593 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066348375 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064332948 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06916866 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067657257 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072769268 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068508739 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064134532 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082864053 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081535856 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072374034 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066241757 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065049474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064234027 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064322758 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068954227 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067229097 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072487455 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081150994 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068823104 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068274249 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064250672 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065889543 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073651956 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073928855 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063674245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064375902 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06861414 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072259202 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077777265 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065208958 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065862095 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073527169 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072532421 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063654571 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069643162 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063065174 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073974864 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083638101 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0662224 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071622211 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075491999 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078711408 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067063689 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063914637 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06654598 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072728942 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07128415 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066645399 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066592786 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085483514 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073781041 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06841685 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064575681 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073456312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068225668 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079858245 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067088928 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068619908 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074654957 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072164831 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073566473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076259771 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077180482 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072009851 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072643537 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065040856 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070750038 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064513713 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068637502 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066792454 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065810025 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070191037 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073161426 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067946998 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081325799 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082098034 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068108912 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062873135 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067817322 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067943583 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06369369 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066207442 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06378043 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06432512 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06411832 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064390393 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071627185 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075117133 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069188808 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065873419 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064991603 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062635271 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074427083 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07151776 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071759588 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062331113 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064726984 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065688679 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072995039 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.205297034 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06694851 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071434636 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072623388 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090427516 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064065474 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077816345 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065645762 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07270919 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068407752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06554578 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066446207 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07382886 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069616412 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06753155 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072287801 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072234 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068269054 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063602623 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063152063 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075338987 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063692144 seconds)
  done (took 43.313657547 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101024446 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065160677 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064463109 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06485901 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074956656 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065258101 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064739089 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065234306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065401888 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067663919 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064197841 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064656187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072479653 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0800185 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075231321 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069523609 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065209763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06585381 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064569085 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065201084 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072599168 seconds)
  done (took 2.753420718 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07105498 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079429124 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078694529 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081915002 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074168679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0699142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077515297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069693399 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078171999 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075372357 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078234645 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069422737 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075158502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075003863 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075451656 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069897183 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078289739 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074315328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070485006 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078225545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070211661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077951217 seconds)
  done (took 2.935763131 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065446061 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065323731 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072340439 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063883235 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064928582 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063511804 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06879685 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063764311 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068448162 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067864209 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067846709 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06761015 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072207733 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063707288 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069135979 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063628868 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110733963 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069461678 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065149281 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066420921 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063918906 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072461566 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063942591 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063982269 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067845008 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067996774 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066471206 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064200217 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065050686 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067690957 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065702985 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063628536 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072477448 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071595111 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067733713 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067651636 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065156547 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065746679 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063895308 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063558798 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073878848 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063969371 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065812322 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072155881 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063817194 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063444391 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072005043 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065345803 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063328513 seconds)
  done (took 4.588036006 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075696919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111222221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068943135 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091527964 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07689096 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071537091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070964679 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094919209 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065693804 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066661566 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081038512 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08065708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067906584 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069481316 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073245722 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067714677 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068668409 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066527266 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070928124 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067250248 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071590043 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072051097 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07913268 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08017473 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069298561 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066675455 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067298905 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069075428 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083468875 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071624983 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069328983 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069879984 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079582073 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07273166 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066740481 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067402343 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081055247 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067814399 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067621597 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06616143 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06680771 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069277922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072516516 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080604093 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068083898 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072726016 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067725197 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065095312 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079883196 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067439429 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07190218 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081149473 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068952906 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068456535 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069377865 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079608922 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067943683 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066320999 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068132126 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079396264 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065654032 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068809987 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08073624 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067238348 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071823731 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080776011 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07336948 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068799256 seconds)
  done (took 6.341624038 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073959468 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096858871 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082466134 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082509642 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076054179 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076592222 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076257529 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076591832 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075830563 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080296843 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076932163 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119083119 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071304107 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077847375 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076119169 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076112929 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075810236 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075785484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076039212 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075861625 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075650152 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082324656 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076148226 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0827614 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07930708 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071219426 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07548744 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075790073 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083157542 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075613873 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0794037 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076025342 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076029139 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082571308 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079080967 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075680809 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06515259 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075665555 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076105308 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076192602 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071826373 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082594561 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075939559 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071930747 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075701145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076047933 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082306039 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079082232 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078161901 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080155931 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075794373 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082607603 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075841 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075673325 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082348135 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084924702 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082208369 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083047393 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076135266 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082548579 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082573534 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084024703 seconds)
  done (took 6.178850076 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078725141 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07101581 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082593251 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062329573 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062434687 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073406583 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062646526 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06701433 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0730061 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073502241 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075016171 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073674536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075288247 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073271115 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073031607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076211426 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073349341 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074824496 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073890243 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074624213 seconds)
  done (took 2.750640801 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077198755 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082885348 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070060825 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07435928 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069442339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074740499 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06961602 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070035511 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071680084 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070092619 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07610556 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075996458 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070642023 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07488884 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075868445 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075159628 seconds)
  done (took 2.462455573 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.069611833 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071790251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078354268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064178516 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069016148 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064619322 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065506996 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063761933 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0646693 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078943886 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065515721 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077126597 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065446999 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064644284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065256196 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071512703 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065263864 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066339009 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065569421 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079245232 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07269161 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06704074 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069557772 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065468904 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071279706 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073157282 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067443423 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069219882 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065659047 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065871323 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071417171 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072409691 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064923299 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065819049 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064292068 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065239669 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065342038 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065775208 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071096911 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06537397 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063759382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089362251 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065475273 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066588479 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064570519 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065739517 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064808069 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072029415 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065614719 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071535613 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065379907 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067681516 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065983659 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073495398 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067994618 seconds)
  done (took 5.051389896 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079669546 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068446831 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063732545 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063507581 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069197893 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070117242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069829978 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070201726 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070498766 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063956616 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070741915 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069526009 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07092748 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069828314 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070247006 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069726109 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064098294 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069793921 seconds)
  done (took 2.545007419 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073719125 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068684462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073894908 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069580821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068557696 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069090869 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063905918 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064311367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06422988 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069060533 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068684966 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068808005 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063960195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068567178 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069323269 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068972831 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068519035 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064372098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068558234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063949292 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068745608 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064292854 seconds)
  done (took 2.783086686 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095662668 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084348279 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141405417 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079874289 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087918085 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074189368 seconds)
  done (took 1.855926247 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092878683 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098520305 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067567133 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068470314 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073408646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07086952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072819206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073729334 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078112651 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078095065 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073325792 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077798724 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077814252 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079505888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075341727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077604518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073168098 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072908707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06916089 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082617066 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07296933 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077755582 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073200795 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072867985 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073406455 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079774351 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077601629 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078026667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073139321 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078737662 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075521996 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073011894 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078068508 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078337341 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070296943 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077672674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072875667 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083027501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075793847 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080194982 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069366367 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075475003 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077612546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077399844 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077769533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073027504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07695588 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072785712 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073188008 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085088485 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075836937 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079829672 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075691985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078678994 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076955691 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085359109 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078223776 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080366281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075767503 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078508291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079960809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075901901 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080099293 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078439754 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07570101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08004353 seconds)
  done (took 6.364201375 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105589641 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068299397 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072133025 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078222185 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079848478 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073595859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073524254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073128213 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073727712 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070447252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109231736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073819363 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080242511 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08057867 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073425072 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073421533 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073648411 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080073299 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070810784 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084860855 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073356606 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0804115 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079950989 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079520522 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078649993 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075601537 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072881318 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073186334 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073094106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073120658 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07720467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072820699 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080597473 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070592373 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079757801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073112294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072642934 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075997924 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071063961 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073442446 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07752947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08071342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071087288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071794323 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077132137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073053798 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072800001 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069953292 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073394086 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069944371 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078087733 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078251838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077640884 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077809174 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071403286 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071737028 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071753524 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071398782 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071346542 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073903204 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077510205 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073327673 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086806158 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073144388 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073280006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078971322 seconds)
  done (took 6.335321067 seconds)
done (took 128.912508176 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209026986 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184995013 seconds)
  done (took 1.674146157 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074777023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105654221 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085763572 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136823695 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071355651 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105589652 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104961742 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084233176 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072101346 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071284833 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071680038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074431825 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136942452 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072529603 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071465594 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074278432 seconds)
  done (took 2.71252054 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105949043 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170399771 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109217925 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06967413 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104537036 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077411433 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069388 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083153064 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076171251 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071669544 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079608026 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078519606 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.075323578 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078460199 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078241412 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080220928 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073569879 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080227068 seconds)
  done (took 2.866848659 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103574391 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096535309 seconds)
  done (took 1.511280918 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179758927 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107703307 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148712687 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353202941 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156920145 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.438253851 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144923017 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141969818 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116795506 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137647094 seconds)
  done (took 3.230680832 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104416363 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200505496 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303830232 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124464047 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078689821 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11677776 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125398879 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084184518 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087448395 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08662999 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086435114 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081500435 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105982395 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07974853 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078454385 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081349806 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10990878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077352516 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078424844 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08111278 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109736788 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072097814 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079311925 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077272106 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083915879 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083370815 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073119793 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072076297 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.081032574 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078591121 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082269561 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112365951 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081870087 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107561084 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074193919 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107801219 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07854377 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076602731 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077833143 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079318032 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082946961 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.083181531 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080833198 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080896084 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073237419 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081475972 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073188321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071481036 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083081522 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073056218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082845944 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082161414 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109646438 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072156568 seconds)
  done (took 6.320012522 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109041491 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107044297 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071491141 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116238736 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108115018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072785028 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109915155 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102376192 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111748909 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073437178 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07203391 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073282177 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082433868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084676988 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116239799 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108485457 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073342744 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070715437 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111748286 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111536354 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072587031 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105272481 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101376235 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111420182 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069203367 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07096332 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070054136 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071570736 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076436481 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078678094 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069528377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079424469 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083783753 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077411042 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068745634 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069423321 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071636495 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081660229 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081510876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081541755 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07961322 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070294342 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07120206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072362354 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072350283 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070335963 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079956953 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081473693 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080007976 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071164828 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072459064 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071398907 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07186882 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081197925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079078679 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082422583 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081901563 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071708631 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0709663 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073616873 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082236619 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081203832 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080513363 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072376536 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081616654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071586914 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084078093 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086937475 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069473789 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07043747 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07086803 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07108536 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072285583 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07898449 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079059238 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071691466 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069482466 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069590405 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08186199 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079996497 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071473947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078840234 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070090885 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071029942 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072574443 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072647823 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079084578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080740536 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072543941 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071009013 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070863708 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071096467 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070383238 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079491677 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081107537 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080752196 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080114543 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072463255 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081184068 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080415883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072512976 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079662508 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070599377 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07287214 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071398822 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079064899 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078407322 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080549976 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070398752 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069941579 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07723694 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079771387 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069117183 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075731787 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077438341 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076006009 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067306721 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0783377 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068457294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077001091 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06855009 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209700297 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070798653 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079270657 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072242612 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071837026 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072848291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081240149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074157036 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071539393 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07267945 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071598082 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080989276 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084473767 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071152484 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077409243 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078869697 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071996194 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08114765 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072434286 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081048391 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07320319 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073295222 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071173379 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084408699 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072645359 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071508168 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07223621 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082645824 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07203021 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082105782 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078429932 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069339915 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081677158 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079918412 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076646854 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079777588 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071621733 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069689619 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069645215 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071916105 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079524163 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080970202 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073060684 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071591593 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079690571 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082723056 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071406291 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080327068 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080068912 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08079415 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072268783 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072352943 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083246889 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083092134 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080961712 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081025214 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081332806 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072274952 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079740797 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080452414 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071904981 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087363558 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070636601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082926258 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078052866 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076307579 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078457245 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079065332 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079284612 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079639462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082249437 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068952586 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069590735 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078189566 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069538906 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070703251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078757705 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071449229 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072283335 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085131328 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069718282 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079470671 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068698712 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078253702 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06877977 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070699258 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082538504 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069996199 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070694884 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077782435 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069469676 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07657357 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081609368 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077044629 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069283115 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070892205 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078216572 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078579008 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069168549 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069544914 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070810109 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07917236 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078237404 seconds)
  done (took 18.867023319 seconds)
done (took 38.500926413 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210065547 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15800873 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187807702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116294134 seconds)
  done (took 2.078389763 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10888864 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099907048 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091523294 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067911224 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097957927 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068141633 seconds)
  done (took 1.872372825 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299242068 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20397984 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181914611 seconds)
  done (took 2.023455163 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211168813 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195116654 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476415115 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286843926 seconds)
  done (took 2.603862559 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143489779 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085721801 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066755197 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085309261 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128023513 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153184513 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093924476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119136837 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07590227 seconds)
  done (took 2.342034469 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153890614 seconds)
done (took 12.434210113 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.131242207 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.149805003 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.321738258 seconds)
    (4/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070722491 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06905284 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.214190898 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107835057 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085542714 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.127095192 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103016152 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076853284 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.20492562 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.209725522 seconds)
    (14/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203845466 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175377614 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079183832 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077295781 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091329431 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078367963 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069124679 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155480992 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124401783 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076117805 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100521893 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07696046 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07528778 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077747825 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188344743 seconds)
    (29/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120878137 seconds)
    (30/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.169629535 seconds)
    (31/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078422262 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133490756 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087427364 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06816142 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.247147806 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113038285 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.23099573 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.236736326 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077100524 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078075793 seconds)
    (41/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073125146 seconds)
    (42/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.171165076 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077474098 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.246043019 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.175253064 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091226511 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.179151939 seconds)
    (48/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073639755 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20262044 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076060179 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069142489 seconds)
    (52/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.162897894 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066891089 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.203655714 seconds)
    (55/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138751266 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130475364 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103290217 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192193306 seconds)
    (59/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077965432 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122119282 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078703989 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131352345 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.156671341 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065542911 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066104986 seconds)
    (66/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093684042 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112507881 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 0.067770049 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128639113 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074142413 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121126515 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07518101 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.2411008 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173503756 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.205824011 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069125032 seconds)
    (77/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067253217 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076379439 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076332145 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068918354 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066645629 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10533923 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067395319 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138712135 seconds)
    (85/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136680503 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068872941 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166278289 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067195005 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.133178252 seconds)
    (90/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074094984 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075686686 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078722413 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.165973556 seconds)
    (94/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128631287 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082847373 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172011955 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094552209 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196331543 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076070618 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.196456478 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066931578 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0680541 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067485433 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068279235 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.21785315 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075989324 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079825702 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067225996 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090227901 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089183385 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088409831 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161395527 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.178240883 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218966336 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075851197 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124890582 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10084412 seconds)
    (118/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.126886438 seconds)
    (119/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.232682586 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134827389 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193157596 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073578119 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077240014 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067412732 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075134254 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067098714 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066583746 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067920499 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067259097 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066718452 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167684767 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066925406 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181475011 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074679954 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089376276 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068212892 seconds)
    (137/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075240596 seconds)
    (138/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079933047 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093736204 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074086794 seconds)
    (141/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075094204 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074879178 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068104376 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075398809 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09413978 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067044517 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06731656 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067828542 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066686331 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087212679 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067848965 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076292116 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074291523 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13673622 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07564901 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118476927 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066560009 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068750123 seconds)
    (159/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137692372 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075765286 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076000944 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07524877 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067300287 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07711365 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179420615 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074947003 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.0679815 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172680181 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066567207 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13562746 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082814358 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067812193 seconds)
    (173/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142420343 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068801223 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066138217 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067879302 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068658548 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066287576 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07066689 seconds)
    (180/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131504684 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078957228 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133497058 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.180166038 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091345316 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078210739 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141523627 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069161341 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067821763 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071525042 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070331536 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181189213 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070402043 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089536277 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088536731 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068027955 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074190149 seconds)
    (197/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.174404449 seconds)
    (198/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067973901 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069155288 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192157674 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087410544 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073141747 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175626108 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073537316 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116371452 seconds)
    (206/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073304802 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064989918 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066660139 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064775069 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065662505 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.41103686 seconds)
    (212/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069652928 seconds)
    (213/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076059846 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070784301 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069589006 seconds)
    (216/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18981348 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069300081 seconds)
    (218/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.144383695 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096299107 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097453554 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078798451 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148273896 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082969059 seconds)
    (224/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084648177 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182494114 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075153357 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071441644 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077847016 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 0.154313498 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070746372 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081512613 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079685358 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075127293 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144510068 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070505675 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074901691 seconds)
    (237/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.070372561 seconds)
    (238/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.071026368 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071387554 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070683412 seconds)
    (241/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.20580882 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149990507 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07805731 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06924816 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096375354 seconds)
    (246/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.070083666 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069208401 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073033367 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 0.137727247 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091979823 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07272542 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068396733 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070060591 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080025172 seconds)
    (255/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069656716 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070216132 seconds)
    (257/309) benchmarking ("sort", Float32, false)...
    done (took 0.137192827 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069301664 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067928972 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067911394 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09754745 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07117204 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075689797 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094399972 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148907249 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.168121413 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069971821 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080118384 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067227459 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076444602 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066096939 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067921171 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073948088 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073569849 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069022851 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067860005 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066798802 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067067229 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067112189 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07008442 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068049574 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066986086 seconds)
    (283/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073854015 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081328238 seconds)
    (285/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066985273 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067282378 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089728821 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067370834 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083857361 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067733311 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087404271 seconds)
    (292/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068858056 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06878582 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069938374 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07811135 seconds)
    (296/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082513699 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070111562 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069119106 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071247541 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076155655 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095353515 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069002475 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069043289 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094129599 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.221907154 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066691104 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068429211 seconds)
    (308/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081958373 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069283868 seconds)
  done (took 33.472789755 seconds)
done (took 34.823797254 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0856531 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103469422 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076582342 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096315847 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084377419 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100531007 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077998605 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082879859 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08534431 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084242629 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08329193 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.076285586 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078714877 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078850113 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076424698 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101983577 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08300871 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076957363 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076797204 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068089588 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076679215 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068618992 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068039123 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075651638 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079085314 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073556206 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07575944 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076010512 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066397301 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066589519 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071000582 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07559879 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065996287 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078539611 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075062374 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07455787 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077206053 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08079525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067851097 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069049406 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078299366 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068640523 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076657692 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074822731 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073535202 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078246805 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076703753 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081180063 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099950224 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071051347 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076759476 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07725806 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078055226 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072136653 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071749067 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074637809 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072452819 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097266643 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074747713 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071070607 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076008088 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075822119 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074900282 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076554383 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076686868 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07968867 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080953984 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075014357 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07924699 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075412633 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068398976 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077112614 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073716767 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069157545 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08039627 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082470007 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068090703 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075251587 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076578609 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076999831 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068074198 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074598965 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067957772 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072952714 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073121928 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073821058 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073340654 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075391159 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067771155 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076710711 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075605547 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076202232 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068215765 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081170317 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068194082 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074137923 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068398521 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067894103 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073144648 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067816768 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0733239 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077048502 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06796724 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072873978 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082268775 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068556237 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075437392 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06837026 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06808093 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079971588 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078843952 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068167018 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073936731 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067546453 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073910571 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067823868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068069815 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068141812 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068090208 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072400073 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068223732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073044114 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073541197 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081483878 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068307273 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072892236 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073422593 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06783904 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074706508 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068389546 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067939141 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067513278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082056373 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073271048 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06865864 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073781381 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073401371 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076194096 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067618722 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076830535 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074430567 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072681771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074384419 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067022527 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079249424 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073234726 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072852886 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067683691 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068015241 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066677411 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065743731 seconds)
done (took 12.905866721 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06932306 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116472346 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093531357 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092576436 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082608393 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067692313 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07383514 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091661577 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068547959 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099824244 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090909939 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091714383 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113645115 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068433705 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069176915 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070483662 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070553824 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080053128 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096338386 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090232979 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105885075 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066787068 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085950518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086570916 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083517793 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088278842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06777721 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067943514 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070178732 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090615381 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091764333 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070643629 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069104412 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.092720715 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084799001 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080134953 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067781733 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076406929 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06740544 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067970089 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070309432 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090006796 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077964569 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078716958 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070304366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07668606 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069903167 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08239497 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087641419 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075163043 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082127158 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091161399 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070735527 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083550474 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066423769 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082636741 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075852958 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067279362 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067081717 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072148955 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067274038 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069156024 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077920082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075894568 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071614855 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081509866 seconds)
  done (took 6.719164901 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08513304 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094855229 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086385234 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086364704 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068170489 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071895264 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069509596 seconds)
  done (took 2.063789378 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067419199 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088007039 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09094132 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090356747 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083051603 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092023134 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075456356 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068914001 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098869193 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069003174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090046064 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100769737 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073144093 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081681999 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094677635 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069426853 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094024929 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069173315 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069887885 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094137747 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074226509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096728359 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081030967 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069379057 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082346209 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069841152 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102285925 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077198035 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070775801 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070440959 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070309707 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096605732 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081921003 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080948509 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070727549 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084698988 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083053099 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072676319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080159715 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081420631 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082683255 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070391118 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068287511 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070550662 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072429946 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08105089 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068535294 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070793851 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070665622 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089109014 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067953655 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082331107 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073414607 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075498777 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074889078 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074659314 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077777685 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07098179 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089205572 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0710047 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087021163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08672556 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082786003 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086424093 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069510388 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082585122 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083199855 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070409413 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071242123 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070816995 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085997116 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072355365 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070948024 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080942239 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069379628 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094179174 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094252583 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069236383 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083657164 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070013103 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070694585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081497373 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094106481 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075304628 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070878642 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074456245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072153762 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072791083 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068433166 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07361194 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071038324 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075215406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07109828 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073662449 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072409905 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086702522 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069156925 seconds)
  done (took 9.105375568 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069660649 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06938985 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072055255 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071011162 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07036107 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070447844 seconds)
  done (took 1.95322119 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092303549 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068528364 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081275082 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06860774 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103857042 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083388464 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083729301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07914347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084122103 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082393786 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086460588 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089753051 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091015943 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073360325 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08602306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071545506 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086259431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075049712 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081835495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07340298 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084382261 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073037617 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0721187 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087898752 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072038278 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069417005 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077267667 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079692186 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079740751 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080197922 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07259349 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07418854 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077842647 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078201633 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08358822 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075966942 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068208017 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074675569 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070992661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071607094 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086046382 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072521584 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070429634 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074111978 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077312869 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075660441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074455631 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077016926 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083070519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074779526 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074437883 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069244964 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071569769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074278688 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076449833 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0776623 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07436981 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08320461 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070455693 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0757038 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068474862 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071530651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076939344 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071328592 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075673502 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074624277 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075996903 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070368526 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071119345 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068524243 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074408083 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068753309 seconds)
  done (took 7.048666596 seconds)
done (took 28.406055759 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516859189 seconds)
  done (took 2.001851359 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621391849 seconds)
  done (took 2.135723076 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.542029756 seconds)
  done (took 8.051786254 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405045741 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474577567 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742699616 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136456237 seconds)
  done (took 3.323663749 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705692763 seconds)
  done (took 2.219881995 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237863702 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232141098 seconds)
  done (took 1.989216697 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349029268 seconds)
  done (took 1.857947392 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.073649133 seconds)
  done (took 2.583276615 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240669704 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16255376 seconds)
  done (took 1.917947405 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448695831 seconds)
  done (took 1.957539285 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.198811352 seconds)
  done (took 5.713172495 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218613608 seconds)
  done (took 1.762713874 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234903125 seconds)
  done (took 1.745240685 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.739324541 seconds)
  done (took 3.246677627 seconds)
done (took 42.032514005 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083634661 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086156067 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085494357 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081626299 seconds)
  done (took 1.826993096 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075372188 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070685877 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07461545 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071079855 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075138764 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070899704 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072493853 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073458512 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070679041 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071173722 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070709848 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070786834 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073699366 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072505088 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069599112 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073813412 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074547522 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070775089 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073790086 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071102333 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068863658 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073319867 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073655368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069905683 seconds)
  done (took 3.245280932 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078304044 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073380396 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075717097 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072155687 seconds)
  done (took 1.816698393 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077233711 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088598891 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087373856 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07726132 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.08883801 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084297763 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067600303 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067695752 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068152536 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076924559 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066297594 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093213477 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086167026 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077116881 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07912589 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063959161 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065454969 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085234133 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077525185 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077984742 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068499571 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077399788 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066455648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088151819 seconds)
  done (took 3.370927972 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086837451 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.0663785 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086243358 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091879254 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093129953 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066390808 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084556901 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093575195 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.14040055 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067028032 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072154619 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066569372 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105137029 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066449564 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085665319 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110924342 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112666994 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070279614 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098893729 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066805026 seconds)
  done (took 3.254491104 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084055305 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070156011 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070833947 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065707662 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076353725 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072860018 seconds)
  done (took 1.963939638 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068862619 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069007552 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067988977 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067688558 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07285935 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067713388 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066287916 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068606635 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068292855 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068131015 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06784483 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067375013 seconds)
  done (took 2.339636025 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194056613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070820394 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071498641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066399687 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072316422 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066868283 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082434159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069654541 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09377623 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067322497 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067967719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069301833 seconds)
  done (took 2.513337088 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192427759 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074283392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22226763 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145143855 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103472459 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109002741 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111065509 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107513345 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133271818 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097850474 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153103587 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159900694 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103329364 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129035464 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087395601 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11986001 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144347798 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156251417 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099384201 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154761648 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135123134 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122189839 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141928024 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096569626 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101208819 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112871872 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07193346 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07863645 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16119665 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124569262 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135909881 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105122511 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090000546 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165161883 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156893794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131996888 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144673026 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081173149 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118091478 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128837731 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193477103 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086988101 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151742354 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103091772 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077886317 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125216549 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110140611 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115140623 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100859634 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086639605 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273852228 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175038762 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129496523 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083724852 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116588028 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105555246 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110308358 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114897603 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170288407 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150915006 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121451774 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069780839 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106174809 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143675632 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126336663 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105501343 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119717561 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092450044 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124032311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14913384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118486932 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133366493 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111766361 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08482313 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114672849 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13057388 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122590328 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163800323 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120241103 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072609924 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116717853 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095766733 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07783085 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141795175 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073596753 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165572192 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095498139 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120696807 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124863082 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104661744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105015473 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150129069 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134585557 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101733635 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087454972 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102424408 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117967116 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140897711 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085868514 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104046395 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10982839 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077718898 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127482613 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073503453 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116530266 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092203978 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11368225 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12039138 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076948219 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260697092 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099793276 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099291639 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122455598 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150446317 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087229185 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080558824 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156570642 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116649688 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100734814 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134917328 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149293255 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118845918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095029004 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137490388 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163601495 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087254953 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153072613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100755388 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080941625 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10238077 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117766207 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10645404 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118423199 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07860403 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114792883 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153901291 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073278868 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093047492 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126152431 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079630756 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077814047 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100698997 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09985286 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093095601 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097706905 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100720239 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130094513 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117296313 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10371454 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118359691 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093830148 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156525196 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084714072 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098919629 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100599899 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072802597 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12615818 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14712079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076227871 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150412733 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116072984 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111015976 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113848439 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081136087 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130484943 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076271573 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070450327 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13195271 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107789505 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103481381 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.28907101 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110021784 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119270111 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116033915 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127031275 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12322121 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122726924 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102409652 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086984861 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11028928 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123823657 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071321211 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089455039 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079812875 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099203013 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091125861 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081355218 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132563549 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115958741 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106810574 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109595493 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093261716 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140794763 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07623242 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118474518 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116411563 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092174172 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145757335 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143938348 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125569495 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097240896 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129431135 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071713436 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072797727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08629397 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11773641 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081201047 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081018183 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108490176 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141052121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119408959 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129676936 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117748505 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111565444 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148696928 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070757033 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116287618 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136303516 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115572016 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100727734 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08763634 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09455138 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136051714 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099628767 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170719352 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109281457 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117885395 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146366503 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097630135 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076325208 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099173188 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270085361 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099473227 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136407902 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095292632 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083955535 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10387373 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078586002 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096617295 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119558138 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113077591 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130008195 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107262597 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123035821 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075915565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10761558 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117346547 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115983792 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081751018 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111775461 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157134011 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093385088 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111093183 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141760377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076975593 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134055186 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162226791 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135428655 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082035857 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100980084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115970234 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120261305 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112481446 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130788506 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10021891 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130071074 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106698309 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082034837 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08346049 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092235405 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099485761 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109133224 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100685637 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109753689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092712059 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123229938 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098911835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106124565 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112294862 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09655873 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09251337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092875615 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163556157 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112532698 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158317508 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096797521 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135246137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149483801 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072385902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075882972 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077518081 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129281356 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081486625 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270301942 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107920269 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111207528 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118218941 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131064546 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093734354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069150452 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105663479 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126248051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117540327 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093584044 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100581522 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149738223 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114338326 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076564471 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107810401 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11155267 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100599988 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162907599 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079336516 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105105591 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07442617 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077439294 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119528804 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143410099 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080594977 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100290681 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114327258 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10686204 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119902268 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094588936 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107044495 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124827982 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138844922 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12014062 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08696755 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106306532 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122826143 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145185658 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10016516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096528593 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166654489 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143071371 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149615135 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085173439 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110017179 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109226676 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105323612 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127715872 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081241314 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151480701 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079529797 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127390698 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097963329 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087141036 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120991559 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107489024 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084884064 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135074782 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257241541 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081325939 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078904581 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107748171 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113599422 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099251899 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073000641 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130360005 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071485625 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12947268 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160324996 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077750834 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101744378 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092369428 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080530418 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100125943 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098594383 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083809139 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095816425 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160266963 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085692243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138809303 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12677467 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106230614 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12984579 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100104467 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639928504 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077598058 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142971488 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111229503 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16700564 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097906866 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116467793 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109631677 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117372335 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135622646 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098143619 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175257741 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123226442 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112762488 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076952501 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097847083 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09932351 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086235538 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102603203 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108617092 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109068398 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091505814 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112425345 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115760098 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079961021 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093037167 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146200069 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110485261 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134150724 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130705928 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081594719 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111635003 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12604572 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076937768 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.259623976 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146369415 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104158491 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100767897 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083750679 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101243594 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166393414 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07379279 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153229991 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120657357 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109661039 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113432922 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110185791 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128481716 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102935231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119719993 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093820528 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108804982 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112084494 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084255241 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115492289 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104412034 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10923769 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097426917 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096184788 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096453335 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142799303 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070448127 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094415701 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109619564 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136075832 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160991871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101627265 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081211329 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115335483 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113408383 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109549363 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11626045 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079195201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078828553 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079596194 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097443184 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119958787 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109161367 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113877497 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104658746 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151650785 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08174702 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22327556 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093387955 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101282184 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086765771 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078350824 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092883187 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092998173 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099798049 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106612975 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163743502 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092199841 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087071919 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089269717 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072608487 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081002291 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120148843 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104610216 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258312578 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101914184 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080044943 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10012087 seconds)
  done (took 56.852863115 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103933937 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077471808 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097882121 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145407214 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121006078 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199026559 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149785577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187868508 seconds)
  done (took 2.693616845 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068587249 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094599069 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103522527 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083068314 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066668685 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068318707 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223958186 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080758287 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066736974 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091286493 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077188012 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068486308 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.44466272 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06838312 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070297986 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078373235 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067374321 seconds)
  done (took 3.424836893 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38332557 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601086079 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358750817 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078046768 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.842609136 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088539814 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.149337601 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136866753 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081263326 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534018293 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370135398 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130385721 seconds)
  done (took 18.370724637 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081446474 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075572973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092570368 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092079886 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080156351 seconds)
  done (took 2.030877306 seconds)
done (took 105.23556413 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081379266 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431347344 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069411127 seconds)
  done (took 2.136667795 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090892941 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088290461 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089946937 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088880466 seconds)
  done (took 1.980426001 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074229682 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076769562 seconds)
  done (took 1.771854435 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22770979 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175397897 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100533074 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083544178 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080241962 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082980006 seconds)
  done (took 1.870200359 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073267724 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072714313 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073613963 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075931205 seconds)
  done (took 1.915051699 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067769025 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067033693 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071081509 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074025148 seconds)
  done (took 1.900246023 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083521797 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084079991 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081683108 seconds)
  done (took 1.870052209 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101189142 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094447836 seconds)
  done (took 1.818737757 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080834311 seconds)
  done (took 1.694535338 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090732029 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100633018 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132028572 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114347271 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138374933 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114316337 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084111464 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085170969 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078715029 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085788103 seconds)
  done (took 2.638038961 seconds)
done (took 21.793132637 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078683894 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369754843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36310624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090797301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669299525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35730645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966020776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092389778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141919289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069374333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086201834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649686774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961497152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326973721 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949108241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325013449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651907163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068768876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068322312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069198532 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956468467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068437014 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069566597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071181268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651063922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374287238 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070198119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326710391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068927881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073762394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35895387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070513724 seconds)
  done (took 16.110019746 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070640794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121800581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072980707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085297601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070960188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070078655 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071791967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069369533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121705274 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069177098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086835622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068295006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072690829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070122269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089379546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06875274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071517382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070211644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072326836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070393942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088378025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069844517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070149957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070316612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0699562 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082989142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071476747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069159909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070093711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074203414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074996412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070916077 seconds)
  done (took 4.075180427 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116332285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127189348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075812554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106966755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111948584 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070780923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145547568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093089267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129069694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069505479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08715987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069338238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103394767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07200131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090802581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070236709 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072485307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06993027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06973381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070301921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08863485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069327719 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070373772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070565609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071631387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086611402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071182674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06957853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06932222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074234242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075803914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071048029 seconds)
  done (took 4.33644223 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071029874 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073293863 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080957106 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082026617 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068228624 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070038181 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072024081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068057715 seconds)
  done (took 2.213429158 seconds)
done (took 28.35889342 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07864503 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06879354 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072828106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087386844 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075217773 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079067073 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065684219 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075020047 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072450259 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074899654 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075791516 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070446809 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072783797 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067473281 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074636094 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069072467 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084257564 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073172468 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08233506 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084082811 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072165164 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075309064 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077754982 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083344579 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08393298 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083875172 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078911243 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075643599 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070296728 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073147013 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07353426 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080805081 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082096578 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.085120231 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069604229 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069993175 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072905858 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070930393 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08481228 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079336107 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071693795 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079886127 seconds)
  done (took 4.800379579 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083941663 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088767889 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082731679 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079714615 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089871061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081853557 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08584566 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077404137 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077450049 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08601724 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074574768 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081065537 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078679609 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07268614 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077343923 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074621055 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078855724 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074082157 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076994843 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077022407 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086846464 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073457614 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087583875 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081722801 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076977766 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082152564 seconds)
  done (took 3.728437493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074104643 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085560313 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092449113 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143496928 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113187385 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081019568 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083483852 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094112158 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098877438 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070758247 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075014459 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09454779 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095398559 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07595893 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068907725 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083822621 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083788749 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069921767 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075208876 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097175006 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090056621 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088104637 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098029876 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089544263 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070123147 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073357193 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075951976 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08711357 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073383826 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082264942 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072640296 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073892536 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071492446 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08080664 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072917932 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069099933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.0945559 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080217742 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080859394 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068728752 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077381113 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06965267 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.0927943 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126658771 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067529114 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071645257 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071518855 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079216377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067312098 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094456255 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079484295 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067663779 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068426803 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067357481 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06734352 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070430802 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07069318 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070230802 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077829212 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074246553 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089094549 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072978465 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085165557 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067198845 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077941909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067076683 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069201655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066846344 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096198402 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069383419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111329785 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070083402 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066695455 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07876217 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077870141 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074087636 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067572116 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084932679 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079699619 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.0719504 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076514569 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070755175 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071739999 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097738564 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068205942 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067315655 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06678382 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071578705 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071063513 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068447056 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079773571 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067246511 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071531744 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085496584 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067852849 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068534207 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071466389 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070089408 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067265843 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07827886 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072275568 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069907435 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078538187 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068397362 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0713569 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080682614 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074640477 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066746701 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070128619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071234251 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069294356 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068938841 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071258181 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069480445 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074498623 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074642052 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07338357 seconds)
  done (took 10.750301889 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162115337 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155139103 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069927014 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147176577 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076568649 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080736509 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149990382 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096844591 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06974583 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070040361 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068661788 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108991324 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104399643 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114405748 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08076193 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069548013 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091212931 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115088015 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152472368 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149582307 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092849019 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079092559 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072553205 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070166446 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070404544 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077633557 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084721388 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077110007 seconds)
  done (took 4.428760255 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078510061 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102852329 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072719137 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090571961 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088158506 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068785291 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070046558 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06995589 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084215859 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077738503 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068455306 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073552475 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072392059 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071223214 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068999364 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075398524 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075540325 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067892361 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072322551 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073831602 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078206487 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093006986 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074085242 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07220915 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072750792 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07036054 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079384349 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083549776 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069702215 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105147654 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067415941 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074866704 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083807263 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069325715 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067945891 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068946049 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068638031 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06891071 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069985707 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066974253 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067005054 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071945438 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067155488 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076986289 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081141248 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070244415 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070467878 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071486857 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071184639 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065998771 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071732456 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071538437 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073370869 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077551606 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074122907 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07162329 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069552852 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095099019 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074182915 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06806544 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067490415 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067662916 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070763365 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078512865 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083666588 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07112377 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067264052 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068983224 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081508237 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081171301 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068077276 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073070715 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066344322 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070177257 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071723066 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071096022 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069509403 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067376329 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068150128 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068572898 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069433628 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068211703 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071542383 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071606417 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067164626 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067222089 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06934205 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070569329 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077549929 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067818679 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072261948 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070273697 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068827524 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072075641 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074444837 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073025197 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084480494 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081262188 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070326709 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068561226 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083232028 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073621843 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070172651 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077510627 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076118952 seconds)
  done (took 9.396833544 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090407066 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069242513 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087732315 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095068452 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080477373 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077067766 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08052028 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070265957 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086896652 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075675967 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078622336 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069467013 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081537461 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080153989 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071017372 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08131447 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074188339 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08822776 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085360605 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069514949 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079654879 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083201587 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082417634 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084867041 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084410634 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085535318 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083031109 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080400755 seconds)
  done (took 3.936896065 seconds)
done (took 38.664662513 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.716275841 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.87820976 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.699793371 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.892839726 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.775133483 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.721477559 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.888768533 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.697785152 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.917491142 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.745083787 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.017783069 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.211343816 seconds)
done (took 64.938123719 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.781510104 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.851357299 seconds)
    (2/2) benchmarking "String"...
    done (took 1.942043469 seconds)
  done (took 5.429349701 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.898274046 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.364239134 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.926955747 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.694131296 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.70346834 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.94794548 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.463926315 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.131258095 seconds)
  done (took 29.867838185 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.829834352 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.928835631 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.365139782 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.399673036 seconds)
  done (took 15.199144846 seconds)
done (took 61.916085896 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.718284759 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.72763687 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.705250756 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.694731282 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.780198287 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.702758603 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.092354918 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.790853496 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.692549663 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.701342691 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.694045967 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.108231243 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.705787527 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.147825541 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.693760552 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.696137202 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.705432784 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.241458731 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.844230422 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.710995882 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.700272541 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.693503723 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.691386391 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.698975148 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.705313527 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.691955546 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.086240028 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.698387549 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.534357782 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.694759554 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.750326314 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.278603429 seconds)
  done (took 202.012187346 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.694957831 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.479137923 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.6246462 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.735587875 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.933720278 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.868460107 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.791286883 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.063263541 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.696203744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.725139229 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.847217902 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.695232685 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.860818701 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.640099188 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.730336813 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.786943445 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.855756485 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.895211841 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.735122927 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.84088423 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.713349199 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.677481021 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.631680001 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.859099028 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.694607225 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.711848602 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.721100667 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.72064914 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.88022617 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.833372124 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.696208002 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.710428619 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.882983165 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.565717113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.719020907 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.715577001 seconds)
  done (took 165.869020362 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.881523206 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.697441542 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.694673476 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.694898889 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.701068672 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.695435145 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819780585 seconds)
    (7/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.697545268 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342576687 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820860716 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.329705731 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.751297803 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.696709979 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465618883 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.694965678 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761106935 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.709419762 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.696093557 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.710716087 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.724563992 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.695498582 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.696176331 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822373554 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.708506503 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.696216415 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705663408 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.69668703 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.701479031 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.081591354 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.696415454 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.917554053 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.697339254 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.700985178 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.810697703 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.934847729 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.692707598 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695098262 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.692165325 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.515264963 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.772802826 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.69442399 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.697902086 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.693157638 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.910645573 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.693333096 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.693459041 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.69514223 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.694582293 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.693752781 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.801973637 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.693961737 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816608817 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.695802837 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.178129769 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.694619483 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.6942625 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.953903634 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.281298893 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.693764578 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.696770902 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.694321786 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695752198 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.699807572 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.063721596 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.765788996 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.69728465 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.694622655 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.699916075 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.695744659 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.763411368 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696762417 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.041921879 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.709094463 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.823734605 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814926741 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697763754 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759097478 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785864753 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.695771773 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.694662921 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.695499201 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.695025859 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.775561083 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.695156268 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.780186189 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705530506 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.696611847 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.748844969 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.764471593 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.696341496 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522598022 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.695589455 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.695344336 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.942223511 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76104804 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.696421352 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.696745008 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.780736844 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817252446 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.42812064 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.696602279 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.405727213 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.695943794 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.772014938 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697448678 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.804040219 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.697087426 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.776646522 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703871323 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.697963105 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730777356 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.696480522 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.709260843 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.696375784 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.067492093 seconds)
  done (took 392.283844502 seconds)
done (took 763.742702236 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.311876331 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.272110698 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.36810379 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.290951797 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.26641644 seconds)
  done (took 13.14652693 seconds)
done (took 14.785618097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.774609855 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.779694552 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.716424614 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.778394925 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.711322878 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.777022461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.76186743 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.719738946 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.745271124 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.71860064 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.746563416 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.717462991 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.705208575 seconds)
  done (took 24.291047315 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919017421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.927221575 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76243307 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.926829733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.738473977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.92501711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.849244334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.841871543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838874553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.708060755 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707699535 seconds)
  done (took 21.782841657 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.926357372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.922405039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767501532 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.943702079 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.739395715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.946198592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.850920343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84096411 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.847482384 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.70838455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707049236 seconds)
  done (took 21.841318545 seconds)
done (took 69.553736055 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.700880031 seconds)
  done (took 3.339107328 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.721019172 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.873625893 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.701581672 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.70119037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.700167456 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.700707031 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.701129421 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.70169341 seconds)
  done (took 15.440913041 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.70057795 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.700791944 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.701424202 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.701336783 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.700911241 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.700339347 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.700932565 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.701920214 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.701708065 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.701651637 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.700741207 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.701264851 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.700545537 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.701064777 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.699829437 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.701281192 seconds)
  done (took 28.856838571 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.703765454 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.702587649 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.701955444 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.702399613 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.701618521 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.702044893 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.70338645 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.702691789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.701558906 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.703187257 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.702326455 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.701432127 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.701860581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.702002552 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.701334216 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.702707117 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.702340208 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.702282011 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.706738459 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.701625581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.701664562 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.7022836 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.70224156 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.701418393 seconds)
  done (took 42.501368266 seconds)
done (took 91.779115168 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.370721346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.753850948 seconds)
  done (took 9.763630378 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.703448996 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.702843798 seconds)
  done (took 5.051630981 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.702422216 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.70370633 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.70362914 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.702360291 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.703685311 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.703433104 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.703585655 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.703924796 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.703481521 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.703969249 seconds)
  done (took 18.6759669 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.703275959 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.703811628 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.703686246 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.703426316 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.703164014 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.703931193 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.703792157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.704465825 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.703938659 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.704171346 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.704175398 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.705625106 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.705365122 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.705856602 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.704443651 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.704958241 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.705257244 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.704446053 seconds)
  done (took 32.320323103 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.705825769 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.705158056 seconds)
  done (took 5.054030711 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.705556467 seconds)
    (2/7) benchmarking "second"...
    done (took 1.70498563 seconds)
    (3/7) benchmarking "month"...
    done (took 1.705417202 seconds)
    (4/7) benchmarking "year"...
    done (took 1.70602782 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.704450145 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.705429029 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.705701523 seconds)
  done (took 13.581013334 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.70551245 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.853408346 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.915469774 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.281462999 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.705627416 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.708770007 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.612174235 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.709716747 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.710235827 seconds)
  done (took 18.845983448 seconds)
done (took 104.935015819 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.611848108 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.70672934 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.974668066 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.775282956 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.728895013 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.999911254 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.727310318 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.988349394 seconds)
done (took 42.159070828 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.767610137 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.397658822 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.410638324 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.735269674 seconds)
  done (took 15.187326327 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.704521927 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.998836083 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.730409713 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.519147203 seconds)
  done (took 21.601991571 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.069236249 seconds)
    (2/2) benchmarking "read"...
    done (took 2.054173933 seconds)
  done (took 5.772146011 seconds)
done (took 50.976263528 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707080031 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.705758039 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.706137819 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.706587308 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.707620401 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.706678539 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.706787755 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.706070692 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.706358626 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.706335872 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.708200667 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.706361244 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.706543727 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706973027 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.706794073 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706609796 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708655034 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.706931503 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707188422 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.707126151 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707511486 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707886358 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.71012927 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.707205662 seconds)
  done (took 42.613787343 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.70745772 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.707094237 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.707089391 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.709710124 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.707801577 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.707856446 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.708296497 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.707675366 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.708647761 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.707943781 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70675989 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.70847047 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.708172355 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.707889046 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708338603 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.708029542 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.708871929 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708719038 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707586057 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.708978939 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.709886016 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708144676 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.708385802 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708024227 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.707979457 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707722822 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.709259296 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.708349885 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.709799097 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.709260034 seconds)
  done (took 52.894886381 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.712121237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.717077209 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.70885552 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.709357467 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.708619315 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.709060983 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.708970711 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.711238314 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.708868758 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.70892123 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.708448278 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.709424021 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.708970926 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.709230103 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.708889187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.709134947 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.709344983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.709925113 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.710836886 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.709464687 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.709794589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.710401561 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.710455853 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.70944156 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.710341207 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.709611774 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.709578876 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.710149238 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.709832033 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.709261601 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.710043139 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.710579237 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.709579768 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.709408276 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.710747582 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.709992987 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.714419702 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.717160712 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.710904958 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.710322529 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.712160967 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.710431288 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.711181265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.71216834 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.711099389 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.710308554 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.711626536 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.712417904 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.712100062 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.711664702 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.711619177 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.712044469 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.7120678 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.711879334 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.71182988 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.711270395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.711349214 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.712765619 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.711814977 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.712928828 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.711593971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.711332798 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.711481198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.712343468 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.71143168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.713275693 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.71148438 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.711781265 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.71293575 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.712347632 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.711997363 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.714068246 seconds)
  done (took 124.838375399 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.711931107 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.715418938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.714497877 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.713427824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7146161 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.714452882 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.713921834 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714257307 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714478122 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.713953236 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715206012 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.714689716 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715065708 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.715513085 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714747975 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.714349217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.714964642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714705197 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.714605322 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716091355 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.714572794 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.716003725 seconds)
  done (took 39.37162808 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715329095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.715088387 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.715418515 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.715453596 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.716609098 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.715427506 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.715907777 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.715223862 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7161225 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715520797 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717246986 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715787508 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.715919988 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7167221 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716967817 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.716466204 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716212214 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.716471359 seconds)
  done (took 32.541625626 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.716957329 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.715938072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.715310918 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.715974174 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.715288995 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.715925834 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716777795 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.715655621 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.71636881 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.716177063 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.7158544 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716316614 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.716317411 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717006061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716887711 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717446286 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.715772841 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716500656 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716992162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719332191 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.718145847 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716920008 seconds)
  done (took 39.418089488 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717295157 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.717257294 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.716693685 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.718694934 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716151034 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.716859531 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.717670513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.717779648 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.716754626 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.716519641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.717471561 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.716874103 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.717987022 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.718031773 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.717962436 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718367538 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.716801303 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.718098518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718620423 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.71721278 seconds)
  done (took 36.004441241 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.719884215 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718855834 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.719059052 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718956208 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718081972 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.718960839 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.719384215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.718653286 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.718993135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.718751257 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.720956809 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.719461067 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718842406 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.720245859 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.719991094 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.719945161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.719530491 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.719851668 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.719300134 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718937211 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.720923152 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72125507 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.721936901 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.722151129 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.720877479 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722227225 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721927297 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.72108225 seconds)
  done (took 49.815380382 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719267808 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.719193043 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.718423349 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.718766292 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.719954799 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.718822117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.720218372 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.719642041 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720053777 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.722683601 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.723066794 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.720436438 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.719406768 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.719987404 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7199535 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.720788686 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719401214 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.720974571 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720351545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719240182 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.720024565 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72043471 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.720677164 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721334182 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72017884 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.720431333 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720189021 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.720296017 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.720871605 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721785842 seconds)
  done (took 53.264578695 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.742372736 seconds)
    (2/2) benchmarking "in"...
    done (took 1.742643431 seconds)
  done (took 5.142907721 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.721508696 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721513579 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.720522149 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.721414278 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.720620267 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.720205334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.721706837 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720343052 seconds)
  done (took 15.42583502 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.721913267 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.721674142 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.720926551 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.722005707 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.720671937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.722388739 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728848037 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.721440983 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.724340311 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.72484216 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.728572315 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.730045687 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.725826449 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.723592435 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.723371451 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.725602675 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.722290892 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.722125974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.722833604 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.722386874 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722131999 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72601399 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.725553178 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.721385534 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.72492691 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.734214975 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.726634421 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.721652689 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.723362396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.727088289 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.724812569 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.722649682 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.72342332 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.721376798 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.723085003 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.723222067 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.731799941 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.725480757 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.730677896 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.724290729 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.723288144 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.723320152 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.725498126 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.726030289 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726975276 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.723525916 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.723974541 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.723598941 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.724123817 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.728246294 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.730996989 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724558289 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.723958203 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.728259648 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.726706499 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.732559235 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.726466123 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.727242846 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.733314306 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.735404826 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.736897956 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.733860611 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.727136105 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.724394228 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.733556065 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.74827004 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73496543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.726021182 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.724855667 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.725019983 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.731140428 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737560281 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.734736177 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.725995551 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.724405031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.725273851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727427758 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.724649471 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.732590497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.729801155 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.725313103 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.724227191 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.734530874 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747900319 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.72867392 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.724519804 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.725676471 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.725887907 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.726682028 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739317436 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.726445225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.724507987 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.726167822 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.727448434 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.72760672 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.726189436 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.725759091 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.728775664 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.726316222 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.726420039 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.726702342 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.730347048 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.737071555 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726385588 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72785797 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.733684873 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.727174863 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728847378 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.733941014 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.725621696 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.726993558 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.728839618 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.734149254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.727155516 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731281218 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.735893242 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.72680062 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.729974023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.728134429 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.727947667 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736719664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.752086576 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.727161258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.728385178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.732915658 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.738468169 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727358908 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.731623289 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.727745756 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.728502 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.727448139 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.732851507 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.728821936 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.730485118 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73063548 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.731793631 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.731407133 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.729529046 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.729657818 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.731853053 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.731147717 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.731796058 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.731985956 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.733281787 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.729503037 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.732379667 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.736568269 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.729629016 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.732256625 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.731050228 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.728108948 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728660464 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.731185288 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.729944887 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.730177938 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.728487265 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.729603541 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.728462417 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729432175 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.730249859 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730407267 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.730956948 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734581078 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.7299643 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.735463411 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.732547908 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.72959539 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.729881988 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.729762582 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.73027976 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.72997065 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.731418903 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.73334674 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.737142787 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.730336046 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.729889989 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.734263086 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.731420612 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.731124914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73055818 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.733433663 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.739477998 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.730810525 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.738109845 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.730833555 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729868519 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.73037522 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.731624402 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.731905431 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729837942 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.734866223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.738343375 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741437805 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740646056 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.732723278 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.73424248 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.733186949 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.736414628 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.737397465 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.732212401 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.733495367 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733494067 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734251507 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732344141 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.734633592 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.73096896 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.731043258 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.730434615 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.730143088 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.730836439 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.733153393 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.734979221 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.734810249 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.73118143 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.731700319 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.732233653 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.733220969 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.732721607 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.731417044 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.73188818 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.731582532 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.732197536 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.73788718 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.731989101 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735035903 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.734105845 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.733268271 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.731778738 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.732411196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736309353 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.735367968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7400815 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.734628574 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.734988039 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741722593 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.734759744 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.733166909 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.736289062 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.733221752 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.732895096 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.737739851 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.74116024 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.733078535 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.733531322 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.732924676 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.734748188 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.73268125 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.739939213 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.732954675 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.733987546 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.733213003 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.73637821 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.733475264 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.736709152 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.736528529 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.735583859 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737440706 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.73354724 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.732804429 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.735789674 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.732947768 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.734415677 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.734713745 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736907146 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.741056228 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.738834001 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.734960027 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.73655078 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.735589192 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.738741403 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.735641627 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.734609348 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.735474902 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745953741 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.742885326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741673381 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.737424844 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.734584417 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.741550068 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.738227635 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.740255464 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.737023166 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.736907408 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.737150287 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.737220851 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.734709481 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.738267956 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.735375553 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.73757918 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.73701201 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.739194114 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.736065103 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.736636311 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.735575087 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.735675861 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.735873477 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.736955812 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.735967505 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.739044042 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739048137 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.736026631 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.736959134 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742979726 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.738128369 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.737916785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.737548116 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.737781376 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.736511565 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.737676543 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.736449967 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.739112167 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.743474973 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.739952841 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.746786349 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.738124214 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746233546 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.736869274 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.740351796 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.743835659 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.735738835 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.736329908 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.73780102 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.735715152 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744877232 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.737442529 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.738370942 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.741041282 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736956887 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.737320815 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.737458492 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.736934327 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7381211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.73627495 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746266945 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.738485321 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.742380043 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.740023327 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.736880522 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.737613802 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.737291465 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.737216121 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742659047 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.736625935 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.73914962 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.738737577 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.73883665 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.73795431 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.738566091 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.737028857 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.737386001 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.737298332 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745742724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.738220059 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742458796 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.73724081 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.746843477 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.737379085 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745473412 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.738500312 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.739296765 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.737557418 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.737594949 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.74050067 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.739047559 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.740932115 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.739727486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.740371482 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.74257746 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.738415582 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.741451624 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.741548487 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.739690187 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.739990001 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748248192 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760033329 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.741784194 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742680316 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.73868586 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.741133617 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.743306352 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.739392476 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.739568547 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.741333934 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750213575 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746229003 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.742388116 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.739932325 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741743753 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740432299 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.739210165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.739886148 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.740801879 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.740074348 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.741327543 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.73993639 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745455004 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.739859934 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.742226713 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743191984 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.743426782 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.750431096 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.740286573 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.74215774 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740816311 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.740489001 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.74340135 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.742522888 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.740747622 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742903285 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.740677056 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.742757985 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748538664 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.74865345 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.744961883 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.74204176 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.741478504 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.743153893 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.742675818 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741675914 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.740682888 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740994021 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.743621879 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.74135036 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.744554583 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.740535697 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.740872256 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.743584279 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741602864 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745356399 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.750516334 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743152444 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.741435027 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.742487019 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741779269 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.742519733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.744388794 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.74963785 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745149518 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.753444745 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.751192877 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.746386516 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.743947796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745917843 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.751873931 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.741103134 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.744588973 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.742789302 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.74638269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.744404651 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.746937327 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743418609 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.751018293 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.745605398 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.742949185 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.752606998 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.746751543 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.743101558 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.745518606 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.748814406 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.744550954 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.74298759 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.742330527 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.744405765 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750835444 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.746886842 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744120005 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746435654 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.743291122 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.745926386 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.747641631 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743700217 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.746189114 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.743544004 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.7459587 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744109312 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.743885824 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.743366702 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.743371986 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.745084872 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.74705568 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.752656437 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.743371131 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.747742784 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.746490929 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.746364239 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.743859696 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74578611 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.746506915 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.744638124 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.745676125 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745124415 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.745239152 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.750202637 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.74573531 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.74633391 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.748409977 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745128719 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748237925 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.755348129 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.751353731 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.745059528 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.744993262 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.747330694 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.749121605 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746792794 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.744267156 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.747503442 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.747722569 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.745720646 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74661232 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.746189065 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748177036 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762453768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.74665256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747181566 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.747079287 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749716795 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.745640486 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.745403204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.745749611 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.749932599 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.750291322 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.752842459 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.746873361 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754848422 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747774396 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.746629419 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.749596021 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.74927927 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.753598441 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.749809232 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746077615 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.74587261 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.751442927 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.762377199 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745994194 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755842525 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775240758 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.748490498 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.748078842 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.746437144 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.748459567 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.746184132 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.748846658 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.74606549 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.747594502 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746405778 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.747232119 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.748273341 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753176047 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.749101829 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.747204523 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.746819536 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.747977249 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.747876194 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.747725875 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.747528634 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.747068084 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.74713929 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.747652882 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.747831268 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.748953474 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760899524 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.757886961 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.748418817 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.748716426 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.747809782 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.752963919 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.751446591 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.759875091 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.755595245 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.748351339 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.751431784 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.751424603 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748926932 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.747685999 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.750668872 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.750079926 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750474817 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.748479232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.761220964 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756413185 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.754513338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.749515308 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.748895672 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.748832015 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750954389 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749163936 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749143529 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.75145448 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.756808213 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.753304892 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.748327805 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.74903077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.753802657 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.756486414 seconds)
  done (took 1037.622138672 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74910836 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749009298 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.749296154 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749909976 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750070048 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749710054 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749548849 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749969652 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.749434454 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748235441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.754966727 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749837742 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749972001 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749541438 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749610599 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.75019517 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750028189 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.749807056 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750208259 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749902093 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749523525 seconds)
  done (took 38.433492485 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.750166411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.749829621 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751324532 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749852391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750186479 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.752829388 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.750316219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750900503 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750772218 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751077861 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75097603 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751451893 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.74971823 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.750814522 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751040966 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752329108 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.751394178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751157456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.750956106 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750498266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750443775 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.751416731 seconds)
  done (took 40.209952561 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.753236886 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.751088183 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.752470593 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.751838363 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.751839653 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.75118225 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.751889227 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.751812175 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.751375965 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.752452948 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.752141146 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.753151957 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.758973621 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.758239138 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.753894552 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.751775759 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.898081105 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.751417373 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.75231032 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.75255235 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.752731811 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.758721946 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.751898805 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.752259664 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.751425173 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.752968292 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.752863956 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.752241308 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.753164638 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.753542734 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.757553779 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.751752721 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.754483069 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.756366306 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.754038365 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.754143039 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.757089313 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.754251852 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.753550244 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.753536182 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.762995849 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.777620298 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.753240434 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.76100371 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.754531102 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.753764403 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.75748899 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.760986506 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.754163238 seconds)
  done (took 87.806109525 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.754371147 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.753802587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.753647314 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.754507451 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.754394365 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.755367668 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.75392793 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.754653612 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.75329468 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.754450031 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.75484494 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.755057995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.754188639 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.754671972 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.754312803 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.754464278 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.754305398 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754957241 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.754108679 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.755194195 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.75484745 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.753943576 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.754515468 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.756295131 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.756618594 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.756584315 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755541527 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.755369844 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.756669093 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.755698984 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.755761661 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755528068 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.756497774 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.755926458 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.755972919 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.756425714 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.757183401 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.755949539 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.75635954 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.757847199 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.757775103 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.756987989 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.757043091 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.756410637 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.756799533 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.758054081 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.756896222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.756882717 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.757139447 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.757280344 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.757836792 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.75791126 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.75777336 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.758395231 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.75737443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.757499437 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.756804776 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.757759118 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.757739178 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75794502 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.758440179 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.758643877 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.758361283 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.758997653 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.758062599 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.75883739 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.757488585 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.758345805 seconds)
  done (took 121.115853314 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759813982 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.759058533 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759138178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759044991 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758822302 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.760208614 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.759112021 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.759905854 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.759312964 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758159253 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758008716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.759264691 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.758749736 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.759004174 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.759789464 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759957838 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.759296838 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75985038 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759523766 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759964217 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.759788848 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.75963405 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.759074442 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760267749 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.75905496 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.759399961 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.759789435 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.758925839 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759743482 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.759765428 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.760653393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.760434895 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.760711084 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.759659669 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.761540543 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.76042023 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.759877078 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760805347 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.760713752 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.760948935 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.761020278 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760512174 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760057095 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.759982658 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760905103 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.761088798 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760197266 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.761179991 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760004348 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.760313072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.760934909 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760965818 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761035421 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.760723078 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.760967205 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.761262463 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761783946 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761098633 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761073756 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.761773983 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.760771322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.761400532 seconds)
  done (took 110.822929191 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760826841 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760046161 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.761148099 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.7606562 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761027506 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760985277 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759389561 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.761155266 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761160842 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.760538881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760825619 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760448251 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762284351 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760948024 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.762655566 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762668687 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761805923 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76240074 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761747176 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.760931902 seconds)
  done (took 36.920872136 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.763753037 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761564895 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.760998326 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760776421 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.761578667 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.76275329 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.76267675 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762096874 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762272336 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762334378 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761892084 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762910361 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762226936 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762310726 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.762834582 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762286092 seconds)
  done (took 29.893060085 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.762126469 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.762427155 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.762954972 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.763590717 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.76250274 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.763852991 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.7636166 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.762992701 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.762580519 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.763540121 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.763533968 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.762703527 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.762636185 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.763264586 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.762917648 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.763390204 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.76337388 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.762849997 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.764167334 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.764507037 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.763912641 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.763383921 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.762817664 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.762704648 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.763679844 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.764133394 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.764520819 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.76372738 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.763492174 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.763657861 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.76411405 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.764290679 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.764198024 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.763912497 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.764618654 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.764610353 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.764129379 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.764785733 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.76400885 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.763821042 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.76422328 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.764169348 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.763743889 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.764323966 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.76362774 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.76467883 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.763924406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.765144236 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.764173391 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.764922179 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.765408897 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.76560629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.764743092 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.765459288 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.765640842 seconds)
  done (took 98.712358109 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765514946 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.76496256 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765744359 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.765150199 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.765932271 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.76515021 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.764640319 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.768098234 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765849188 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.76462463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.765369551 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.76505935 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764556434 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.766299458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765516397 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766927139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.764483105 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.766076887 seconds)
  done (took 33.482146409 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766374543 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766080019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.765864721 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765104525 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.765989485 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.765051999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765978473 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.765282774 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764836541 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.76690024 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765250382 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.767031286 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765777138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.770418185 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767092023 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765930892 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.767083963 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766943468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766416042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766419264 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766717044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76701745 seconds)
  done (took 40.562276626 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.767229549 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.766696463 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.781758714 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.788307205 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.787817918 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.801019431 seconds)
  done (took 12.395897316 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766582382 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767836876 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.768272599 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767151965 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76899944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767972945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768099426 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769097838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768341091 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770452331 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768538747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767507901 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767794478 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768963464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770031883 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769159968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769207845 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768676368 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767624768 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767819549 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769705217 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767611087 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768425707 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767838326 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768478463 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768568409 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768325813 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768800892 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768601766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768304913 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768597443 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768331089 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769016593 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770025693 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768751462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768181972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769400153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7687966 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769853746 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769080897 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768681415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769262425 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768915342 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768655832 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769548531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770066593 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769108392 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769404941 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769333816 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770690821 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769324597 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770090545 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769935944 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770023864 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770774157 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770670444 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770049617 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770218577 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771443722 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771064113 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770366307 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764679946 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764871785 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765189422 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764427922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764369259 seconds)
  done (took 118.439676303 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765527258 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.76533396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764765274 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76539572 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764978748 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765169028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76572851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765063278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764838372 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765086915 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765810432 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765664115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765492368 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764785979 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765286943 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765003286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765774996 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765813266 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766987617 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766551508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765493078 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766631119 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766433824 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766429957 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765694352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765680882 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765989138 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765512535 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766044502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766193109 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76655961 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765946616 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766281757 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.766220204 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766294582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767240929 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76698001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766083635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767320572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767207539 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766347563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766832107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766907657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765973622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767277931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767894288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769609519 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769171563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770076768 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769040268 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768886311 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770073695 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76813694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767125578 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767092371 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766787966 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767441084 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766892801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768442915 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767759451 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767680038 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76893259 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767713585 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767135468 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768358281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767185173 seconds)
  done (took 118.303574264 seconds)
done (took 2417.703404974 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.860354294 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.885429367 seconds)
  done (took 15.449413497 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.934758675 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.885200856 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.771914297 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.809748813 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.774191482 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.80091208 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.78349555 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.771111622 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.770835751 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.77201833 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.771822568 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.955881976 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.828624061 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.772779343 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.773047569 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.863240575 seconds)
  done (took 50.754640099 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.774827348 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.776417154 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.785075232 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.77793677 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.775816733 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.786236376 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.806373532 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.778122761 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.808483937 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.787013495 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.843495283 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.784957997 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.776041001 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.824321559 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.787477561 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.790889528 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.866738764 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.849765959 seconds)
  done (took 34.087190652 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851574385 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.778701714 seconds)
  done (took 10.345082472 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.809645842 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.781951052 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.797442163 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.78905615 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.770208972 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.771980775 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.78952566 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.783119863 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.787110616 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.780316212 seconds)
  done (took 69.571495867 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.781221543 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.778206705 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.776250361 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.774350483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.772154587 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.77815167 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.773436625 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.77320609 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.46012526 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.81267457 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.78321384 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.781096758 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.77683652 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.776841809 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773073389 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.795941847 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.882660928 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.771129501 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.772716102 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.780402781 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.775214724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.834449441 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.789218202 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.776476939 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.805870426 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.45629151 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.783945643 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.780882279 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.883771247 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.772583195 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.775705221 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.96123186 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.777684845 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240956034 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.035870328 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.781782119 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.784475116 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.782134117 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.774465658 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.898858884 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.777412847 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.782282376 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.751224705 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.013659844 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.866866615 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.818906345 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.12172751 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.780879036 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.777228109 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.804999496 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.779022598 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.776512625 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.7894097 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.288898718 seconds)
  done (took 127.683772972 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.776340857 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.121268221 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940665112 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.776554886 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062903113 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980785357 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.775617761 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821197113 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.777710092 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.002200723 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028979624 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877812202 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.776725777 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.777137664 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776393155 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.774613342 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.926972746 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.845354668 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.77657506 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.774981303 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802245691 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014786896 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.897588732 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.778803352 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.801092836 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984161317 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.896257838 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.877310503 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.568428361 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.774966024 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83758024 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.778125679 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.776236937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.776297575 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.929713063 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.867619849 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856948846 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.778285453 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.775362341 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776219335 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.436475182 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973205944 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.86974808 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.90456185 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025750326 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979049199 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.552135843 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.774494436 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.513010652 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.937847339 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.003005121 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.003098389 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.897243324 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.779079651 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.1155717 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.775021771 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.775952073 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.024436135 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995762566 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.872796023 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.78004701 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.778013194 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777070536 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013995598 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.780867051 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.871877201 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.780320004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.777797263 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.872993139 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.874063125 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.003884766 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989186241 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.807605306 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.130319822 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.281299544 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.022045058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.84192458 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025986626 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.779499296 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778419443 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854852891 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.618952278 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032668546 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020080865 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.020224409 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811811331 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.498191397 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.777856473 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.002516325 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.9969991 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03678056 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022508169 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.010098658 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.098803285 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.777593158 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.778086232 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.081649083 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.344808211 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782305837 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.121097283 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007512574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.314470785 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804814438 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078842442 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.909223858 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.781865605 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.40366642 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.780388906 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.005489424 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.819046228 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.78052032 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779921541 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.996041019 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.769026104 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778479139 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.433924087 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.840055145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.783389037 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009179028 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.783439377 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046460135 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.781619425 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009346706 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.221982725 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809285709 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.95255539 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.025545616 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.782141963 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018515332 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020685528 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.893592917 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.000467136 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.487989683 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.782961946 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063180479 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.782619347 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.780445671 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.948298777 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.781471528 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.923044853 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.784422852 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.070337597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801555389 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009629623 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.784107505 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031456326 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.81308534 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830009854 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.786557939 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.90418756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784380061 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.604416154 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.939375537 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.785041189 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.780332876 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.333504879 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.782276146 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928486574 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.006831601 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802135014 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852200737 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.444618303 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.780739412 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.866270505 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803101715 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.165106615 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.78055194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.031378219 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.784219921 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.781056476 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.781387636 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.014759899 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.964293389 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.783349812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.781681757 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.684550202 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.781068597 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.781193528 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.961893969 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.153117847 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.782126691 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982008915 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786138643 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.909148481 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.786580602 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.855827555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115142913 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.782314999 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.782027236 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.782332669 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.783767262 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.782983428 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.988068213 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.807309539 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.275319711 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.919090173 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052787693 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.090815875 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.024683458 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.82519349 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787427838 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035845839 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.785573552 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.844847237 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.786016237 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.802903449 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008136473 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787245396 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991178658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051430047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.788375393 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830758237 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.785711554 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.783385805 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.783423361 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.92629969 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867088029 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.787095143 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.782998888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.897319454 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904991911 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993669015 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.78501162 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.815936262 seconds)
  done (took 882.740894356 seconds)
done (took 1192.33822002 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.784650132 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.784171336 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.788951959 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.7895617 seconds)
  done (took 28.86883617 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.78676862 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.786144946 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.786728865 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.785706521 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.785916893 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.78572607 seconds)
  done (took 12.43657417 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.780194065 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.787043653 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.788399789 seconds)
  done (took 21.076606447 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.8558497 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.19435471 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919380524 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.221385955 seconds)
  done (took 9.910973 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.786676177 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.786762417 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.785997149 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.787252907 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.787606299 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.787557462 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.786773849 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.788662517 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.788319705 seconds)
  done (took 17.808407748 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.820343037 seconds)
done (took 95.64451762 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.110088674 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.92111928 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.851551051 seconds)
    (4/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.845034511 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.885119805 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.165447761 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.788358515 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.997460062 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.694731199 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.792321138 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.570749383 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.05561787 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.889941579 seconds)
    (14/309) benchmarking ("sort", BigInt, false)...
    done (took 6.791999289 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.0574642 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.789892458 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.9521604 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.792028145 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.949093305 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.789020749 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.765050456 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.916720323 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.811495389 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.179917103 seconds)
    (25/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.815064804 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.876475516 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.872744417 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.901526653 seconds)
    (29/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.314144839 seconds)
    (30/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.952639709 seconds)
    (31/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.871325335 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.922226891 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.876849284 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.105113149 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.609873915 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.916038353 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.790146964 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.696668359 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.440063545 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.220347507 seconds)
    (41/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.006694821 seconds)
    (42/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.26499742 seconds)
    (43/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.870592899 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.788812903 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.894015064 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.693696846 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.92973277 seconds)
    (48/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.872936951 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.181221595 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.959116225 seconds)
    (51/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.544617252 seconds)
    (52/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.12680749 seconds)
    (53/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.894648635 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.788082214 seconds)
    (55/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.922318496 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.894961486 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.427522258 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.195872906 seconds)
    (59/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.921802964 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.470838445 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.017821314 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.914471919 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 2.005613786 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.02124662 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.074004924 seconds)
    (66/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.817706045 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920743568 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 5.433285049 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.891381661 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.038501316 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.790441501 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.854605634 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.095544146 seconds)
    (74/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.906072931 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.547989253 seconds)
    (76/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.202588362 seconds)
    (77/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.943021752 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.809342589 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.347739842 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.08507502 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.984046954 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.456494839 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.90178714 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.792730673 seconds)
    (85/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.957246277 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.606681115 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.14040537 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.030278666 seconds)
    (89/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.000523302 seconds)
    (90/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.79358976 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.812802567 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.806259132 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.933369253 seconds)
    (94/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.79798902 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.278922718 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.969008042 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.795079887 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.180228069 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.819317395 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.104490868 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.897084195 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.731447623 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.114582316 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.124731862 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.130856279 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.818104986 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.852452041 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.98489304 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.142295583 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.126839439 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.70523714 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.800149946 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.710338801 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.872367164 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.8607613 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.916322817 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.08014489 seconds)
    (118/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.918208754 seconds)
    (119/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.130640083 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.82545919 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.139482199 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.815598022 seconds)
    (123/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.238529271 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.107073031 seconds)
    (125/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.818899463 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.138135138 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.193940126 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.794230082 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.309734832 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.188485868 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.906861646 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.48630046 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.794903323 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.933767953 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.11469958 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.130400432 seconds)
    (137/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.826324257 seconds)
    (138/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.059459962 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.692492779 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.114013609 seconds)
    (141/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.986800124 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.814254136 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.013989774 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.818440146 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.27898648 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.042523961 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.275929054 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.988264523 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.109091821 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.920171445 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.116986767 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.823614388 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.806264908 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.283568852 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.045677539 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.438341649 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.579795309 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.795280614 seconds)
    (159/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.801574103 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.819678739 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.345698474 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.133154913 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.908052354 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.797995124 seconds)
    (165/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.846256269 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.817989617 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.793821042 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.774277357 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.977171345 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.798192362 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.653787527 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.914091792 seconds)
    (173/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.994262941 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.884165389 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.817166113 seconds)
    (176/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.874467189 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.79941869 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.963953907 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.857372573 seconds)
    (180/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.796413972 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.544567519 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.804091445 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.017451769 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.580436265 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.811300068 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.796624911 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.712735144 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.560418931 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.918583965 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.115146995 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.802771016 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.893770098 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.725246976 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.753912654 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.8069209 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.132035659 seconds)
    (197/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.006834989 seconds)
    (198/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.908752536 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.317057628 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.244055132 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.833349543 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.887358564 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.012862219 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.822436027 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.801710191 seconds)
    (206/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.930670561 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.963616928 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.802311811 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.945257221 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.892160615 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.844596123 seconds)
    (212/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.877896283 seconds)
    (213/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.812916802 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.517062923 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.257160168 seconds)
    (216/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.80300792 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.970233695 seconds)
    (218/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.012620558 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.824763438 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.414831418 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.876983308 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.934287992 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.803364999 seconds)
    (224/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.387954999 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.803906753 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.97024059 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.830341167 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.035697462 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 4.699155337 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.056279541 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.453859805 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.021494351 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.930130049 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.802106042 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.939850449 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.952865741 seconds)
    (237/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.079098394 seconds)
    (238/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.912549394 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.985283329 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.081736495 seconds)
    (241/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.210463642 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.803256639 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.82968023 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.069829669 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.842985791 seconds)
    (246/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.883781319 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.965693326 seconds)
    (248/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.867832266 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 5.572357445 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.940841349 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.866329926 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.804868651 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.103937391 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.937851019 seconds)
    (255/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.905749156 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.900601342 seconds)
    (257/309) benchmarking ("sort", Float32, false)...
    done (took 5.524333931 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.80719801 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.919808716 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.903015468 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.804357488 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.609059309 seconds)
    (263/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.823204379 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.587685308 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.813075131 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.806549556 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.041397897 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.862675466 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.215752752 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.134777425 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.928617 seconds)
    (272/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.163732032 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.20545064 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.820133355 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.882363829 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.024349528 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.204834186 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.912188522 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.179189425 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.059802931 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.21574612 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.64980662 seconds)
    (283/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.917573812 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.665219656 seconds)
    (285/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.726176629 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.809190173 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.864983076 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112469806 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.810742212 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.004224053 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.738434941 seconds)
    (292/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.986578326 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.197218934 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.022278776 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.594158826 seconds)
    (296/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.221769492 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.14972415 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.003324303 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.811507307 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.843524409 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.477693156 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.955414183 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.138211057 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.421340144 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.293969635 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.017848013 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.155776257 seconds)
    (308/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.375623896 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.294469814 seconds)
  done (took 990.32453733 seconds)
done (took 992.113389346 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.832774952 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829012067 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.809007632 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830886957 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.922643012 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.856832611 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.822828152 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.812692758 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.860554713 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.860322133 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.808131299 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.855056663 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.811333432 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.810468649 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.809734877 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830816375 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.115630288 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.839769789 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.828227399 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.822156027 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.828246364 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.808518299 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.85988048 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.853645867 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.815018329 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815194334 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.81365612 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.829589205 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.924064413 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.813487908 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.81409468 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.823636825 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.114107829 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.837218707 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.808538314 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.830178046 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.824410259 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.823067641 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.813826166 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844205418 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.256484395 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.816311538 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.812473807 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.810947464 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.810574966 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.818594313 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.811456348 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.819164761 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82876332 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829758064 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.248613803 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.83390763 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.81549339 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.812462147 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.82571227 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812767352 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.816125744 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831226304 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.83245242 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831111922 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.101506556 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.848754407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816153626 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.830227257 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821411739 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.284504801 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.817232879 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.819849228 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.257439427 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.826824832 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.284980851 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828056746 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.814771782 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828508982 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.845879543 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.116450004 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.838328295 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.811378952 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.822108148 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.811925257 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.824746682 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83010592 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.817925639 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.813644498 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830728921 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.861403312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.827929953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815979432 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.826444691 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.834880193 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.824873386 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.829321936 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.818552221 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.811781718 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.824897242 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.817100335 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.816229437 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.816672445 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.818723905 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827097924 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.258038366 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839014707 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.811406454 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.810908266 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.814205218 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.829314244 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.256947328 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.822170659 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.83741602 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.864456804 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.816191854 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.103905788 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.847730839 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833624083 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.826712074 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.818550875 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.813720502 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.104768107 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.283155271 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.837121806 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.814814431 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.814319082 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834610716 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.816744438 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.812238206 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.120518972 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.846843649 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833926544 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.937775712 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.828940539 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.848752626 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.813884452 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.819466182 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.865726089 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834549593 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84894049 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.817768769 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833906109 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.8336281 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.812496911 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.828407098 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.828656071 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.818122459 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825856084 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.815852058 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.868946627 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834847947 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834060228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.839311061 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.941109404 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816117448 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.105134166 seconds)
done (took 285.578802592 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.89316384 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.813476578 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.907079976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.813982351 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.90277561 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.89488061 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.814291881 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.814218888 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.815822408 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.307367731 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.815546796 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.818794098 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.816461677 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.814639772 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.885185305 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.814924531 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.815211052 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.293727864 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.815991523 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.896155248 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.813823732 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.815199856 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.815500354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.369994143 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81520463 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.812558397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.900638728 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.814469259 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.256939962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.814871315 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.815974321 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.3143984 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.900583076 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.843420148 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.823080773 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.820361916 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.910274925 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.826693813 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.889763159 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.884263823 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.910083006 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.848648599 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.817749472 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.815037523 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.819511468 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.817562266 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.815930978 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.848242925 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.816593441 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.821462382 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.256250568 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.823565547 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.820950604 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.816505644 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.815808057 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.84442908 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.816482796 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.81765333 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.898503294 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.816972224 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.885413571 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.309007113 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.353094772 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.817151314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.815577643 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.817706065 seconds)
  done (took 181.826498443 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.883522679 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.894383967 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.882070201 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.821173171 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.865877361 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.884766885 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.822280187 seconds)
  done (took 14.804791068 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.824088362 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.817730226 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866811654 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866830252 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.817642237 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.972559122 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817254978 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.82959193 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.824808527 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.844604664 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.818568925 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817675634 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.823082984 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.816377935 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.867175531 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.83059034 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934455013 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.821165946 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.81866857 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.967549096 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.823279279 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.825844052 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.843573837 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.830177221 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.819004179 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.826429086 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.386020015 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.818757639 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818362928 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.818200722 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818598887 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.860059389 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.818761937 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.818446885 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818284938 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.931594825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.81860388 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81926392 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.819933957 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.818782028 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.818241319 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.818377038 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.818939402 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.819057993 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.81912112 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.841813492 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819318877 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.819281729 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.819572977 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.820122309 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.845392208 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.819414718 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.819067617 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.824663729 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.862154367 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824056487 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.820240912 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.819104239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.820007467 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820288623 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.969232466 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.869020104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.819842353 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870689562 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.82084035 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820594042 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.821722587 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821121989 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.907991304 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.820398974 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.873999523 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.821409841 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.980997229 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.844039608 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821339882 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.823886817 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.824737216 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.8211221 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.820801957 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.827337686 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.820643058 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.823606367 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.827432276 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825324326 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819841321 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.932908372 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.961845392 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.821935272 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.823165062 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.828665688 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.820969683 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.865274864 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.8206935 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.821744874 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877655231 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937049004 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.84904036 seconds)
  done (took 200.870075127 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.82936654 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.829286477 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.823624474 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.838053593 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.822286052 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.82224047 seconds)
  done (took 12.719618219 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.827174028 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.826592743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.822286987 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.821866567 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.823278189 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.822702605 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.82318459 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825058383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.826546542 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.82189068 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.823513778 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.823487077 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.824355572 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.823509037 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.823682102 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.822657001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.824075804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.822904621 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.822778376 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822905567 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.074763767 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.823272432 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822909862 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.826073116 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.828267843 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.823683046 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.837662592 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.822811182 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.825424253 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.831381657 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.827901782 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.823932896 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.826994746 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.830735985 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.827862088 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.826773318 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.826854124 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.824450851 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.822714186 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.824194923 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.824236562 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824299017 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.824044651 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.823589554 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.825879426 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.831372911 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.828430469 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.837842484 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.824535218 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.823901502 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.824654903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.823810495 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.824831727 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.824444501 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.827940007 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830078 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.828785384 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.824050598 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.824507233 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.827940489 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.828712645 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.824464602 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.826752043 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.83216515 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.830076609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.826166049 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.827624287 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.828127558 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825774617 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.825725357 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.825905779 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.82472444 seconds)
  done (took 134.466337438 seconds)
done (took 546.452545615 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.834250944 seconds)
  done (took 8.592352881 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.968514551 seconds)
  done (took 8.809468261 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.409899944 seconds)
  done (took 10.169382044 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.844816171 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.874082425 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.829481744 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.824189741 seconds)
  done (took 29.144994461 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.049460141 seconds)
  done (took 8.808322218 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.837769499 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.823663867 seconds)
  done (took 15.4837109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.949758165 seconds)
  done (took 8.709468612 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.845618005 seconds)
  done (took 8.6237428 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.846947749 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.845068938 seconds)
  done (took 15.475299958 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.829099542 seconds)
  done (took 8.58765965 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.997164041 seconds)
  done (took 9.763099672 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.838297499 seconds)
  done (took 8.635188543 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.828426706 seconds)
  done (took 8.588647154 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.098963328 seconds)
  done (took 9.857680192 seconds)
done (took 161.010308769 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.83127259 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.824907329 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.823563704 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.824846738 seconds)
  done (took 29.063464603 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.858857163 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.858444943 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.860853831 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.870621567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.862172441 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.861609857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.851841518 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.851651285 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.870021249 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.861613655 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.860862474 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.862221579 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.861650123 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.851286312 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.861710528 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.861033111 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.870939842 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.861419194 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.852068951 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.861692047 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.827291161 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.87173407 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.862022534 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.827211549 seconds)
  done (took 46.361096272 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.018071697 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.897866269 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.981390727 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.880625594 seconds)
  done (took 9.538216619 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.878561957 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.879977579 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.891063866 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.930662232 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.977500521 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.889113171 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.850622252 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.847627691 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.834912057 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.880464295 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.955444236 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.87660211 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.965489142 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.828637603 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.014099127 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.82767688 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.828194695 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.879786763 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.931897531 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.944812573 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.828164255 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.879060659 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.883166461 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.876023865 seconds)
  done (took 47.139924503 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.829970458 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.837479567 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837390578 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.830666679 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.830103797 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830768371 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.836515222 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.831239378 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.850729698 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.831022909 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.829630935 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.830615805 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.836510352 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.829903912 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.829635966 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.843180008 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.844524099 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.830333955 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.837296505 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.836663144 seconds)
  done (took 38.45737401 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.827170442 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.675828172 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.17439815 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.080950234 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.827763113 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.828068332 seconds)
  done (took 31.176282285 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.842505633 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.835152804 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.830452541 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.885817387 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.971405704 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.837969524 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.83093766 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.839759422 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875677597 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.897481676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.849332003 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.858217884 seconds)
  done (took 24.11601461 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.834421167 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.830070686 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.830885641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.842557072 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.839933406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.83694683 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.837003987 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.82833714 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.842865735 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.847146105 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.836581907 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.841545339 seconds)
  done (took 43.815923785 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907106396 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.703805953 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271947901 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284118716 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353119777 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031745869 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.82882409 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.913648994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.831311041 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100030559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.114926344 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008115451 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072415827 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753923489 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865815594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.29842048 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109567338 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034366312 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852689209 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526509266 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862900416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371003909 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.524960158 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.864901884 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032560969 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.952928717 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.09451542 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.778516955 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878071424 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833450236 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834885944 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830214887 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101642298 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952206318 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899870221 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835528029 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241611218 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.534686331 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.835189214 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.504863912 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.176739183 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930528678 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834643528 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830715654 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758867327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409954598 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958807206 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.833877827 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.5325364 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.831961127 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837056907 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906550587 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.832613897 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.638536552 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513092703 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099347197 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.831516384 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83402001 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392186647 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868412162 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410463821 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.803019348 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.917515212 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477621648 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203930321 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.978178615 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.835121709 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833775098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759659193 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.483523514 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871768104 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970242001 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.850251207 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473333102 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131924784 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.172849716 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858734732 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095044063 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.798366347 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.80268327 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050611802 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782546961 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759929505 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.683154538 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.759842764 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045404562 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860014997 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.420581592 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862674829 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.914489122 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839081195 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847450753 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835044068 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048275506 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.728270506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834232914 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.038598661 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069620358 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850521757 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918516778 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760304121 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.835319897 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078910156 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.036558946 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.110111754 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.343362173 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911854278 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804732264 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.88688102 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.786338083 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880453526 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.098333223 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886708682 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857711935 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87606612 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.783741094 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070567263 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858309328 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.956726742 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.111962203 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046058916 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.157400083 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07472107 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897620746 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837934912 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.839469701 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546376905 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369332784 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.052511643 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.849880139 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359296957 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880981522 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.838148801 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772489313 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.523762661 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.110345718 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.887424716 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.051392393 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.823834908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150924931 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763795863 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974801455 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.831559129 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.050824245 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.473794919 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.903262253 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08507133 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.109539029 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.148904864 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884107764 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851638067 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929420726 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854786962 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.295674625 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122737325 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.84019534 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.840240686 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561102993 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.819715774 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843200362 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.84063401 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.389841071 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10984971 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855140107 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845234962 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713335535 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.850246319 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900535546 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841207957 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841287762 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.380015366 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.341385409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.84434047 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.525653999 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054234167 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842315714 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.527672679 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938745034 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850980282 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108924593 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897210861 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.76503825 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.540038558 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.540258235 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839654582 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766310674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.839691416 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843080527 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845574648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.026749226 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.10825686 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884115857 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.553790908 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873894762 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846558592 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.842515369 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841294335 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.359264503 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871443404 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415725556 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886219762 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969449034 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.851567336 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767926632 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.842820642 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844171517 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842666141 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.785939368 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887423351 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.54036373 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959820345 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088743876 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.245522552 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848841619 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.54852092 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.879907865 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.857990931 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.055891144 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.526038757 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.878767899 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859961003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.846499735 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.559000373 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.497096967 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404482978 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128928901 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154309219 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170848705 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.346036118 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.094153391 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926078906 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067817157 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362097886 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895855835 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929562863 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780401025 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856474264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.47644397 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178353507 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849766443 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058801888 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118595465 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.107486487 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947627035 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045727625 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871447885 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.788693571 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799685275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.379060776 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859007495 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.1790344 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018496076 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924357919 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.062635103 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.889032404 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.842515415 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182720304 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877484127 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.549987603 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19495876 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38464611 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.169047211 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037349901 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848992284 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.282884803 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185490658 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.172878641 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.894338058 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770184031 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.849185595 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.849029578 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.855465679 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.843626045 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.717909737 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.085832194 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849485611 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070805708 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.103984664 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130046299 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.771050382 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.847121143 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84355106 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083777591 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.666942426 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9298781 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.293952064 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376913666 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855680758 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771094685 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77134052 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.544952185 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85177829 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.817428376 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040276736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.936776999 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.52420769 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373494967 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085517981 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088164147 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.857824324 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110568041 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108703572 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.337006501 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864848349 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.942195827 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049374572 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.51690718 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.05999208 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071660046 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376899089 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063129705 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278623112 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.808633779 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.846014249 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051900416 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.061121715 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.129779817 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990536596 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.556548593 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.859895918 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145428706 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8969466 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.110332699 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998379675 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.932492225 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852436554 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921220974 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849247439 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.851774948 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.853970456 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856376193 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.108709672 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938190948 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.857183509 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922454951 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863576398 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.359458421 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.850824573 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114096189 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181159073 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160317206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898134176 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847764161 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847612042 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77384454 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976214121 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28768947 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120344152 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.968079456 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.982333036 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867117174 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049313044 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.213031468 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088042328 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12060272 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.729915669 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.706262663 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895876556 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.06781103 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853446512 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.050307038 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060420487 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133295402 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398585303 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.12984751 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967701457 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12000645 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.211177464 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848948108 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433301894 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.852577525 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201472155 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.872493199 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.115787208 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074066072 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852555495 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968878775 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.85264783 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.053529089 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.299988691 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553200603 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112792018 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.707612067 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.852984859 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11848603 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.162964654 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14132292 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924631424 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854530612 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.541594189 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982263699 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.716973082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.064993863 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849578248 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053705235 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.559938771 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.853208829 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113510289 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143145174 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.850813166 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.718075637 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854267622 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.853648227 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.064162417 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051222644 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08650962 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854136024 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.858452445 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.659228575 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119340532 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8994699 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776824772 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.852743716 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895542152 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077580546 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868697149 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.368012175 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.551586385 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115642661 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.747887448 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867755649 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403192035 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14809087 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161550775 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.382142172 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051546734 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393687316 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.852246913 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139776142 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.854082322 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436264054 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159505277 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.852862335 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.503918837 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891246498 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.116685971 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166127518 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.864837684 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560336201 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.800272821 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06639934 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204917234 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78329905 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854668798 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.900175439 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.853189642 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.838461038 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862331083 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.721459996 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399661377 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.62276537 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409249939 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.854939824 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860881388 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.109582449 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.537953694 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889560209 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871866812 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857741323 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.545571803 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.140814689 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097445674 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.510150522 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.885190136 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.854915379 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853919402 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773577984 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.039187051 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.040863452 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121998059 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.333221084 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.889052726 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855590216 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.060261111 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056034691 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.114607951 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952415666 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.128318098 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894681945 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.794968867 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.558386905 seconds)
  done (took 1646.592182217 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888186406 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.872036265 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.939375549 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.928816943 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908663676 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.96747776 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.95013242 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88654233 seconds)
  done (took 57.129117562 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.87196551 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.011898737 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.860361117 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.856285281 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.860115306 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.856283969 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.006816515 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.865820379 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.860139281 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.859813674 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.856827407 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.855705738 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.127033362 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.874452026 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.855893566 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.872805477 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.859991448 seconds)
  done (took 74.030317343 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.857622497 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.078236328 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.893979079 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.85603857 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.05777846 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.856753893 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.925292188 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.874104445 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.862293853 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.266027533 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.151399314 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888581053 seconds)
  done (took 90.358697326 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.862731262 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.85986672 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.858736341 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.85882045 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.858869967 seconds)
  done (took 11.09314031 seconds)
done (took 2150.673530546 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.086599913 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.048942516 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094847045 seconds)
  done (took 5.934049606 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.997954455 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.049781501 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.161344968 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.181233167 seconds)
  done (took 10.182592985 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.133380192 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.231778739 seconds)
  done (took 6.153651933 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.213204876 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.858480728 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.265817509 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.858885505 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.859370335 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.857457974 seconds)
  done (took 22.369234297 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.856901419 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.857079481 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.857058314 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.857758094 seconds)
  done (took 9.216837144 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.856390318 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.544843652 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.860074707 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.869528925 seconds)
  done (took 20.920352833 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.004492424 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.973765321 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.999813045 seconds)
  done (took 7.768061644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.998967198 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.706326374 seconds)
  done (took 6.494866143 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.015188866 seconds)
  done (took 3.804849462 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.885671664 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.12692696 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.342375204 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.358835343 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.427394526 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.693543118 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.171562674 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.09698652 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.258133135 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.277049507 seconds)
  done (took 24.428691138 seconds)
done (took 132.489704491 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.214851664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.878335831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.068236245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.22547744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.108395289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.061019592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.062584776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.213060939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.901267595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.886910073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.226953269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.101050065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.018497297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.878005347 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.026453868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.875048888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.093040201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.233735797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.908609867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.148152298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.081890746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.87165102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.064611803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.887431515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.095432503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.01474443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.418295369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.878097467 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.059867528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.432285622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.017378207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.297367848 seconds)
  done (took 168.040752209 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.860284606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858597474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.861199002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.860764073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.400554198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860750487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.859843123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.861590699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.339457928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.313017999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.861167307 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.390304679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860697219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.860777405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860316258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.860701181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.509110188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.861471336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.860435619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.861057579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.862556427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.241738686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.860960655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.258983365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.483933087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.862216872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.861828518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.859780614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.86175189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.861367501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.861275753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.861418722 seconds)
  done (took 209.39384972 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.846619057 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860449324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.860338335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862379584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.863231481 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.862997439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.862516863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.862105995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.664583399 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.65059484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.860893502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.863760306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.867026996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.862086138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862481374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.861041727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.863042546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.866186106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.865922959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.866355644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.864811544 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.478665624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.861926157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.487935235 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.862432574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.864405574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.864066189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.864409439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.864292791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.869796727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.868326994 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.862538132 seconds)
  done (took 220.243970061 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.10097851 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.863853267 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.864338202 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.861597873 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.863513164 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.863457812 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.838848746 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.11371314 seconds)
  done (took 19.171008645 seconds)
done (took 618.654953365 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.256183514 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.092709522 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.032545156 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.887570978 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.125318512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.924854975 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.884215181 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.951725255 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.687004303 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.954939906 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.541321419 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.905532327 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.635314309 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.910053938 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.003425465 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.943711219 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.467592572 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.572721224 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.052810323 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.945858023 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.057897528 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.773381936 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.963135034 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.711215797 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.658484932 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.832042399 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.888316353 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.472044781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.895144055 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.039177777 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.548258053 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.118338504 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.896319367 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.882016348 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.939314885 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.916163364 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.077637784 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.893531361 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.009768662 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.571526312 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.941682306 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.581500195 seconds)
  done (took 102.239173433 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.873778294 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.872082347 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.871480708 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.8704963 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.881152191 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.870359468 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.870844994 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.870868075 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.870654876 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.871106685 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.871164704 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.880611529 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.871600458 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.880527921 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.872012836 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.871367867 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.871978298 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.881562221 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.872836321 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.871972052 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.872396666 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.871020908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.867808448 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.871975084 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.872192618 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.872047822 seconds)
  done (took 50.505086011 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.867709301 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.019541831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.10286169 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.885900031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.8684548 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.870878319 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.885533867 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.871617528 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.869698489 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.870483333 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.95651534 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.872315543 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.88409815 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.104331418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.881500692 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.867041067 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.867484014 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.868847064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.024145933 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.881802483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.887475787 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.871476471 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.886284026 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.880690722 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.869948886 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.869531008 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.873287214 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.364656103 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.87634509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.95983932 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.912161114 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.892248634 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.307819593 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.111629689 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.922009865 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.876743354 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.868714888 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.963023223 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.874990127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.86948502 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.886093881 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.874832334 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.106872254 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.395016127 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.882770255 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.868555516 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.376682222 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.970557102 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.909619901 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.878633223 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.109860422 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.88468854 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.87021748 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.870672835 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.908650119 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.876002794 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.870135464 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.231651886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.881190178 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.887648124 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.873279366 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.870488043 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.030191065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.877811992 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.020439885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.878694192 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.876613301 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.872210977 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.109748286 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885208103 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.404733709 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.882337315 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.870640382 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.95804992 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.022906379 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398778372 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.882287367 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.030471768 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.326526874 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.893019052 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.878275278 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.356988759 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.89675695 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.877666332 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.872586204 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.872692902 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.870133941 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.914726923 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.886241107 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.327803492 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.408976605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.247312558 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.895636737 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.886564549 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.871434435 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.229164801 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.878657826 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.871626006 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.101336158 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.417372656 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.885069454 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.876938046 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.383678711 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.883045511 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.887526077 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.877724988 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.111442374 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.884284912 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.913590315 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.868981845 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.876391087 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.872789588 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.887425529 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.877265562 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.870103689 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.378694074 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.974831074 seconds)
  done (took 232.439420797 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.869929761 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.870739423 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.869302304 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.870072296 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.869554321 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.870159404 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.869677577 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.868212229 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.871194101 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.870301024 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.869252511 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.872852335 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.872873219 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.869320355 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.909556792 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.871081548 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.471303726 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.869913454 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.86853952 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.871276621 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.510477312 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.873578375 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.870700699 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.869647545 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.870550485 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.871278543 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.878850753 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.376743791 seconds)
  done (took 167.971120486 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.873248666 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.090521475 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.893745715 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.922473091 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.880281071 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.873050059 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.031363181 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.896817165 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.879690857 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.873830293 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.87312197 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.934725215 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.88456327 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.972026292 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.906320427 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.979717239 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.977540373 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.880278072 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.874600656 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.873941457 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.903731273 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.883268244 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.933724317 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.998625577 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.893638454 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.987204648 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.895157678 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.874840839 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.875198545 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.986409255 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.893820658 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.935416951 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.90540842 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.893522656 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.992315385 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.991485672 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.977291534 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.978254882 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.880872923 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.875036119 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.8754528 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.876223574 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.988463469 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.894441084 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.876350971 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.991111435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.895304684 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.876368226 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.876003048 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.876064849 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.888959359 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.894438239 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.939941307 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.005153598 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.912526806 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.899167504 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.973920051 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.997981267 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.876009391 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973312854 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.884188341 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.988392164 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.896435998 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.877465804 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.88027418 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.881643944 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.908068695 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.983646103 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.981475775 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.88462726 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.975354488 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.911859432 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.88315424 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.87707913 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.87634356 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.98839398 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.994791643 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.912751326 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.914127961 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.90732624 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.887101807 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.87763096 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.878438199 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.894252553 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.881378537 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.989633913 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.995604586 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.883935919 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.877504942 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.878014018 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.878028882 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.902105471 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.998264551 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.914035879 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984393239 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.942790025 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.951285269 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.892599044 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.891349255 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.882408984 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.940866934 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.893825155 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.889757164 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.169437428 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.938045268 seconds)
  done (took 203.642783993 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.276477382 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.927626099 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.935596881 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.19827196 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.226049585 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.90816816 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.92490317 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.923012031 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.948368245 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.107258003 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.004061159 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.945582734 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.913649307 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.899503901 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.92413607 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.9453576 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.932543722 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.265981032 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.128704359 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.077771121 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.917115159 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.193995436 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.231168904 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.505070365 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.976609768 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.330591854 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.484059291 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.058766196 seconds)
  done (took 61.928628421 seconds)
done (took 820.524612656 seconds)
SAVING RESULT...
DONE!
